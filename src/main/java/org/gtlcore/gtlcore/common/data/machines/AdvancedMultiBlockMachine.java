package org.gtlcore.gtlcore.common.data.machines;

import org.gtlcore.gtlcore.GTLCore;
import org.gtlcore.gtlcore.api.machine.multiblock.GTLPartAbility;
import org.gtlcore.gtlcore.api.pattern.GTLPredicates;
import org.gtlcore.gtlcore.client.renderer.machine.EyeOfHarmonyRenderer;
import org.gtlcore.gtlcore.client.renderer.machine.SpaceElevatorRenderer;
import org.gtlcore.gtlcore.common.block.GTLFusionCasingBlock;
import org.gtlcore.gtlcore.common.data.GTLBlocks;
import org.gtlcore.gtlcore.common.data.GTLMachines;
import org.gtlcore.gtlcore.common.data.GTLRecipeModifiers;
import org.gtlcore.gtlcore.common.data.GTLRecipeTypes;
import org.gtlcore.gtlcore.common.machine.multiblock.electric.*;
import org.gtlcore.gtlcore.common.machine.multiblock.noenergy.HeatExchangerMachine;
import org.gtlcore.gtlcore.common.machine.multiblock.noenergy.NeutronActivatorMachine;
import org.gtlcore.gtlcore.utils.MachineIO;
import org.gtlcore.gtlcore.utils.Registries;

import com.gregtechceu.gtceu.GTCEu;
import com.gregtechceu.gtceu.api.GTValues;
import com.gregtechceu.gtceu.api.data.RotationState;
import com.gregtechceu.gtceu.api.data.chemical.ChemicalHelper;
import com.gregtechceu.gtceu.api.data.tag.TagPrefix;
import com.gregtechceu.gtceu.api.machine.MultiblockMachineDefinition;
import com.gregtechceu.gtceu.api.machine.feature.IRecipeLogicMachine;
import com.gregtechceu.gtceu.api.machine.multiblock.CoilWorkableElectricMultiblockMachine;
import com.gregtechceu.gtceu.api.machine.multiblock.PartAbility;
import com.gregtechceu.gtceu.api.machine.multiblock.WorkableElectricMultiblockMachine;
import com.gregtechceu.gtceu.api.machine.multiblock.WorkableMultiblockMachine;
import com.gregtechceu.gtceu.api.pattern.FactoryBlockPattern;
import com.gregtechceu.gtceu.api.pattern.MultiblockShapeInfo;
import com.gregtechceu.gtceu.api.pattern.Predicates;
import com.gregtechceu.gtceu.api.pattern.util.RelativeDirection;
import com.gregtechceu.gtceu.api.recipe.GTRecipeType;
import com.gregtechceu.gtceu.api.recipe.OverclockingLogic;
import com.gregtechceu.gtceu.api.recipe.RecipeHelper;
import com.gregtechceu.gtceu.client.renderer.machine.FusionReactorRenderer;
import com.gregtechceu.gtceu.common.data.*;
import com.gregtechceu.gtceu.common.machine.multiblock.electric.FusionReactorMachine;
import com.gregtechceu.gtceu.utils.FormattingUtil;

import net.minecraft.ChatFormatting;
import net.minecraft.core.BlockPos;
import net.minecraft.core.Direction;
import net.minecraft.network.chat.Component;
import net.minecraft.network.chat.Style;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.server.MinecraftServer;
import net.minecraft.world.entity.Entity;
import net.minecraft.world.entity.item.ItemEntity;
import net.minecraft.world.entity.player.Player;
import net.minecraft.world.item.ItemStack;
import net.minecraft.world.item.Items;
import net.minecraft.world.level.Level;
import net.minecraft.world.level.LightLayer;
import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.block.DirectionalBlock;
import net.minecraft.world.phys.AABB;

import com.hepdd.gtmthings.data.CustomMachines;

import java.util.*;

import static com.gregtechceu.gtceu.api.pattern.Predicates.*;
import static com.gregtechceu.gtceu.api.pattern.util.RelativeDirection.*;
import static com.gregtechceu.gtceu.common.registry.GTRegistration.REGISTRATE;

@SuppressWarnings("unused")
public class AdvancedMultiBlockMachine {

    public static void init() {}

    public final static MultiblockMachineDefinition GREENHOUSE = REGISTRATE.multiblock("greenhouse", GreenhouseMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .allowExtendedFacing(false)
            .recipeType(GTLRecipeTypes.GREENHOUSE_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.greenhouse.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.greenhouse.tooltip.1"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.greenhouse")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .appearanceBlock(GTBlocks.MACHINE_CASING_ULV)
            .recipeModifier(GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK))
            .pattern((definition) -> FactoryBlockPattern.start()
                    .aisle("0BBB0", "0BBB0", "0BBB0", "0BBB0")
                    .aisle("BBBBB", "B###B", "B###B", "BGGGB")
                    .aisle("BBBBB", "B###B", "B###B", "BGGGB")
                    .aisle("BBBBB", "B###B", "B###B", "BGGGB")
                    .aisle("0BBB0", "0BEB0", "0BBB0", "0BBB0")
                    .where("E", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("G", Predicates.blocks(GTBlocks.CASING_TEMPERED_GLASS.get()))
                    .where("B", Predicates.blocks(GTBlocks.MACHINE_CASING_ULV.get())
                            .setMinGlobalLimited(40)
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where("#", Predicates.air())
                    .where("0", Predicates.any())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/voltage/ulv/side"), GTCEu.id("block/multiblock/implosion_compressor"))
            .register();

    public final static MultiblockMachineDefinition EYE_OF_HARMONY = REGISTRATE.multiblock("eye_of_harmony", HarmonyMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .allowExtendedFacing(false)
            .recipeType(GTLRecipeTypes.COSMOS_SIMULATION_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.eye_of_harmony.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.eye_of_harmony.tooltip.1"))
            .tooltips(Component.translatable("gtceu.machine.eye_of_harmony.tooltip.2"))
            .tooltips(Component.translatable("gtceu.machine.eye_of_harmony.tooltip.3"))
            .tooltips(Component.translatable("gtceu.machine.eye_of_harmony.tooltip.4"))
            .tooltips(Component.translatable("gtceu.machine.eye_of_harmony.tooltip.5"))
            .tooltips(Component.translatable("gtceu.machine.eye_of_harmony.tooltip.6"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.cosmos_simulation")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifier(HarmonyMachine::recipeModifier)
            .appearanceBlock(GTBlocks.HIGH_POWER_CASING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle
                    .aisle("                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "               A A               ", "               A A               ", "               A A               ", "               A A               ", "              DDDDD              ", "             DDADADD             ", "         AAAADAADAADAAAA         ", "             DDDDDDD             ", "         AAAADAADAADAAAA         ", "             DDADADD             ", "              DDDDD              ", "               A A               ", "               A A               ", "               A A               ", "               A A               ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ")
                    .aisle("                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "               A A               ", "               A A               ", "               A A               ", "                D                ", "                D                ", "             DDDDDDD             ", "            DD     DD            ", "            D  EEE  D            ", "       AAA  D EFFFE D  AAA       ", "          DDD EFFFE DDD          ", "       AAA  D EFFFE D  AAA       ", "            D  EEE  D            ", "            DD     DD            ", "             DDDDDDD             ", "                D                ", "                D                ", "               A A               ", "               A A               ", "               A A               ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ")
                    .aisle
                    .aisle("                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "               A A               ", "              AAAAA              ", "                D                ", "                F                ", "                F                ", "                                 ", "                                 ", "                                 ", "                                 ", "      A                   A      ", "     AA                   AA     ", "      ADFF             FFDA      ", "     AA                   AA     ", "      A                   A      ", "                                 ", "                                 ", "                                 ", "                                 ", "                F                ", "                F                ", "                D                ", "              AAAAA              ", "               A A               ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ")
                    .aisle("                                 ", "                                 ", "                                 ", "                                 ", "               A A               ", "               A A               ", "                D                ", "             GEEFEEG             ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "       G                 G       ", "       E                 E       ", "    AA E                 E AA    ", "      DF                 FD      ", "    AA E                 E AA    ", "       E                 E       ", "       G                 G       ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "             GEEFEEG             ", "                D                ", "               A A               ", "               A A               ", "                                 ", "                                 ", "                                 ", "                                 ")
                    .aisle("                                 ", "                                 ", "                                 ", "               A A               ", "              AAAAA              ", "                D                ", "                F                ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "    A                       A    ", "   AA                       AA   ", "    ADF                   FDA    ", "   AA                       AA   ", "    A                       A    ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                F                ", "                D                ", "              AAAAA              ", "               A A               ", "                                 ", "                                 ", "                                 ")
                    .aisle("                                 ", "                                 ", "               A A               ", "               A A               ", "                D                ", "             GEEFEEG             ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "     G                     G     ", "     E                     E     ", "  AA E                     E AA  ", "    DF                     FD    ", "  AA E                     E AA  ", "     E                     E     ", "     G                     G     ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "             GEEFEEG             ", "                D                ", "               A A               ", "               A A               ", "                                 ", "                                 ")
                    .aisle("                                 ", "                                 ", "               A A               ", "                D                ", "                F                ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "  A                           A  ", "   DF                       FD   ", "  A                           A  ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                F                ", "                D                ", "               A A               ", "                                 ", "                                 ")
                    .aisle("                                 ", "               A A               ", "               A A               ", "                D                ", "                F                ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", " AA                           AA ", "   DF                       FD   ", " AA                           AA ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                F                ", "                D                ", "               A A               ", "               A A               ", "                                 ")
                    .aisle("                                 ", "               A A               ", "                D                ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", " A                             A ", "  D                           D  ", " A                             A ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                D                ", "               A A               ", "                                 ")
                    .aisle
                    .aisle("               A A               ", "               A A               ", "             DDDDDDD             ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "  D                           D  ", "  D                           D  ", "AAD                           DAA", "  D                           D  ", "AAD                           DAA", "  D                           D  ", "  D                           D  ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "             DDDDDDD             ", "               A A               ", "               A A               ")
                    .aisle("               A A               ", "              DDDDD              ", "            DD     DD            ", "                                 ", "                                 ", "       G                 G       ", "                                 ", "     G                     G     ", "                                 ", "                                 ", "                                 ", "                                 ", "  D                           D  ", "  D                           D  ", " D                             D ", "AD                             DA", " D                             D ", "AD                             DA", " D                             D ", "  D                           D  ", "  D                           D  ", "                                 ", "                                 ", "                                 ", "                                 ", "     G                     G     ", "                                 ", "       G                 G       ", "                                 ", "                                 ", "            DD     DD            ", "              DDDDD              ", "               A A               ")
                    .aisle("               A A               ", "             DDADADD             ", "            D  EEE  D            ", "                                 ", "      A                   A      ", "       E                 E       ", "    A                       A    ", "     E                     E     ", "                                 ", "                                 ", "                                 ", "                                 ", "  D                           D  ", " D                             D ", " D                             D ", "AAE                           EAA", " DE                           ED ", "AAE                           EAA", " D                             D ", " D                             D ", "  D                           D  ", "                                 ", "                                 ", "                                 ", "                                 ", "     E                     E     ", "    A                       A    ", "       E                 E       ", "      A                   A      ", "                                 ", "            D  EEE  D            ", "             DDADADD             ", "               A A               ")
                    .aisle("            AAAAAAAAA            ", "         AAAADAADAADAAAA         ", "       AAA  D EFFFE D  AAA       ", "      AA                 AA      ", "     AA                   AA     ", "    AA E                 E AA    ", "   AA                       AA   ", "  AA E                     E AA  ", "  A                           A  ", " AA                           AA ", " A                             A ", " A                             A ", "AAD                           DAA", "AD                             DA", "AAE                           EAA", "AAF                           FAA", "ADF                           FDA", "AAF                           FAA", "AAE                           EAA", "AD                             DA", "AAD                           DAA", " A                             A ", " A                             A ", " AA                           AA ", "  A                           A  ", "  AA E                     E AA  ", "   AA                       AA   ", "    AA E                 E AA    ", "     AA                   AA     ", "      AA                 AA      ", "       AAA  D EFFFE D  AAA       ", "         AAAADAADAADAAAA         ", "            AAAAAAAAA            ")
                    .aisle("               A A               ", "             DDDDDDD             ", "          DDD EFFFE DDD          ", "        DD             DD        ", "      ADFF             FFDA      ", "      DF                 FD      ", "    ADF                   FDA    ", "    DF                     FD    ", "   DF                       FD   ", "   DF                       FD   ", "  D                           D  ", "  D                           D  ", "  D                           D  ", " D                             D ", " DE                           ED ", "ADF                           FDA", " DF                           FD ", "ADF                           FDA", " DE                           ED ", " D                             D ", "  D                           D  ", "  D                           D  ", "  D                           D  ", "   DF                       FD   ", "   DF                       FD   ", "    DF                     FD    ", "    ADF                   FDA    ", "      DF                 FD      ", "      ADFF             FFDA      ", "        DD             DD        ", "          DDD EFFFE DDD          ", "             DDDDDDD             ", "               A A               ")
                    .aisle("            AAAAAAAAA            ", "         AAAADAADAADAAAA         ", "       AAA  D EFFFE D  AAA       ", "      AA                 AA      ", "     AA                   AA     ", "    AA E                 E AA    ", "   AA                       AA   ", "  AA E                     E AA  ", "  A                           A  ", " AA                           AA ", " A                             A ", " A                             A ", "AAD                           DAA", "AD                             DA", "AAE                           EAA", "AAF                           FAA", "ADF                           FDA", "AAF                           FAA", "AAE                           EAA", "AD                             DA", "AAD                           DAA", " A                             A ", " A                             A ", " AA                           AA ", "  A                           A  ", "  AA E                     E AA  ", "   AA                       AA   ", "    AA E                 E AA    ", "     AA                   AA     ", "      AA                 AA      ", "       AAA  D EFFFE D  AAA       ", "         AAAADAADAADAAAA         ", "            AAAAAAAAA            ")
                    .aisle("               A A               ", "             DDADADD             ", "            D  EEE  D            ", "                                 ", "      A                   A      ", "       E                 E       ", "    A                       A    ", "     E                     E     ", "                                 ", "                                 ", "                                 ", "                                 ", "  D                           D  ", " D                             D ", " D                             D ", "AAE                           EAA", " DE                           ED ", "AAE                           EAA", " D                             D ", " D                             D ", "  D                           D  ", "                                 ", "                                 ", "                                 ", "                                 ", "     E                     E     ", "    A                       A    ", "       E                 E       ", "      A                   A      ", "                                 ", "            D  EEE  D            ", "             DDADADD             ", "               A A               ")
                    .aisle("               A A               ", "              DDDDD              ", "            DD     DD            ", "                                 ", "                                 ", "       G                 G       ", "                                 ", "     G                     G     ", "                                 ", "                                 ", "                                 ", "                                 ", "  D                           D  ", "  D                           D  ", " D                             D ", "AD                             DA", " D                             D ", "AD                             DA", " D                             D ", "  D                           D  ", "  D                           D  ", "                                 ", "                                 ", "                                 ", "                                 ", "     G                     G     ", "                                 ", "       G                 G       ", "                                 ", "                                 ", "            DD     DD            ", "              DDDDD              ", "               A A               ")
                    .aisle("               A A               ", "               A A               ", "             DDDDDDD             ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "  D                           D  ", "  D                           D  ", "AAD                           DAA", "  D                           D  ", "AAD                           DAA", "  D                           D  ", "  D                           D  ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "             DDDDDDD             ", "               A A               ", "               A A               ")
                    .aisle
                    .aisle
                    .aisle("                                 ", "               A A               ", "               A A               ", "                D                ", "                F                ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", " AA                           AA ", "   DF                       FD   ", " AA                           AA ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                F                ", "                D                ", "               A A               ", "               A A               ", "                                 ")
                    .aisle("                                 ", "                                 ", "               A A               ", "                D                ", "                F                ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "  A                           A  ", "   DF                       FD   ", "  A                           A  ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                F                ", "                D                ", "               A A               ", "                                 ", "                                 ")
                    .aisle("                                 ", "                                 ", "               A A               ", "               A A               ", "                D                ", "             GEEFEEG             ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "     G                     G     ", "     E                     E     ", "  AA E                     E AA  ", "    DF                     FD    ", "  AA E                     E AA  ", "     E                     E     ", "     G                     G     ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "             GEEFEEG             ", "                D                ", "               A A               ", "               A A               ", "                                 ", "                                 ")
                    .aisle("                                 ", "                                 ", "                                 ", "               A A               ", "              AAAAA              ", "                D                ", "                F                ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "    A                       A    ", "   AA                       AA   ", "    ADF                   FDA    ", "   AA                       AA   ", "    A                       A    ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                F                ", "                D                ", "              AAAAA              ", "               A A               ", "                                 ", "                                 ", "                                 ")
                    .aisle("                                 ", "                                 ", "                                 ", "                                 ", "               A A               ", "               A A               ", "                D                ", "             GEEFEEG             ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "       G                 G       ", "       E                 E       ", "    AA E                 E AA    ", "      DF                 FD      ", "    AA E                 E AA    ", "       E                 E       ", "       G                 G       ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "             GEEFEEG             ", "                D                ", "               A A               ", "               A A               ", "                                 ", "                                 ", "                                 ", "                                 ")
                    .aisle("                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "               A A               ", "              AAAAA              ", "                D                ", "                F                ", "                F                ", "                                 ", "                                 ", "                                 ", "                                 ", "      A                   A      ", "     AA                   AA     ", "      ADFF             FFDA      ", "     AA                   AA     ", "      A                   A      ", "                                 ", "                                 ", "                                 ", "                                 ", "                F                ", "                F                ", "                D                ", "              AAAAA              ", "               A A               ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ")
                    .aisle
                    .aisle("                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "               A A               ", "               A A               ", "               A A               ", "                D                ", "                D                ", "             DDDDDDD             ", "            DD     DD            ", "            D  EEE  D            ", "       AAA  D EFFFE D  AAA       ", "          DDD EFFFE DDD          ", "       AAA  D EFFFE D  AAA       ", "            D  EEE  D            ", "            DD     DD            ", "             DDDDDDD             ", "                D                ", "                D                ", "               A A               ", "               A A               ", "               A A               ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ")
                    .aisle("                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "               A A               ", "               A A               ", "               A A               ", "               A A               ", "              DDDDD              ", "             DDADADD             ", "         AAAADAADAADAAAA         ", "             DDDDDDD             ", "         AAAADAADAADAAAA         ", "             DDADADD             ", "              DDDDD              ", "               A A               ", "               A A               ", "               A A               ", "               A A               ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ")
                    .aisle("                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "             AAAAAAA             ", "            AABBBBBAA            ", "            ABBBBBBBA            ", "            ABBAAABBA            ", "            ABBA~ABBA            ", "            ABBAAABBA            ", "            ABBBBBBBA            ", "            AABBBBBAA            ", "             AAAAAAA             ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ", "                                 ")
                    .where('~', Predicates.controller(Predicates.blocks(definition.get())))
                    .where('A', Predicates.blocks(GTLBlocks.DIMENSIONALLY_TRANSCENDENT_CASING.get()))
                    .where('B', Predicates.blocks(GTBlocks.HIGH_POWER_CASING.get())
                            .or(Predicates.abilities(PartAbility.EXPORT_ITEMS).setPreviewCount(1))
                            .or(Predicates.abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(Predicates.abilities(PartAbility.EXPORT_FLUIDS).setPreviewCount(1))
                            .or(Predicates.abilities(PartAbility.IMPORT_FLUIDS).setPreviewCount(1)))
                    .where('D', Predicates.blocks(GTLBlocks.DIMENSION_INJECTION_CASING.get()))
                    .where('E', Predicates.blocks(Registries.getBlock("kubejs:dimensional_bridge_casing")))
                    .where('F', Predicates.blocks(Registries.getBlock("kubejs:spacetime_compression_field_generator")))
                    .where('G', Predicates.blocks(Registries.getBlock("kubejs:dimensional_stability_casing")))
                    .where(" ", Predicates.any())
                    .build())
            .renderer(EyeOfHarmonyRenderer::new)
            .hasTESR(true)
            .register();

    public final static MultiblockMachineDefinition SPACE_PROBE_SURFACE_RECEPTION = REGISTRATE.multiblock("space_probe_surface_reception", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .allowExtendedFacing(false)
            .recipeType(GTLRecipeTypes.SPACE_PROBE_SURFACE_RECEPTION_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.space_probe_surface_reception.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.perfect_oc"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.space_probe_surface_reception")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifier(GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK_SUBTICK))
            .appearanceBlock(GCyMBlocks.CASING_ATOMIC)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "      fff      ", "               ")
                    .aisle("               ", "               ", "               ", "               ", "               ", "               ", "               ", "      fff      ", "    ff   ff    ", "               ")
                    .aisle("               ", "               ", "               ", "               ", "               ", "               ", "       f       ", "    fff fff    ", "   f       f   ", "               ")
                    .aisle("      bbb      ", "      bbb      ", "      bbb      ", "               ", "               ", "       b       ", "     fffff     ", "   ff     ff   ", "  f         f  ", "               ")
                    .aisle("     bbbbb     ", "     b   b     ", "     b   b     ", "      bbb      ", "      bbb      ", "     bbbbb     ", "    fffffff    ", "  ff       ff  ", " f           f ", "               ")
                    .aisle("    bbbbbbb    ", "    b     b    ", "    b     b    ", "     b   b     ", "     b   b     ", "    bbfffbb    ", "   fff   fff   ", "  f         f  ", " f           f ", "               ")
                    .aisle("   bbbbbbbbb   ", "   b   c   b   ", "   b   c   b   ", "    b  c  b    ", "    b  c  b    ", "    bfffffb    ", "   ff     ff   ", " ff         ff ", "f             f", "               ")
                    .aisle("   bbbbbbbbb   ", "   b  cdc  b   ", "   b  cdc  b   ", "    b cdc b    ", "    b cdc b    ", "   bbffdffbb   ", "  fff  e  fff  ", " f     e     f ", "f      e      f", "       e       ")
                    .aisle("   bbbbbbbbb   ", "   b   c   b   ", "   b   c   b   ", "    b  c  b    ", "    b  c  b    ", "    bfffffb    ", "   ff     ff   ", " ff         ff ", "f             f", "               ")
                    .aisle("    bbbbbbb    ", "    b     b    ", "    b     b    ", "     b   b     ", "     b   b     ", "    bbfffbb    ", "   fff   fff   ", "  f         f  ", " f           f ", "               ")
                    .aisle("     bbbbb     ", "     b   b     ", "     b   b     ", "      bbb      ", "      bbb      ", "     bbbbb     ", "    fffffff    ", "  ff       ff  ", " f           f ", "               ")
                    .aisle("      bbb      ", "      bab      ", "      bbb      ", "               ", "               ", "       b       ", "     fffff     ", "   ff     ff   ", "  f         f  ", "               ")
                    .aisle("               ", "               ", "               ", "               ", "               ", "               ", "       f       ", "    fff fff    ", "   f       f   ", "               ")
                    .aisle("               ", "               ", "               ", "               ", "               ", "               ", "               ", "      fff      ", "    ff   ff    ", "               ")
                    .aisle("               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "      fff      ", "               ")
                    .where("a", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("b", Predicates.blocks(GCyMBlocks.CASING_ATOMIC.get())
                            .setMinGlobalLimited(140)
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1))
                            .or(Predicates.abilities(PartAbility.COMPUTATION_DATA_RECEPTION).setMaxGlobalLimited(1)))
                    .where("c", Predicates.blocks(GCyMBlocks.HEAT_VENT.get()))
                    .where("d", Predicates.blocks(Registries.getBlock("kubejs:neutronium_pipe_casing")))
                    .where("e", Predicates.blocks(Registries.getBlock("gtceu:black_titanium_frame")))
                    .where("f", Predicates.blocks(GTLBlocks.EXTREME_STRENGTH_TRITANIUM_CASING.get()))
                    .build())
            .beforeWorking((machine, recipe) -> {
                Level level = machine.self().getLevel();
                BlockPos pos = machine.self().getPos();
                BlockPos[] coordinates = new BlockPos[] { pos.offset(4, 8, 0), pos.offset(-4, 8, 0), pos.offset(0, 8, 4), pos.offset(0, 8, -4) };
                for (BlockPos a : coordinates) {
                    if (level != null && Objects.equals(level.getBlockState(a).getBlock().kjs$getId(), "gtceu:black_titanium_frame")) {
                        for (int i = -6; i < 7; i++) {
                            for (int j = -6; j < 7; j++) {
                                if (level.getBrightness(LightLayer.SKY, a.offset(0, 1, 0)) == 0) {
                                    machine.getRecipeLogic().interruptRecipe();
                                    return false;
                                }
                            }
                        }
                        return true;
                    }
                }
                machine.getRecipeLogic().interruptRecipe();
                return false;
            })
            .workableCasingRenderer(GTCEu.id("block/casings/gcym/atomic_casing"), GTCEu.id("block/multiblock/data_bank"))
            .register();

    public final static MultiblockMachineDefinition DIMENSIONALLY_TRANSCENDENT_PLASMA_FORGE = REGISTRATE.multiblock("dimensionally_transcendent_plasma_forge", CoilWorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .allowExtendedFacing(false)
            .recipeType(GTLRecipeTypes.DIMENSIONALLY_TRANSCENDENT_PLASMA_FORGE_RECIPES)
            .recipeType(GTLRecipeTypes.STELLAR_FORGE_RECIPES)
            .tooltips(Component.translatable("gtceu.multiblock.laser.tooltip"))
            .tooltips(Component.translatable("gtceu.machine.perfect_oc"))
            .tooltips(Component.translatable("gtceu.multiblock.parallelizable.tooltip"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_2.tooltip",
                    Component.translatable("gtceu.dimensionally_transcendent_plasma_forge"), Component.translatable("gtceu.stellar_forge")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifiers(GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK_SUBTICK))
            .appearanceBlock(GTLBlocks.DIMENSIONALLY_TRANSCENDENT_CASING)
            .pattern(definition -> GTLMachines.DTPF.where("a", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("e", Predicates.blocks(GTLBlocks.DIMENSIONALLY_TRANSCENDENT_CASING.get())
                            .or(Predicates.abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(Predicates.abilities(PartAbility.EXPORT_ITEMS).setPreviewCount(1))
                            .or(Predicates.abilities(PartAbility.IMPORT_ITEMS).setPreviewCount(1))
                            .or(Predicates.abilities(PartAbility.EXPORT_FLUIDS).setPreviewCount(1))
                            .or(Predicates.abilities(PartAbility.IMPORT_FLUIDS).setPreviewCount(1))
                            .or(Predicates.abilities(PartAbility.INPUT_ENERGY).setMaxGlobalLimited(2))
                            .or(Predicates.abilities(PartAbility.INPUT_LASER).setMaxGlobalLimited(1)))
                    .where("b", Predicates.blocks(GTLBlocks.DIMENSION_INJECTION_CASING.get()))
                    .where("C", Predicates.heatingCoils())
                    .where("d", Predicates.blocks(GTLBlocks.DIMENSIONALLY_TRANSCENDENT_CASING.get()))
                    .where("s", Predicates.blocks(Registries.getBlock("kubejs:dimensional_bridge_casing")))
                    .where(" ", Predicates.any())
                    .build())
            .beforeWorking((machine, recipe) -> {
                if (machine instanceof CoilWorkableElectricMultiblockMachine coilWorkableElectricMultiblockMachine) {
                    if (coilWorkableElectricMultiblockMachine.getCoilType().getCoilTemperature() == 273) {
                        if (machine.getRecipeType() == GTLRecipeTypes.STELLAR_FORGE_RECIPES) {
                            return true;
                        } else if (recipe.data.getInt("ebf_temp") <= 32000) {
                            return true;
                        }
                    } else if (recipe.data.getInt("ebf_temp") <= coilWorkableElectricMultiblockMachine.getCoilType().getCoilTemperature()) {
                        return true;
                    }
                }
                machine.getRecipeLogic().interruptRecipe();
                return false;
            })
            .additionalDisplay((controller, components) -> {
                if (controller.isFormed() && controller instanceof CoilWorkableElectricMultiblockMachine machine) {
                    int temp = machine.getCoilType().getCoilTemperature();
                    components.add(Component.translatable("gtceu.multiblock.blast_furnace.max_temperature", Component.literal(FormattingUtil.formatNumbers((temp == 273 ? 32000 : temp)) + "K").withStyle(ChatFormatting.BLUE)));
                    if (machine.getRecipeType() == GTLRecipeTypes.STELLAR_FORGE_RECIPES && temp != 273) {
                        components.add(Component.literal("当前配方模式无法使用该线圈").withStyle(ChatFormatting.RED));
                    }
                }
            })
            .workableCasingRenderer(GTLCore.id("block/casings/dimensionally_transcendent_casing"), GTCEu.id("block/multiblock/dimensionally_transcendent_plasma_forge"))
            .register();

    public final static MultiblockMachineDefinition CIRCUIT_ASSEMBLY_LINE = REGISTRATE.multiblock("circuit_assembly_line", (holder) -> new StorageMachine(holder, 64))
            .rotationState(RotationState.ALL)
            .recipeType(GTLRecipeTypes.CIRCUIT_ASSEMBLY_LINE_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.circuit_assembly_line.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.circuit_assembly_line")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifiers((machine, recipe, params, result) -> {
                boolean isParallel = false;
                int p = 0;
                if (machine instanceof StorageMachine storageMachine) {
                    ItemStack item = storageMachine.getMachineStorageItem();
                    p = item.getCount() * 2;
                    long inputEUt = RecipeHelper.getInputEUt(recipe);
                    if (inputEUt == GTValues.VA[GTValues.UV]) {
                        isParallel = Objects.equals(item.kjs$getId(), "kubejs:precision_circuit_assembly_robot_mk1");
                    } else if (inputEUt == GTValues.VA[GTValues.UHV]) {
                        isParallel = Objects.equals(item.kjs$getId(), "kubejs:precision_circuit_assembly_robot_mk2");
                    } else if (inputEUt == GTValues.VA[GTValues.UEV]) {
                        isParallel = Objects.equals(item.kjs$getId(), "kubejs:precision_circuit_assembly_robot_mk3");
                    } else if (inputEUt == GTValues.VA[GTValues.UIV]) {
                        isParallel = Objects.equals(item.kjs$getId(), "kubejs:precision_circuit_assembly_robot_mk4");
                    } else if (inputEUt == GTValues.VA[GTValues.UXV]) {
                        isParallel = Objects.equals(item.kjs$getId(), "kubejs:precision_circuit_assembly_robot_mk5");
                    }
                }
                if (isParallel) {
                    return GTRecipeModifiers.accurateParallel(machine, recipe, p, false).getFirst();
                } else {
                    return recipe;
                }
            }, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK_SUBTICK))
            .appearanceBlock(GTLBlocks.PIKYONIUM_MACHINE_CASING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("bbb", "bbb", "bfb")
                    .aisle("bbb", "cec", "bdb").setRepeatable(16)
                    .aisle("bbb", "bab", "bgb")
                    .where("a", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("b", Predicates.blocks(GTLBlocks.PIKYONIUM_MACHINE_CASING.get())
                            .or(Predicates.abilities(PartAbility.INPUT_ENERGY).setMinGlobalLimited(1).setMaxGlobalLimited(2))
                            .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where("c", Predicates.blocks(GTBlocks.CASING_LAMINATED_GLASS.get()))
                    .where("d", Predicates.blocks(GTMachines.ITEM_IMPORT_BUS[0].get()).or(Predicates.blocks(CustomMachines.HUGE_ITEM_IMPORT_BUS[0].get())))
                    .where("e", Predicates.blocks(Registries.getBlock("kubejs:machine_casing_circuit_assembly_line")))
                    .where("f", Predicates.abilities(PartAbility.EXPORT_ITEMS))
                    .where("g", Predicates.abilities(PartAbility.IMPORT_FLUIDS_4X))
                    .build())
            .workableCasingRenderer(GTLCore.id("block/casings/pikyonium_machine_casing"), GTCEu.id("block/multiblock/assembly_line"))
            .register();

    public final static MultiblockMachineDefinition ASSEMBLER_MODULE = REGISTRATE.multiblock("assembler_module", (holder) -> new SpaceElevatorModuleMachine(holder, true))
            .rotationState(RotationState.NON_Y_AXIS)
            .allowExtendedFacing(false)
            .recipeType(GTLRecipeTypes.ASSEMBLER_MODULE_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.resource_collection.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.assembler_module")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifier(SpaceElevatorModuleMachine::recipeModifier)
            .appearanceBlock(GTLBlocks.SPACE_ELEVATOR_MECHANICAL_CASING)
            .pattern((definition) -> FactoryBlockPattern.start()
                    .aisle("aaa", "bcb", "bbb", "bbb", "bbb")
                    .aisle("aaa", "bbb", "bbb", "bbb", "bbb")
                    .aisle("aaa", "bbb", "bbb", "b~b", "bbb")
                    .where("~", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("b", Predicates.blocks(GTLBlocks.SPACE_ELEVATOR_MECHANICAL_CASING.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes())))
                    .where("a", Predicates.blocks(Registries.getBlock("kubejs:module_base")))
                    .where("c", Predicates.blocks(Registries.getBlock("kubejs:module_connector")))
                    .build())
            .workableCasingRenderer(GTLCore.id("block/space_elevator_mechanical_casing"), GTCEu.id("block/multiblock/gcym/large_assembler"))
            .register();

    public final static MultiblockMachineDefinition RESOURCE_COLLECTION = REGISTRATE.multiblock("resource_collection", (holder) -> new SpaceElevatorModuleMachine(holder, false))
            .rotationState(RotationState.NON_Y_AXIS)
            .allowExtendedFacing(false)
            .recipeType(GTLRecipeTypes.MINER_MODULE_RECIPES)
            .recipeType(GTLRecipeTypes.DRILLING_MODULE_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.resource_collection.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_2.tooltip",
                    Component.translatable("gtceu.miner_module"), Component.translatable("gtceu.drilling_module")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifier(SpaceElevatorModuleMachine::recipeModifier)
            .appearanceBlock(GTLBlocks.SPACE_ELEVATOR_MECHANICAL_CASING)
            .pattern((definition) -> FactoryBlockPattern.start()
                    .aisle("aaa", "bcb", "bbb", "bbb", "bbb")
                    .aisle("aaa", "bbb", "bbb", "bbb", "bbb")
                    .aisle("aaa", "bbb", "bbb", "b~b", "bbb")
                    .where("~", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("b", Predicates.blocks(GTLBlocks.SPACE_ELEVATOR_MECHANICAL_CASING.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes())))
                    .where("a", Predicates.blocks(Registries.getBlock("kubejs:module_base")))
                    .where("c", Predicates.blocks(Registries.getBlock("kubejs:module_connector")))
                    .build())
            .workableCasingRenderer(GTLCore.id("block/space_elevator_mechanical_casing"), GTCEu.id("block/multiblock/gcym/large_assembler"))
            .register();

    private static final List<int[]> poses1 = new ArrayList<>();
    private static final List<int[]> poses2 = new ArrayList<>();
    private static final Map<String, String> covRecipe = new HashMap<>();

    static {
        for (int i = -2; i <= 2; i++) {
            for (int j = -1; j >= -5; j--) {
                for (int k = -2; k <= 2; k++) {
                    poses1.add(new int[] { i, j, k });
                }
            }
        }
        for (int i = -4; i <= 4; i++) {
            for (int j = -1; j >= -7; j--) {
                for (int k = -4; k <= 4; k++) {
                    poses2.add(new int[] { i, j, k });
                }
            }
        }
        covRecipe.put("minecraft:bone_block", "kubejs:essence_block");
        covRecipe.put("minecraft:oak_log", "minecraft:crimson_stem");
        covRecipe.put("minecraft:birch_log", "minecraft:warped_stem");
        covRecipe.put("gtceu:calcium_block", "minecraft:bone_block");
        covRecipe.put("minecraft:moss_block", "minecraft:sculk");
        covRecipe.put("minecraft:grass_block", "minecraft:moss_block");
        covRecipe.put("kubejs:infused_obsidian", "kubejs:draconium_block_charged");
    }

    private static boolean blockConversionRoom(List<int[]> poses, IRecipeLogicMachine machine, int tier) {
        if (machine instanceof WorkableElectricMultiblockMachine workableElectricMultiblockMachine) {
            if (workableElectricMultiblockMachine.getOffsetTimer() % 20 == 0) {
                Level level = machine.self().getLevel();
                if (level != null) {
                    int amount = workableElectricMultiblockMachine.getTier() * tier - 7;
                    int[] pos = new int[] {};
                    for (int i = 0; i < amount; i++) {
                        int[] pos_0 = poses.get((int) (Math.random() * poses.size()));
                        if (pos_0 != pos) {
                            pos = pos_0;
                            BlockPos blockPos = machine.self().getPos().offset(pos[0], pos[1], pos[2]);
                            String block = level.getBlockState(blockPos).getBlock().kjs$getId();
                            if (covRecipe.containsKey(block)) {
                                level.setBlockAndUpdate(blockPos, Registries.getBlock(covRecipe.get(block)).defaultBlockState());
                            }
                        } else {
                            i--;
                        }
                    }
                }
            }
        }
        return true;
    }

    public final static MultiblockMachineDefinition BLOCK_CONVERSION_ROOM = REGISTRATE.multiblock("block_conversion_room", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.NONE)
            .allowExtendedFacing(false)
            .allowFlip(false)
            .recipeType(GTLRecipeTypes.BLOCK_CONVERSIONRECIPES)
            .tooltips(Component.translatable("gtceu.machine.block_conversion_room.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.block_conversion_room.tooltip.1"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.block_conversion")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifier(GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(new OverclockingLogic(1, 4, false)))
            .appearanceBlock(GTLBlocks.ALUMINIUM_BRONZE_CASING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("bbbbbbb", "bbbbbbb", "bdddddb", "bdddddb", "bdddddb", "bdddddb", "bdddddb", "bbbbbbb")
                    .aisle("bbbbbbb", "bcccccb", "d     d", "d     d", "d     d", "d     d", "d     d", "bbbbbbb")
                    .aisle("bbbbbbb", "bcccccb", "d     d", "d     d", "d     d", "d     d", "d     d", "bbbbbbb")
                    .aisle("bbbbbbb", "bcccccb", "d     d", "d     d", "d     d", "d     d", "d     d", "bbbabbb")
                    .aisle("bbbbbbb", "bcccccb", "d     d", "d     d", "d     d", "d     d", "d     d", "bbbbbbb")
                    .aisle("bbbbbbb", "bcccccb", "d     d", "d     d", "d     d", "d     d", "d     d", "bbbbbbb")
                    .aisle("bbbbbbb", "bbbbbbb", "bdddddb", "bdddddb", "bdddddb", "bdddddb", "bdddddb", "bbbbbbb")
                    .where("a", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("b", Predicates.blocks(GTLBlocks.ALUMINIUM_BRONZE_CASING.get()).setMinGlobalLimited(120)
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where("c", Predicates.blocks(Registries.getBlock("kubejs:shining_obsidian")))
                    .where("d", Predicates.blocks(GTBlocks.CASING_TEMPERED_GLASS.get())
                            .or(Predicates.blocks(Blocks.IRON_DOOR).setMaxGlobalLimited(4)))
                    .where(" ", Predicates.any())
                    .build())
            .onWorking(machine -> blockConversionRoom(poses1, machine, 4))
            .onWaiting(machine -> machine.getRecipeLogic().interruptRecipe())
            .additionalDisplay((controller, components) -> {
                if (controller.isFormed() && controller instanceof WorkableElectricMultiblockMachine workableElectricMultiblockMachine) {
                    components.add(Component.literal("每次转化数量：" + (workableElectricMultiblockMachine.getTier() * 4 - 7)));
                }
            })
            .workableCasingRenderer(GTLCore.id("block/casings/aluminium_bronze_casing"), GTCEu.id("block/multiblock/cleanroom"))
            .register();

    public final static MultiblockMachineDefinition LARGE_BLOCK_CONVERSION_ROOM = REGISTRATE.multiblock("large_block_conversion_room", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.NONE)
            .allowExtendedFacing(false)
            .allowFlip(false)
            .recipeType(GTLRecipeTypes.BLOCK_CONVERSIONRECIPES)
            .tooltips(Component.translatable("gtceu.machine.block_conversion_room.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.large_block_conversion_room.tooltip.1"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.block_conversion")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifier(GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(new OverclockingLogic(1, 4, false)))
            .appearanceBlock(GTLBlocks.ALUMINIUM_BRONZE_CASING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("bbbbbbbbbbb", "bbbbbbbbbbb", "bdddddddddb", "bdddddddddb", "bdddddddddb", "bdddddddddb", "bdddddddddb", "bdddddddddb", "bdddddddddb", "bbbbbbbbbbb")
                    .aisle("bbbbbbbbbbb", "bcccccccccb", "d         d", "d         d", "d         d", "d         d", "d         d", "d         d", "d         d", "bbbbbbbbbbb")
                    .aisle("bbbbbbbbbbb", "bcccccccccb", "d         d", "d         d", "d         d", "d         d", "d         d", "d         d", "d         d", "bbbbbbbbbbb")
                    .aisle("bbbbbbbbbbb", "bcccccccccb", "d         d", "d         d", "d         d", "d         d", "d         d", "d         d", "d         d", "bbbbbbbbbbb")
                    .aisle("bbbbbbbbbbb", "bcccccccccb", "d         d", "d         d", "d         d", "d         d", "d         d", "d         d", "d         d", "bbbbbbbbbbb")
                    .aisle("bbbbbbbbbbb", "bcccccccccb", "d         d", "d         d", "d         d", "d         d", "d         d", "d         d", "d         d", "bbbbbabbbbb")
                    .aisle("bbbbbbbbbbb", "bcccccccccb", "d         d", "d         d", "d         d", "d         d", "d         d", "d         d", "d         d", "bbbbbbbbbbb")
                    .aisle("bbbbbbbbbbb", "bcccccccccb", "d         d", "d         d", "d         d", "d         d", "d         d", "d         d", "d         d", "bbbbbbbbbbb")
                    .aisle("bbbbbbbbbbb", "bcccccccccb", "d         d", "d         d", "d         d", "d         d", "d         d", "d         d", "d         d", "bbbbbbbbbbb")
                    .aisle("bbbbbbbbbbb", "bcccccccccb", "d         d", "d         d", "d         d", "d         d", "d         d", "d         d", "d         d", "bbbbbbbbbbb")
                    .aisle("bbbbbbbbbbb", "bbbbbbbbbbb", "bdddddddddb", "bdddddddddb", "bdddddddddb", "bdddddddddb", "bdddddddddb", "bdddddddddb", "bdddddddddb", "bbbbbbbbbbb")
                    .where("a", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("b", Predicates.blocks(GTLBlocks.ALUMINIUM_BRONZE_CASING.get()).setMinGlobalLimited(240)
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where("c", Predicates.blocks(Registries.getBlock("kubejs:shining_obsidian")))
                    .where("d", Predicates.blocks(GTBlocks.CASING_TEMPERED_GLASS.get())
                            .or(Predicates.blocks(Blocks.IRON_DOOR).setMaxGlobalLimited(4)))
                    .where(" ", Predicates.any())
                    .build())
            .onWorking(machine -> blockConversionRoom(poses2, machine, 64))
            .onWaiting(machine -> machine.getRecipeLogic().interruptRecipe())
            .additionalDisplay((controller, components) -> {
                if (controller.isFormed() && controller instanceof WorkableElectricMultiblockMachine workableElectricMultiblockMachine) {
                    components.add(Component.literal("每次转化数量：" + (workableElectricMultiblockMachine.getTier() * 64 - 7)));
                }
            })
            .workableCasingRenderer(GTLCore.id("block/casings/aluminium_bronze_casing"), GTCEu.id("block/multiblock/cleanroom"))
            .register();

    public final static MultiblockMachineDefinition PCB_FACTORY = REGISTRATE.multiblock("pcb_factory", PCBFactoryMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .allowExtendedFacing(false)
            .recipeType(GTLRecipeTypes.PCB_FACTORY_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.pcb_factory.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.pcb_factory.tooltip.1"))
            .tooltips(Component.translatable("gtceu.machine.pcb_factory.tooltip.2"))
            .tooltips(Component.translatable("gtceu.machine.perfect_oc"))
            .tooltips(Component.translatable("gtceu.multiblock.parallelizable.tooltip"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.pcb_factory")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifier(PCBFactoryMachine::recipeModifier)
            .appearanceBlock(GCyMBlocks.CASING_WATERTIGHT)
            .pattern((definition) -> FactoryBlockPattern.start()
                    .aisle("ibbbi  clllc     ", "ieeei  c   c     ", "ieeei  c   c     ", "ieeei  c   c     ", "i   i  c   c     ", "       c   c     ", "       c   c     ", "       c   c     ", "       c   c     ", "       clllc     ")
                    .aisle("bbbbb  lllll     ", "e   e   lll      ", "e   e   lll      ", "e   e   lll      ", " bbb    lll      ", "        lll      ", "        lll      ", "        lll      ", "        lll      ", "       lllll     ")
                    .aisle("bbbbb  lllll     ", "e   e   l l      ", "e   e   l l      ", "e   e   l l      ", " bbb    l l      ", "  b     l l      ", "  b     l l      ", "        l l      ", "        l l      ", "       lllll     ")
                    .aisle("bbbbb  lllllg    ", "e   e   lll      ", "e   e   lll      ", "e   e   lll      ", " bbb    lll      ", "        lll      ", "  b     lll      ", "        lll      ", "        lll      ", "       lllll     ")
                    .aisle("ibbbi  clllcghddh", "ieeei  c   c hddh", "ieeei  c   c hddh", "ieeei  c   c     ", "i   i  c   c     ", "       c   c     ", "  b    c   c     ", "       c   c     ", "       c   c     ", "       clllc     ")
                    .aisle("            gdddd", "             d  d", "             d  d", "             hddh", "             hddh", "                 ", "  b              ", "                 ", "                 ", "                 ")
                    .aisle("      ijjjjjidddd", "      ijjjjjid  d", "      ijjjjjid  d", "      ijjjjjid  d", "      i     id  d", "             hddh", "  b              ", "                 ", "                 ", "                 ")
                    .aisle("ibbbi jkkkkkjdddd", "ieeei j     jd  d", "ieeei j     jd  d", "ieeei j     jd  d", "i   i jjjjjjjd  d", "      i     idddd", "  b          hddh", "                 ", "                 ", "                 ")
                    .aisle("bbbbb jkkkkkjdddd", "e   e j     jd  d", "e   e j     jd  d", "e   e j     jd  d", " bbb  jjjjjjjd  d", "      i     idddd", "  b          hddh", "                 ", "                 ", "                 ")
                    .aisle("bbbbbgjkkkkkjdddd", "e   e j     jd  d", "e   e j     jd  d", "e   e j     jd  d", " bbb  jjjjjjjd  d", "  b   iiiiiiidddd", "  b          hddh", "                 ", "                 ", "                 ")
                    .aisle("bbbbb jkkkkkjdddd", "e   e j     jd  d", "e   e j     jd  d", "e   e j     jd  d", " bbb  jeeeeejd  d", "      i     idddd", "             hddh", "                 ", "                 ", "                 ")
                    .aisle("ibbbi jkkkkkjdddd", "ieeei j     jd  d", "ieeei j     jd  d", "ieeei j     jd  d", "i   i jeeeeejd  d", "      i     idddd", "             hddh", "                 ", "                 ", "                 ")
                    .aisle("      ijjajjidddd", "      ieeeeeid  d", "      ieeeeeid  d", "      ieeeeeid  d", "      iiiiiiid  d", "             hddh", "                 ", "                 ", "                 ", "                 ")
                    .aisle("             dddd", "             d  d", "             d  d", "             hddh", "             hddh", "                 ", "                 ", "                 ", "                 ", "                 ")
                    .aisle("             hddh", "             hddh", "             hddh", "                 ", "                 ", "                 ", "                 ", "                 ", "                 ", "                 ")
                    .where("a", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("j", Predicates.blocks(GCyMBlocks.CASING_WATERTIGHT.get()).setMinGlobalLimited(60)
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(Predicates.abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where("b", Predicates.blocks(GTBlocks.CASING_STAINLESS_CLEAN.get()))
                    .where("c", Predicates.blocks(Registries.getBlock("gtceu:blue_steel_frame")))
                    .where("d", Predicates.blocks(GTLBlocks.ANTIFREEZE_HEATPROOF_MACHINE_CASING.get()))
                    .where("e", Predicates.blocks(GTBlocks.CASING_LAMINATED_GLASS.get()))
                    .where("g", Predicates.blocks(GTBlocks.CASING_POLYTETRAFLUOROETHYLENE_PIPE.get()))
                    .where("h", Predicates.blocks(Registries.getBlock("gtceu:ultimet_frame")))
                    .where("i", Predicates.blocks(Registries.getBlock("gtceu:hsla_steel_frame")))
                    .where("k", Predicates.blocks(GCyMBlocks.CASING_STRESS_PROOF.get()))
                    .where("l", Predicates.blocks(GTBlocks.CASING_STAINLESS_EVAPORATION.get()))
                    .where(" ", Predicates.any())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/gcym/watertight_casing"), GTCEu.id("block/multiblock/gcym/large_maceration_tower"))
            .register();

    public final static MultiblockMachineDefinition BLAZE_BLAST_FURNACE = REGISTRATE.multiblock("blaze_blast_furnace", CoilWorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.ALL)
            .recipeType(GTRecipeTypes.BLAST_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.duration_multiplier.tooltip", 0.5))
            .tooltips(Component.translatable("gtceu.machine.blaze_blast_furnace.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.blaze_blast_furnace.tooltip.1"))
            .tooltips(Component.translatable("gtceu.machine.electric_blast_furnace.tooltip.a"))
            .tooltips(Component.translatable("gtceu.machine.electric_blast_furnace.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.perfect_oc"))
            .tooltips(Component.translatable("gtceu.machine.electric_blast_furnace.tooltip.2"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.electric_blast_furnace")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifiers((machine, recipe, params, result) -> GTLRecipeModifiers.reduction(machine, recipe, 1, 0.5), (machine, recipe, params, result) -> GTRecipeModifiers.accurateParallel(machine, recipe, 64, false).getFirst(), GTRecipeModifiers::ebfOverclock)
            .appearanceBlock(GTLBlocks.BLAZE_BLAST_FURNACE_CASING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("XXX", "CCC", "CCC", "XXX")
                    .aisle("XXX", "C#C", "C#C", "XMX")
                    .aisle("XSX", "CCC", "CCC", "XXX")
                    .where("S", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("X", Predicates.blocks(GTLBlocks.BLAZE_BLAST_FURNACE_CASING.get()).setMinGlobalLimited(9)
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where("M", Predicates.abilities(PartAbility.MUFFLER))
                    .where("C", Predicates.heatingCoils())
                    .where("#", Predicates.air())
                    .build())
            .beforeWorking((machine, recipe) -> {
                if (MachineIO.inputFluid((WorkableMultiblockMachine) machine, GTMaterials.Blaze.getFluid((long) (Math.pow(2, (((CoilWorkableElectricMultiblockMachine) machine).getTier() - 2)) * 10)))) {
                    return true;
                }
                machine.getRecipeLogic().interruptRecipe();
                return false;
            })
            .onWorking(machine -> {
                if (machine instanceof CoilWorkableElectricMultiblockMachine coilWorkableElectricMultiblockMachine && coilWorkableElectricMultiblockMachine.getOffsetTimer() % 20 == 0) {
                    if (MachineIO.inputFluid((WorkableMultiblockMachine) machine, GTMaterials.Blaze.getFluid((long) (Math.pow(2, (coilWorkableElectricMultiblockMachine.getTier() - 2)) * 10)))) {
                        return true;
                    }
                    machine.getRecipeLogic().setProgress(0);
                }
                return true;
            })
            .additionalDisplay((controller, components) -> {
                if (controller.isFormed()) {
                    components.add(Component.translatable("gtceu.multiblock.parallel", Component.literal("64").withStyle(ChatFormatting.DARK_PURPLE)).withStyle(ChatFormatting.GRAY));
                }
                if (controller instanceof CoilWorkableElectricMultiblockMachine coilMachine && controller.isFormed()) {
                    components.add(Component.translatable("gtceu.multiblock.blast_furnace.max_temperature",
                            Component.translatable(FormattingUtil.formatNumbers(coilMachine.getCoilType().getCoilTemperature() + 100L * Math.max(0, coilMachine.getTier() - GTValues.MV)) + "K")
                                    .setStyle(Style.EMPTY.withColor(ChatFormatting.RED))));
                }
            })
            .workableCasingRenderer(GTLCore.id("block/blaze_blast_furnace_casing"), GTCEu.id("block/multiblock/electric_blast_furnace"))
            .register();

    public final static MultiblockMachineDefinition COLD_ICE_FREEZER = REGISTRATE.multiblock("cold_ice_freezer", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.ALL)
            .recipeType(GTRecipeTypes.VACUUM_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.duration_multiplier.tooltip", 0.5))
            .tooltips(Component.translatable("gtceu.machine.cold_ice_freezer.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.blaze_blast_furnace.tooltip.1"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.vacuum_freezer")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifiers((machine, recipe, params, result) -> GTLRecipeModifiers.reduction(machine, recipe, 1, 0.5), (machine, recipe, params, result) -> GTRecipeModifiers.accurateParallel(machine, recipe, 64, false).getFirst(), GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK_SUBTICK))
            .appearanceBlock(GTLBlocks.COLD_ICE_CASING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("XXX", "XXX", "XXX")
                    .aisle("XXX", "X#X", "XMX")
                    .aisle("XXX", "XSX", "XXX")
                    .where("S", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("X", Predicates.blocks(GTLBlocks.COLD_ICE_CASING.get()).setMinGlobalLimited(10)
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where("M", Predicates.abilities(PartAbility.MUFFLER))
                    .where("#", Predicates.blocks(GTBlocks.HERMETIC_CASING_LuV.get()))
                    .build())
            .beforeWorking((machine, recipe) -> {
                if (MachineIO.inputFluid((WorkableMultiblockMachine) machine, GTMaterials.Ice.getFluid((long) (Math.pow(2, (((WorkableElectricMultiblockMachine) machine).getTier() - 2)) * 10)))) {
                    return true;
                }
                machine.getRecipeLogic().interruptRecipe();
                return false;
            })
            .onWorking(machine -> {
                if (machine instanceof WorkableElectricMultiblockMachine workableElectricMultiblockMachine && workableElectricMultiblockMachine.getOffsetTimer() % 20 == 0) {
                    if (MachineIO.inputFluid((WorkableMultiblockMachine) machine, GTMaterials.Ice.getFluid((long) (Math.pow(2, (workableElectricMultiblockMachine.getTier() - 2)) * 10)))) {
                        return true;
                    }
                    machine.getRecipeLogic().setProgress(0);
                }
                return true;
            })
            .additionalDisplay((controller, components) -> {
                if (controller.isFormed()) {
                    components.add(Component.translatable("gtceu.multiblock.parallel", Component.literal("64").withStyle(ChatFormatting.DARK_PURPLE)).withStyle(ChatFormatting.GRAY));
                }
            })
            .workableCasingRenderer(GTLCore.id("block/cold_ice_casing"), GTCEu.id("block/multiblock/vacuum_freezer"))
            .register();

    public final static MultiblockMachineDefinition DOOR_OF_CREATE = REGISTRATE.multiblock("door_of_create", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.NONE)
            .allowExtendedFacing(false)
            .allowFlip(false)
            .recipeType(GTLRecipeTypes.DOOR_OF_CREATE_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.door_of_create")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifier(GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(new OverclockingLogic(1, 1, false)))
            .appearanceBlock(GTLBlocks.DIMENSION_CONNECTION_CASING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "              a              ", "             aaa             ", "            aaaaa            ", "           aaaaaaa           ", "          aaaaaaaaa          ", "         aaaaaaaaaaa         ", "        aaaaaaaaaaaaa        ", "         aaaaaaaaaaa         ", "          aaaaaaaaa          ", "           aaaaaaa           ", "            aaaaa            ", "             aaa             ", "              a              ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "              a              ", "             aaa             ", "             aaa             ", "             aaa             ", "             aaa             ", "             aaa             ", "             acaa            ", "       aaaaaacccaaaaaa       ", "      aaaaaacccccaaaaaa      ", "       aaaaaacccaaaaaa       ", "            aacaa            ", "             aaa             ", "             aaa             ", "             aaa             ", "             aaa             ", "             aaa             ", "              a              ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("                             ", "                             ", "                             ", "                             ", "                             ", "              a              ", "             aaa             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "      a               a      ", "     aa               aa     ", "      a               a      ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "             aaa             ", "              a              ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("                             ", "                             ", "                             ", "                             ", "              a              ", "             aaa             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "     a                 a     ", "    aa                 aa    ", "     a                 a     ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "             aaa             ", "              a              ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("                             ", "                             ", "                             ", "              a              ", "             aaa             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "    a                   a    ", "   aa                   aa   ", "    a                   a    ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "             aaa             ", "              a              ", "                             ", "                             ", "                             ")
                    .aisle("                             ", "                             ", "              a              ", "             aaa             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "   a                     a   ", "  aa                     aa  ", "   a                     a   ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "             aaa             ", "              a              ", "                             ", "                             ")
                    .aisle("                             ", "              a              ", "             aaa             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "  a                       a  ", " aa                       aa ", "  a                       a  ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "             aaa             ", "              a              ", "                             ")
                    .aisle("                             ", "             aaa             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", " a                         a ", " a                         a ", " a                         a ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "             aaa             ", "                             ")
                    .aisle("              a              ", "             aaa             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", " a                         a ", "aa                         aa", " a                         a ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "             aaa             ", "              a              ")
                    .aisle("             aaa             ", "             aaa             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "aa                         aa", "aa                         aa", "aa                         aa", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "             aaa             ", "             aaa             ")
                    .aisle("            aaaaa            ", "             aaa             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "a                           a", "aa                         aa", "aa                         aa", "aa                         aa", "a                           a", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "             aaa             ", "            aaaaa            ")
                    .aisle("           aaaaaaa           ", "             aaa             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "a                           a", "a                           a", "aa                         aa", "aa                         aa", "aa                         aa", "a                           a", "a                           a", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "             aaa             ", "           aaaaaaa           ")
                    .aisle("          aaaaaaaaa          ", "            aacaa            ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "a                           a", "a                           a", "aa                         aa", "aa                         aa", "ac                         ca", "aa                         aa", "aa                         aa", "a                           a", "a                           a", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "            aacaa            ", "          aaaaaaaaa          ")
                    .aisle("         aaaaaaaaaaa         ", "       aaaaaacccaaaaaa       ", "      a               a      ", "     a                 a     ", "    a                   a    ", "   a                     a   ", "  a                       a  ", " a                         a ", " a                         a ", "aa                         aa", "aa                         aa", "aa                         aa", "aa                         aa", "ac                         ca", "ac                         ca", "ac                         ca", "aa                         aa", "aa                         aa", "aa                         aa", "aa                         aa", " a                         a ", " a                         a ", "  a                       a  ", "   a                     a   ", "    a                   a    ", "     a                 a     ", "      a               a      ", "       aaaaaacccaaaaaa       ", "         aaaadddaaaa         ")
                    .aisle("        aaaaaaaaaaaaa        ", "      aaaaaacccccaaaaaa      ", "     aa               aa     ", "    aa                 aa    ", "   aa                   aa   ", "  aa                     aa  ", " aa                       aa ", " a                         a ", "aa                         aa", "aa                         aa", "aa                         aa", "aa                         aa", "ac                         ca", "ac                         ca", "ac                         ca", "ac                         ca", "ac                         ca", "aa                         aa", "aa                         aa", "aa                         aa", "aa                         aa", " a                         a ", " aa                       aa ", "  aa                     aa  ", "   aa                   aa   ", "    aa                 aa    ", "     aa               aa     ", "      aaaaaacccccaaaaaa      ", "        aaaaadbdaaaaa        ")
                    .aisle("         aaaaaaaaaaa         ", "       aaaaaacccaaaaaa       ", "      a               a      ", "     a                 a     ", "    a                   a    ", "   a                     a   ", "  a                       a  ", " a                         a ", " a                         a ", "aa                         aa", "aa                         aa", "aa                         aa", "aa                         aa", "ac                         ca", "ac                         ca", "ac                         ca", "aa                         aa", "aa                         aa", "aa                         aa", "aa                         aa", " a                         a ", " a                         a ", "  a                       a  ", "   a                     a   ", "    a                   a    ", "     a                 a     ", "      a               a      ", "       aaaaaacccaaaaaa       ", "         aaaadddaaaa         ")
                    .aisle("          aaaaaaaaa          ", "            aacaa            ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "a                           a", "a                           a", "aa                         aa", "aa                         aa", "ac                         ca", "aa                         aa", "aa                         aa", "a                           a", "a                           a", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "            aacaa            ", "          aaaaaaaaa          ")
                    .aisle("           aaaaaaa           ", "             aaa             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "a                           a", "a                           a", "aa                         aa", "aa                         aa", "aa                         aa", "a                           a", "a                           a", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "             aaa             ", "           aaaaaaa           ")
                    .aisle("            aaaaa            ", "             aaa             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "a                           a", "aa                         aa", "aa                         aa", "aa                         aa", "a                           a", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "             aaa             ", "            aaaaa            ")
                    .aisle("             aaa             ", "             aaa             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "aa                         aa", "aa                         aa", "aa                         aa", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "             aaa             ", "             aaa             ")
                    .aisle("              a              ", "             aaa             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", " a                         a ", "aa                         aa", " a                         a ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "             aaa             ", "              a              ")
                    .aisle("                             ", "             aaa             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", " a                         a ", " a                         a ", " a                         a ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "             aaa             ", "                             ")
                    .aisle("                             ", "              a              ", "             aaa             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "  a                       a  ", " aa                       aa ", "  a                       a  ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "             aaa             ", "              a              ", "                             ")
                    .aisle("                             ", "                             ", "              a              ", "             aaa             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "   a                     a   ", "  aa                     aa  ", "   a                     a   ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "             aaa             ", "              a              ", "                             ", "                             ")
                    .aisle("                             ", "                             ", "                             ", "              a              ", "             aaa             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "    a                   a    ", "   aa                   aa   ", "    a                   a    ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "             aaa             ", "              a              ", "                             ", "                             ", "                             ")
                    .aisle("                             ", "                             ", "                             ", "                             ", "              a              ", "             aaa             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "     a                 a     ", "    aa                 aa    ", "     a                 a     ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "             aaa             ", "              a              ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("                             ", "                             ", "                             ", "                             ", "                             ", "              a              ", "             aaa             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "      a               a      ", "     aa               aa     ", "      a               a      ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "             aaa             ", "              a              ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "              a              ", "             aaa             ", "             aaa             ", "             aaa             ", "             aaa             ", "             aaa             ", "            aacaa            ", "       aaaaaacccaaaaaa       ", "      aaaaaacccccaaaaaa      ", "       aaaaaacccaaaaaa       ", "            aacaa            ", "             aaa             ", "             aaa             ", "             aaa             ", "             aaa             ", "             aaa             ", "              a              ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "              a              ", "             aaa             ", "            aaaaa            ", "           aaaaaaa           ", "          aaaaaaaaa          ", "         aaaaaaaaaaa         ", "        aaaaaaaaaaaaa        ", "         aaaaaaaaaaa         ", "          aaaaaaaaa          ", "           aaaaaaa           ", "            aaaaa            ", "             aaa             ", "              a              ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .where("b", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("a", Predicates.blocks(GTLBlocks.DIMENSION_CONNECTION_CASING.get()))
                    .where("d", Predicates.blocks(GTLBlocks.DIMENSION_CONNECTION_CASING.get())
                            .or(Predicates.abilities(PartAbility.IMPORT_ITEMS).setPreviewCount(1))
                            .or(Predicates.abilities(PartAbility.INPUT_ENERGY).setMaxGlobalLimited(1)))
                    .where("c", Predicates.blocks(Registries.getBlock("kubejs:dimension_creation_casing")))
                    .where(" ", Predicates.any())
                    .build())
            .onWorking(machine -> {
                if (machine.getRecipeLogic().getProgress() == 5 && machine instanceof WorkableElectricMultiblockMachine workableElectricMultiblockMachine) {
                    BlockPos pos = machine.self().getPos().offset(0, -13, 0);
                    Level level = machine.self().getLevel();
                    if (level != null) {
                        level.getServer().kjs$runCommandSilent("particle minecraft:dragon_breath " + pos.getX() + " " + pos.getY() + " " + pos.getZ() + " 4 4 4 0.01 1000 force");
                        List<Entity> entities = level.getEntitiesOfClass(Entity.class, new AABB(
                                pos.getX() - 10,
                                pos.getY() - 10,
                                pos.getZ() - 10,
                                pos.getX() + 10,
                                pos.getY() + 10,
                                pos.getZ() + 10));
                        for (Entity entity : entities) {
                            if (entity instanceof Player player) {
                                if (Objects.equals(player.getArmorSlots().toString(), "[1 magnetohydrodynamicallyconstrainedstarmatter_boots, 1 magnetohydrodynamicallyconstrainedstarmatter_leggings, 1 magnetohydrodynamicallyconstrainedstarmatter_chestplate, 1 magnetohydrodynamicallyconstrainedstarmatter_helmet]")) {
                                    player.getServer().kjs$runCommandSilent("execute in kubejs:create as " + entity.getName().getString() + " run tp 0 1 0");
                                } else {
                                    player.kjs$setStatusMessage(Component.literal("你的装备无法适应目标维度的环境"));
                                }
                            }
                            if (entity instanceof ItemEntity item && Objects.equals(item.getItem().kjs$getId(), "gtceu:magnetohydrodynamicallyconstrainedstarmatter_block")) {
                                item.getServer().kjs$runCommandSilent("summon minecraft:item " + item.getX() + " " + item.getY() + " " + item.getZ() + " {PickupDelay:10,Motion:[0.0,0.2,0.0],Item:{id:\"minecraft:command_block\",Count:" + item.getItem().getCount() + "b}}");
                                item.kill();
                            }
                            if (entity instanceof ItemEntity item && Objects.equals(item.getItem().kjs$getId(), "gtceu:magmatter_ingot") && item.getItem().getCount() >= 64) {
                                item.getServer().kjs$runCommandSilent("summon minecraft:item " + item.getX() + " " + item.getY() + " " + item.getZ() + " {PickupDelay:10,Motion:[0.0,0.2,0.0],Item:{id:\"gtceu:magmatter_block\",Count:" + (item.getItem().getCount() / 64) + "b}}");
                                item.kill();
                            }
                        }
                    }
                }
                return true;
            })
            .workableCasingRenderer(GTLCore.id("block/dimension_connection_casing"), GTCEu.id("block/multiblock/door_of_create"))
            .register();

    public final static MultiblockMachineDefinition BEDROCK_DRILLING_RIG = REGISTRATE.multiblock("bedrock_drilling_rig", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.NONE)
            .allowExtendedFacing(false)
            .allowFlip(false)
            .recipeType(GTLRecipeTypes.BEDROCK_DRILLING_RIG_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.bedrock_drilling_rig.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.bedrock_drilling_rig.tooltip.1"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.bedrock_drilling_rig")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifier(GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK_SUBTICK))
            .appearanceBlock(GTLBlocks.ECHO_CASING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("aaaaaaaaaaa", "a         a", "a         a", "ab       ba", "a         a", "a         a", "a         a", "a    b    a", "aaaaaaaaaaa")
                    .aisle("a         a", "           ", "           ", "bbb     bbb", "           ", "           ", "           ", "     b     ", "a    b    a")
                    .aisle("a         a", "           ", "           ", " bbbbcbbb  ", "    ccc    ", "    ccc    ", "    ccc    ", "    ccc    ", "a   bbb   a")
                    .aisle("a         a", "     c     ", "     c     ", "  bbcccbb  ", "   ccdcc   ", "   ccdcc   ", "   ccdcc   ", "   ccdcc   ", "a  bcccb  a")
                    .aisle("a    c    a", "    cdc    ", "    cdc    ", "  bccdccb  ", "  ccedecc  ", "  ccefecc  ", "  cceeecc  ", "  cceeecc  ", "a bcccccb a")
                    .aisle("a   cgc   a", "   cdfdc   ", "   cdfdc   ", "  ccdfdcc  ", "  cddfddc  ", "  cdfffdc  ", "  cdefedc  ", "bbcdefedcbb", "abbcc~ccbba")
                    .aisle("a    c    a", "    cdc    ", "    cdc    ", "  bccdccb  ", "  ccedecc  ", "  ccefecc  ", "  cceeecc  ", "  cceeecc  ", "a bcccccb a")
                    .aisle("a         a", "     c     ", "     c     ", "  bbcccbb  ", "   ccdcc   ", "   ccdcc   ", "   ccdcc   ", "   ccdcc   ", "a  bcccb  a")
                    .aisle("a         a", "           ", "           ", " bbbbcbbbb ", "    ccc    ", "    ccc    ", "    ccc    ", "    ccc    ", "a   bbb   a")
                    .aisle("a         a", "           ", "           ", "bbb     bbb", "           ", "           ", "           ", "     b     ", "a    b    a")
                    .aisle("aaaaaaaaaaa", "a         a", "a         a", "ab       ba", "a         a", "a         a", "a         a", "a    b    a", "aaaaaaaaaaa")
                    .where("~", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("c", Predicates.blocks(GTLBlocks.ECHO_CASING.get())
                            .or(Predicates.abilities(PartAbility.EXPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(Predicates.abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(Predicates.abilities(PartAbility.INPUT_ENERGY).setMaxGlobalLimited(2))
                            .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where("a", Predicates.blocks(GTLBlocks.OXIDATION_RESISTANT_HASTELLOY_N_MECHANICAL_CASING.get()))
                    .where("b", Predicates.blocks(Registries.getBlock("gtceu:hastelloy_x_frame")))
                    .where("d", Predicates.blocks(GTBlocks.CASING_TITANIUM_PIPE.get()))
                    .where("e", Predicates.blocks(GCyMBlocks.MOLYBDENUM_DISILICIDE_COIL_BLOCK.get()))
                    .where("f", Predicates.blocks(Registries.getBlock("kubejs:neutronium_gearbox")))
                    .where("g", Predicates.blocks(Registries.getBlock("kubejs:machine_casing_grinding_head")))
                    .where(" ", Predicates.any())
                    .build())
            .beforeWorking((machine, recipe) -> {
                Level level = machine.self().getLevel();
                if (level != null) {
                    if (Math.random() < 0.1) {
                        level.setBlockAndUpdate(machine.self().getPos().offset(0, -9, 0), Blocks.AIR.defaultBlockState());
                    }
                    return Objects.equals(level.getBlockState(machine.self().getPos().offset(0, -9, 0)).getBlock().kjs$getId(), "minecraft:bedrock");
                }
                return false;
            })
            .workableCasingRenderer(GTLCore.id("block/casings/echo_casing"), GTCEu.id("block/multiblock/cleanroom"))
            .register();

    public final static MultiblockMachineDefinition CREATE_AGGREGATION = REGISTRATE.multiblock("create_aggregation", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.NONE)
            .allowExtendedFacing(false)
            .allowFlip(false)
            .recipeType(GTLRecipeTypes.CREATE_AGGREGATION_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.create_aggregation")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifier(GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(new OverclockingLogic(1, 1, false)))
            .appearanceBlock(GTLBlocks.DIMENSION_CONNECTION_CASING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("          aaaaaaaaaaaaaa          ")
                    .aisle("       aaaaaaaaaaaaa       ", "             bb             ", "       aaaaaaaaaaaaa       ")
                    .aisle("     aaaaaaaaaaaaaaaaa     ", "     c      bbb      c     ", "     c       b       c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c       b       c     ", "     c      bbb      c     ", "     aaaaaaaaaaaaaaaaa     ")
                    .aisle("    aaaaaaaaaaaaaaaaaaa    ", "    c       bbb       c    ", "    c       bbb       c    ", "    c        b        c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c        b        c    ", "    c       bbb       c    ", "    c       bbb       c    ", "    aaaaaaaaaaaaaaaaaaa    ")
                    .aisle("   aaaaaaaaaaaaaaaaaaaaa   ", "   c         b         c   ", "   c        bbb        c   ", "   c        bbb        c   ", "   c         b         c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c         b         c   ", "   c        bbb        c   ", "   c        bbb        c   ", "   c         b         c   ", "   aaaaaaaaaaaaaaaaaaaaa   ")
                    .aisle("  aaaaaaaaaaaaaaaaaaaaaaa  ", "  c                     c  ", "  c          b          c  ", "  c         bbb         c  ", "  c         bbb         c  ", "  c          b          c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c          b          c  ", "  c         bbb         c  ", "  c         bbb         c  ", "  c          b          c  ", "  c                     c  ", "  aaaaaaaaaaaaaaaaaaaaaaa  ")
                    .aisle(" aaaaaaaaaaaaaaaaaaaaaaaa  ", "                           ", "                           ", "             b             ", "            bbb            ", "            bbb            ", "             bb             ", "            bbb            ", "            bbb            ", "             b             ", "                           ", "                           ", "  aaaaaaaaaaaaaaaaaaaaaaa  ")
                    .aisle(" aaaaaaaaaaaaaaaaaaaaaaaaa ", "                           ", "                           ", "                           ", "             b             ", "            bbb            ", "            bbb            ", "             bb             ", "            bbb            ", "            bbb            ", "             b             ", "                           ", "                           ", "                           ", " aaaaaaaaaaaaaaaaaaaaaaaaa ")
                    .aisle(" aaaaaaaaaaaaaaaaaaaaaaaaa ", "                           ", "                           ", "                           ", "                           ", "             b             ", "            bbb            ", "            bbb            ", "             b             ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "             b             ", "            bbb            ", "            bbb            ", "             b             ", "                           ", "                           ", "                           ", "                           ", " aaaaaaaaaaaaaaaaaaaaaaaaa ")
                    .aisle(" aaaaaaaaaaaaaaaaaaaaaaaaa ", "           ddddd           ", "           ddddd           ", "           ddddd           ", "           ddddd           ", "           ddddd           ", "           ddddd           ", "           ddddd           ", "           ddddd           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "           ddddd           ", "           ddddd           ", "           ddddd           ", "           ddddd           ", "           ddddd           ", "           ddddd           ", "           ddddd           ", "           ddddd           ", " aaaaaaaaaaaaaaaaaaaaaaaaa ")
                    .aisle("aaaaaaaaaaaaaaaaaaaaaaaaaaa", "          ddddddd          ", "          dd   dd          ", "          dd   dd          ", "          dd   dd          ", "          dd   dd          ", "          dd   dd          ", "          dd   dd          ", "          ddddddd          ", "            ddd            ", "            ddd            ", "            ddd            ", "            ddd            ", "            ddd            ", "            ddd            ", "                           ", "                           ", "                           ", "            ddd            ", "            ddd            ", "            ddd            ", "            ddd            ", "            ddd            ", "            ddd            ", "          ddddddd          ", "          dd   dd          ", "          dd   dd          ", "          dd   dd          ", "          dd   dd          ", "          dd   dd          ", "          dd   dd          ", "          ddddddd          ", "aaaaaaaaaaaaaaaaaaaaaaaaaaa")
                    .aisle("aaaaaaaaaaaaaaaaaaaaaaaaaaa", "         ddddddddd         ", "         dd     dd         ", "         dd     dd         ", "         dd     dd         ", "         dd     dd         ", "         dd     dd         ", "         dd     dd         ", "         ddddddddd         ", "           d   d           ", "           d   d           ", "           d   d           ", "           d   d           ", "           d   d           ", "           ddddd           ", "                           ", "                           ", "                           ", "           ddddd           ", "           d   d           ", "           d   d           ", "           d   d           ", "           d   d           ", "           d   d           ", "         ddddddddd         ", "         dd     dd         ", "         dd     dd         ", "         dd     dd         ", "         dd     dd         ", "         dd     dd         ", "         dd     dd         ", "         ddddddddd         ", "aaaaaaaaaaaaaaaaaaaaaaaaaaa")
                    .aisle("aaaaaaaaaaaaaaaaaaaaaaaaaaa", "  bb     ddddddddd     bb  ", "   bb    d  eee  d    bb   ", "    bb   d  eee  d   bb    ", "     bb  d  eee  d  bb     ", "      bb d  eee  d bb      ", "       bbd  eee  dbb       ", "        bd  eee  db        ", "         dddeeeddd         ", "          d eee d          ", "          d eee d          ", "          d eee d          ", "          d eee d          ", "          d eee d          ", "          ddeeedd          ", "            ddd            ", "                           ", "            ddd            ", "          ddeeedd          ", "          d eee d          ", "          d eee d          ", "          d eee d          ", "          d eee d          ", "          d eee d          ", "         dddeeeddd         ", "        bd  eee  db        ", "       bbd  eee  dbb       ", "      bb d  eee  d bb      ", "     bb  d  eee  d  bb     ", "    bb   d  eee  d   bb    ", "   bb    d  eee  d    bb   ", "  bb     ddddddddd     bb  ", "aaaaaaaaaaaaaaaaaaaaaaaaaaa")
                    .aisle("aaaaaaaaaaaaaaaaaaaaaaaaaaa", " bbbb    ddddddddd    bbbb ", "  bbbb   d  eee  d   bbbb  ", "   bbbb  d  eee  d  bbbb   ", "    bbbb d  eee  d bbbb    ", "     bbbbd  eee  dbbbb     ", "      bbbd  eee  dbbb      ", "       bbd  eee  dbb       ", "        bdddeeedddb        ", "          d eee d          ", "          d eee d          ", "          d eee d          ", "          d eee d          ", "          d eee d          ", "          ddeeedd          ", "            dfd            ", "                           ", "            dfd            ", "          ddeeedd          ", "          d eee d          ", "          d eee d          ", "          d eee d          ", "          d eee d          ", "          d eee d          ", "        bdddeeedddb        ", "       bbd  eee  dbb       ", "      bbbd  eee  dbbb      ", "     bbbbd  eee  dbbbb     ", "    bbbb d  eee  d bbbb    ", "   bbbb  d  eee  d  bbbb   ", "  bbbb   d  eee  d   bbbb  ", "  bbb    ddddddddd    bbb  ", "aaaaaaaaaaaaa~aaaaaaaaaaaaa")
                    .aisle("aaaaaaaaaaaaaaaaaaaaaaaaaaa", "  bb     ddddddddd     bb  ", "   bb    d  eee  d    bb   ", "    bb   d  eee  d   bb    ", "     bb  d  eee  d  bb     ", "      bb d  eee  d bb      ", "       bbd  eee  dbb       ", "        bd  eee  db        ", "         dddeeeddd         ", "          d eee d          ", "          d eee d          ", "          d eee d          ", "          d eee d          ", "          d eee d          ", "          ddeeedd          ", "            ddd            ", "                           ", "            ddd            ", "          ddeeedd          ", "          d eee d          ", "          d eee d          ", "          d eee d          ", "          d eee d          ", "          d eee d          ", "         dddeeeddd         ", "        bd  eee  db        ", "       bbd  eee  dbb       ", "      bb d  eee  d bb      ", "     bb  d  eee  d  bb     ", "    bb   d  eee  d   bb    ", "   bb    d  eee  d    bb   ", "  bb     ddddddddd     bb  ", "aaaaaaaaaaaaaaaaaaaaaaaaaaa")
                    .aisle("aaaaaaaaaaaaaaaaaaaaaaaaaaa", "         ddddddddd         ", "         dd     dd         ", "         dd     dd         ", "         dd     dd         ", "         dd     dd         ", "         dd     dd         ", "         dd     dd         ", "         ddddddddd         ", "           d   d           ", "           d   d           ", "           d   d           ", "           d   d           ", "           d   d           ", "           ddddd           ", "                           ", "                           ", "                           ", "           ddddd           ", "           d   d           ", "           d   d           ", "           d   d           ", "           d   d           ", "           d   d           ", "         ddddddddd         ", "         dd     dd         ", "         dd     dd         ", "         dd     dd         ", "         dd     dd         ", "         dd     dd         ", "         dd     dd         ", "         ddddddddd         ", "aaaaaaaaaaaaaaaaaaaaaaaaaaa")
                    .aisle("aaaaaaaaaaaaaaaaaaaaaaaaaaa", "          ddddddd          ", "          dd   dd          ", "          dd   dd          ", "          dd   dd          ", "          dd   dd          ", "          dd   dd          ", "          dd   dd          ", "          ddddddd          ", "            ddd            ", "            ddd            ", "            ddd            ", "            ddd            ", "            ddd            ", "            ddd            ", "                           ", "                           ", "                           ", "            ddd            ", "            ddd            ", "            ddd            ", "            ddd            ", "            ddd            ", "            ddd            ", "          ddddddd          ", "          dd   dd          ", "          dd   dd          ", "          dd   dd          ", "          dd   dd          ", "          dd   dd          ", "          dd   dd          ", "          ddddddd          ", "aaaaaaaaaaaaaaaaaaaaaaaaaaa")
                    .aisle(" aaaaaaaaaaaaaaaaaaaaaaaaa ", "           ddddd           ", "           ddddd           ", "           ddddd           ", "           ddddd           ", "           ddddd           ", "           ddddd           ", "           ddddd           ", "           ddddd           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "           ddddd           ", "           ddddd           ", "           ddddd           ", "           ddddd           ", "           ddddd           ", "           ddddd           ", "           ddddd           ", "           ddddd           ", " aaaaaaaaaaaaaaaaaaaaaaaaa ")
                    .aisle(" aaaaaaaaaaaaaaaaaaaaaaaaa ", "                           ", "                           ", "                           ", "                           ", "             b             ", "            bbb            ", "            bbb            ", "             b             ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "             b             ", "            bbb            ", "            bbb            ", "             b             ", "                           ", "                           ", "                           ", "                           ", " aaaaaaaaaaaaaaaaaaaaaaaaa ")
                    .aisle(" aaaaaaaaaaaaaaaaaaaaaaaaa ", "                           ", "                           ", "                           ", "             b             ", "            bbb            ", "            bbb            ", "             bb             ", "            bbb            ", "            bbb            ", "             b             ", "                           ", "                           ", "                           ", " aaaaaaaaaaaaaaaaaaaaaaaaa ")
                    .aisle("  aaaaaaaaaaaaaaaaaaaaaaa  ", "                           ", "                           ", "             b             ", "            bbb            ", "            bbb            ", "             bb             ", "            bbb            ", "            bbb            ", "             b             ", "                           ", "                           ", "  aaaaaaaaaaaaaaaaaaaaaaa  ")
                    .aisle("  aaaaaaaaaaaaaaaaaaaaaaa  ", "  c                     c  ", "  c          b          c  ", "  c         bbb         c  ", "  c         bbb         c  ", "  c          b          c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c                     c  ", "  c          b          c  ", "  c         bbb         c  ", "  c         bbb         c  ", "  c          b          c  ", "  c                     c  ", "  aaaaaaaaaaaaaaaaaaaaaaa  ")
                    .aisle("   aaaaaaaaaaaaaaaaaaaaa   ", "   c         b         c   ", "   c        bbb        c   ", "   c        bbb        c   ", "   c         b         c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c                   c   ", "   c         b         c   ", "   c        bbb        c   ", "   c        bbb        c   ", "   c         b         c   ", "   aaaaaaaaaaaaaaaaaaaaa   ")
                    .aisle("    aaaaaaaaaaaaaaaaaaa    ", "    c       bbb       c    ", "    c       bbb       c    ", "    c        b        c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c                 c    ", "    c        b        c    ", "    c       bbb       c    ", "    c       bbb       c    ", "    aaaaaaaaaaaaaaaaaaa    ")
                    .aisle("     aaaaaaaaaaaaaaaaa     ", "     c      bbb      c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c               c     ", "     c       b       c     ", "     c      bbb      c     ", "     aaaaaaaaaaaaaaaaa     ")
                    .aisle("       aaaaaaaaaaaaa       ", "             bb             ", "       aaaaaaaaaaaaa       ")
                    .aisle("          aaaaaaaaaaaaaa          ")
                    .where("a", Predicates.blocks(GTLBlocks.DIMENSION_CONNECTION_CASING.get())
                            .or(Predicates.abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(Predicates.abilities(PartAbility.INPUT_ENERGY).setMaxGlobalLimited(1))
                            .or(Predicates.abilities(PartAbility.COMPUTATION_DATA_RECEPTION).setMaxGlobalLimited(1)))
                    .where("b", Predicates.blocks(Registries.getBlock("kubejs:dimensional_bridge_casing")))
                    .where("c", Predicates.blocks(Registries.getBlock("gtceu:infinity_frame")))
                    .where("d", Predicates.blocks(GTLBlocks.CREATE_CASING.get()))
                    .where("e", Predicates.blocks(Registries.getBlock("kubejs:spacetime_compression_field_generator")))
                    .where("f", Predicates.blocks(Registries.getBlock("kubejs:create_aggregatione_core")))
                    .where("~", Predicates.controller(Predicates.blocks(definition.get())))
                    .where(" ", Predicates.any())
                    .build())
            .onWorking(machine -> {
                if (machine.getRecipeLogic().getProgress() == 19) {
                    Level level = machine.self().getLevel();
                    if (level != null) {
                        BlockPos pos = machine.self().getPos().offset(0, -16, 0);
                        String block = level.getBlockState(pos).getBlock().kjs$getId();
                        if (MachineIO.inputItem((WorkableMultiblockMachine) machine, Registries.getItemStack("kubejs:chain_command_block_core")) && Objects.equals(block, "kubejs:command_block_broken")) {
                            level.setBlockAndUpdate(pos, Blocks.CHAIN_COMMAND_BLOCK.defaultBlockState());
                        }
                        if (MachineIO.inputItem((WorkableMultiblockMachine) machine, Registries.getItemStack("kubejs:repeating_command_block_core")) && Objects.equals(block, "kubejs:chain_command_block_broken")) {
                            level.setBlockAndUpdate(pos, Blocks.COMMAND_BLOCK.defaultBlockState());
                        }
                    }
                }
                return true;
            })
            .workableCasingRenderer(GTLCore.id("block/dimension_connection_casing"), GTCEu.id("block/multiblock/create_aggregation"))
            .register();

    public final static MultiblockMachineDefinition SUPRACHRONAL_ASSEMBLY_LINE = REGISTRATE.multiblock("suprachronal_assembly_line", (holder) -> new SuprachronalAssemblyLineMachine(holder, false))
            .rotationState(RotationState.ALL)
            .recipeType(GTLRecipeTypes.SUPRACHRONAL_ASSEMBLY_LINE_RECIPES)
            .recipeType(GTRecipeTypes.ASSEMBLY_LINE_RECIPES)
            .recipeType(GTLRecipeTypes.CIRCUIT_ASSEMBLY_LINE_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.suprachronal_assembly_line.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.duration_multiplier.tooltip", 0.4))
            .tooltips(Component.translatable("gtceu.machine.suprachronal_assembly_line.tooltip.1"))
            .tooltips(Component.translatable("gtceu.multiblock.laser.tooltip"))
            .tooltips(Component.translatable("gtceu.machine.perfect_oc"))
            .tooltips(Component.translatable("gtceu.multiblock.parallelizable.tooltip"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_3.tooltip",
                    Component.translatable("gtceu.suprachronal_assembly_line"), Component.translatable("gtceu.assembly_line"), Component.translatable("gtceu.circuit_assembly_line")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifiers((machine, recipe, params, result) -> GTLRecipeModifiers.reduction(machine, recipe, 1, 0.4), GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK_SUBTICK))
            .appearanceBlock(GTLBlocks.MOLECULAR_CASING)
            .pattern(definition -> FactoryBlockPattern.start(RelativeDirection.UP, RelativeDirection.BACK, RelativeDirection.LEFT)
                    .aisle
                    .aisle("                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ")
                    .aisle("                                   ", "                                   ", "                                   ", "                                   ", "            III   IIIII            ", "          IICCCIIICCCCCII          ", "            III   IIIII            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            III   IIIII            ", "          IICCCDDDCCCCCII          ", "            III   IIIII            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            III   IIIII            ", "          IICCCIIICCCCCII          ", "            III   IIIII            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            III   IIIII            ", "          IICCCDDDCCCCCII          ", "            III   IIIII            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            III   IIIII            ", "          IICCCIIICCCCCII          ", "            III   IIIII            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            III   IIIII            ", "          IICCCDDDCCCCCII          ", "            III   IIIII            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            III   IIIII            ", "          IICCCIIICCCCCII          ", "            III   IIIII            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            III   IIIII            ", "          IICCCDDDCCCCCII          ", "            III   IIIII            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            III   IIIII            ", "          IICCCIIICCCCCII          ", "            III   IIIII            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            III   IIIII            ", "          IICCCDDDCCCCCII          ", "            III   IIIII            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            III   IIIII            ", "          IICCCIIICCCCCII          ", "            III   IIIII            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            III   IIIII            ", "          IICCCDDDCCCCCII          ", "            III   IIIII            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            III   IIIII            ", "          IICCCIIICCCCCII          ", "            III   IIIII            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            III   IIIII            ", "          IICCCDDDCCCCCII          ", "            III   IIIII            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            III   IIIII            ", "          IICCCIIICCCCCII          ", "            III   IIIII            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            III   IIIII            ", "          IICCCDDDCCCCCII          ", "            III   IIIII            ", "                                   ", "                                   ", "                                   ", "                                   ")
                    .aisle("                                   ", "                                   ", "                                   ", "                                   ", "          II    II     II          ", "        IICCDDIICCDDDDDCCII        ", "          II    II     II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II           II          ", "        IICCDDD   DDDDDCCII        ", "          II           II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II    II     II          ", "        IICCDDIICCDDDDDCCII        ", "          II    II     II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II           II          ", "        IICCDDD   DDDDDCCII        ", "          II           II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II    II     II          ", "        IICCDDIICCDDDDDCCII        ", "          II    II     II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II           II          ", "        IICCDDD   DDDDDCCII        ", "          II           II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II    II     II          ", "        IICCDDIICCDDDDDCCII        ", "          II    II     II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II           II          ", "        IICCDDD   DDDDDCCII        ", "          II           II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II    II     II          ", "        IICCDDIICCDDDDDCCII        ", "          II    II     II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II           II          ", "        IICCDDD   DDDDDCCII        ", "          II           II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II    II     II          ", "        IICCDDIICCDDDDDCCII        ", "          II    II     II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II           II          ", "        IICCDDD   DDDDDCCII        ", "          II           II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II    II     II          ", "        IICCDDIICCDDDDDCCII        ", "          II    II     II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II           II          ", "        IICCDDD   DDDDDCCII        ", "          II           II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II    II     II          ", "        IICCDDIICCDDDDDCCII        ", "          II    II     II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II           II          ", "        IICCDDD   DDDDDCCII        ", "          II           II          ", "                                   ", "                                   ", "                                   ", "                                   ")
                    .aisle("                                   ", "                                   ", "                                   ", "                                   ", "        II    II         II        ", "       ICCDD ICCBB     DDCCI       ", "        II    II         II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II               II        ", "       ICCDD           DDCCI       ", "        II               II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II    II         II        ", "       ICCDD ICCBB     DDCCI       ", "        II    II         II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II               II        ", "       ICCDD           DDCCI       ", "        II               II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II    II         II        ", "       ICCDD ICCBB     DDCCI       ", "        II    II         II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II               II        ", "       ICCDD           DDCCI       ", "        II               II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II    II         II        ", "       ICCDD ICCBB     DDCCI       ", "        II    II         II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II               II        ", "       ICCDD           DDCCI       ", "        II               II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II    II         II        ", "       ICCDD ICCBB     DDCCI       ", "        II    II         II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II               II        ", "       ICCDD           DDCCI       ", "        II               II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II    II         II        ", "       ICCDD ICCBB     DDCCI       ", "        II    II         II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II               II        ", "       ICCDD           DDCCI       ", "        II               II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II    II         II        ", "       ICCDD ICCBB     DDCCI       ", "        II    II         II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II               II        ", "       ICCDD           DDCCI       ", "        II               II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II    II         II        ", "       ICCDD ICCBB     DDCCI       ", "        II    II         II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II               II        ", "       ICCDD           DDCCI       ", "        II               II        ", "                                   ", "                                   ", "                                   ", "                                   ")
                    .aisle("                                   ", "                                   ", "                                   ", "                                   ", "       I     I             I       ", "      ICDD  ICBB         DDCI      ", "       I     I             I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I                   I       ", "      ICDD               DDCI      ", "       I                   I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I     I             I       ", "      ICDD  ICBB         DDCI      ", "       I     I             I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I                   I       ", "      ICDD               DDCI      ", "       I                   I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I     I             I       ", "      ICDD  ICBB         DDCI      ", "       I     I             I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I                   I       ", "      ICDD               DDCI      ", "       I                   I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I     I             I       ", "      ICDD  ICBB         DDCI      ", "       I     I             I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I                   I       ", "      ICDD               DDCI      ", "       I                   I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I     I             I       ", "      ICDD  ICBB         DDCI      ", "       I     I             I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I                   I       ", "      ICDD               DDCI      ", "       I                   I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I     I             I       ", "      ICDD  ICBB         DDCI      ", "       I     I             I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I                   I       ", "      ICDD               DDCI      ", "       I                   I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I     I             I       ", "      ICDD  ICBB         DDCI      ", "       I     I             I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I                   I       ", "      ICDD               DDCI      ", "       I                   I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I     I             I       ", "      ICDD  ICBB         DDCI      ", "       I     I             I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I                   I       ", "      ICDD               DDCI      ", "       I                   I       ", "                                   ", "                                   ", "                                   ", "                                   ")
                    .aisle("                                   ", "                                   ", "                                   ", "                                   ", "      I     I               I      ", "     ICD   ICB             DCI     ", "      I     I               I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I                     I      ", "     ICD                   DCI     ", "      I                     I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I     I               I      ", "     ICD   ICB             DCI     ", "      I     I               I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I                     I      ", "     ICD                   DCI     ", "      I                     I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I     I               I      ", "     ICD   ICB             DCI     ", "      I     I               I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I                     I      ", "     ICD                   DCI     ", "      I                     I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I     I               I      ", "     ICD   ICB             DCI     ", "      I     I               I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I                     I      ", "     ICD                   DCI     ", "      I                     I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I     I               I      ", "     ICD   ICB             DCI     ", "      I     I               I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I                     I      ", "     ICD                   DCI     ", "      I                     I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I     I               I      ", "     ICD   ICB             DCI     ", "      I     I               I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I                     I      ", "     ICD                   DCI     ", "      I                     I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I     I               I      ", "     ICD   ICB             DCI     ", "      I     I               I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I                     I      ", "     ICD                   DCI     ", "      I                     I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I     I               I      ", "     ICD   ICB             DCI     ", "      I     I               I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I                     I      ", "     ICD                   DCI     ", "      I                     I      ", "                                   ", "                                   ", "                                   ", "                                   ")
                    .aisle("                                   ", "                                   ", "                                   ", "                                   ", "     I     I                 I     ", "    ICD   ICB               DCI    ", "     I     I                 I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I                       I     ", "    ICD           IIII      DCI    ", "     I                       I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I     I                 I     ", "    ICD   ICB               DCI    ", "     I     I                 I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I                       I     ", "    ICD           IIII      DCI    ", "     I                       I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I     I                 I     ", "    ICD   ICB               DCI    ", "     I     I                 I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I                       I     ", "    ICD           IIII      DCI    ", "     I                       I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I     I                 I     ", "    ICD   ICB               DCI    ", "     I     I                 I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I                       I     ", "    ICD           IIII      DCI    ", "     I                       I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I     I                 I     ", "    ICD   ICB               DCI    ", "     I     I                 I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I                       I     ", "    ICD           IIII      DCI    ", "     I                       I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I     I                 I     ", "    ICD   ICB               DCI    ", "     I     I                 I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I                       I     ", "    ICD           IIII      DCI    ", "     I                       I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I     I                 I     ", "    ICD   ICB               DCI    ", "     I     I                 I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I                       I     ", "    ICD           IIII      DCI    ", "     I                       I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I     I                 I     ", "    ICD   ICB               DCI    ", "     I     I                 I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I                       I     ", "    ICD           IIII      DCI    ", "     I                       I     ", "                                   ", "                                   ", "                                   ", "                                   ")
                    .aisle("                                   ", "               EEEEE               ", "                                   ", "                                   ", "    I     I                   I    ", "   ICD   ICB                 DCI   ", "    I     I                   I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I             IIII        I    ", "   ICD          IICCCCIII    DCI   ", "    I             IIII        I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I     I                   I    ", "   ICD   ICB                 DCI   ", "    I     I                   I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I             IIII        I    ", "   ICD          IICCCCIII    DCI   ", "    I             IIII        I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I     I                   I    ", "   ICD   ICB                 DCI   ", "    I     I                   I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I             IIII        I    ", "   ICD          IICCCCIII    DCI   ", "    I             IIII        I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I     I                   I    ", "   ICD   ICB                 DCI   ", "    I     I                   I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I             IIII        I    ", "   ICD          IICCCCIII    DCI   ", "    I             IIII        I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I     I                   I    ", "   ICD   ICB                 DCI   ", "    I     I                   I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I             IIII        I    ", "   ICD          IICCCCIII    DCI   ", "    I             IIII        I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I     I                   I    ", "   ICD   ICB                 DCI   ", "    I     I                   I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I             IIII        I    ", "   ICD          IICCCCIII    DCI   ", "    I             IIII        I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I     I                   I    ", "   ICD   ICB                 DCI   ", "    I     I                   I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I             IIII        I    ", "   ICD          IICCCCIII    DCI   ", "    I             IIII        I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I     I                   I    ", "   ICD   ICB                 DCI   ", "    I     I                   I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I             IIII        I    ", "   ICD          IICCCCIII    DCI   ", "    I             IIII        I    ", "                                   ", "                                   ", "               EEEEE               ", "                                   ")
                    .aisle("               LLLLL               ", "             EEHHHHHEE             ", "               LLLLL               ", "                                   ", "    I     I                   I    ", "   ICD   ICB                 DCI   ", "    I     I                   I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I           II    III     I    ", "   ICD         ICCBBBBCCCII  DCI   ", "    I           II    III     I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I     I                   I    ", "   ICD   ICB                 DCI   ", "    I     I                   I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I           II    III     I    ", "   ICD         ICCBBBBCCCII  DCI   ", "    I           II    III     I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I     I                   I    ", "   ICD   ICB                 DCI   ", "    I     I                   I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I           II    III     I    ", "   ICD         ICCBBBBCCCII  DCI   ", "    I           II    III     I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I     I                   I    ", "   ICD   ICB                 DCI   ", "    I     I                   I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I           II    III     I    ", "   ICD         ICCBBBBCCCII  DCI   ", "    I           II    III     I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I     I                   I    ", "   ICD   ICB                 DCI   ", "    I     I                   I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I           II    III     I    ", "   ICD         ICCBBBBCCCII  DCI   ", "    I           II    III     I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I     I                   I    ", "   ICD   ICB                 DCI   ", "    I     I                   I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I           II    III     I    ", "   ICD         ICCBBBBCCCII  DCI   ", "    I           II    III     I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I     I                   I    ", "   ICD   ICB                 DCI   ", "    I     I                   I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I           II    III     I    ", "   ICD         ICCBBBBCCCII  DCI   ", "    I           II    III     I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I     I                   I    ", "   ICD   ICB                 DCI   ", "    I     I                   I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I           II    III     I    ", "   ICD         ICCBBBBCCCII  DCI   ", "    I           II    III     I    ", "                                   ", "               LLLLL               ", "             EEHHHHHEE             ", "               LLLLL               ")
                    .aisle("             LL     LL             ", "            EHHIIIIIHHE            ", "             LL     LL             ", "                                   ", "   I     I                     I   ", "  ICD   ICB     IIII          DCI  ", "   I     I                     I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I           I         II    I   ", "  ICD         ICBB    BBBCCI  DCI  ", "   I           I         II    I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I     I                     I   ", "  ICD   ICB     IIII          DCI  ", "   I     I                     I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I           I         II    I   ", "  ICD         ICBB    BBBCCI  DCI  ", "   I           I         II    I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I     I                     I   ", "  ICD   ICB     IIII          DCI  ", "   I     I                     I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I           I         II    I   ", "  ICD         ICBB    BBBCCI  DCI  ", "   I           I         II    I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I     I                     I   ", "  ICD   ICB     IIII          DCI  ", "   I     I                     I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I           I         II    I   ", "  ICD         ICBB    BBBCCI  DCI  ", "   I           I         II    I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I     I                     I   ", "  ICD   ICB     IIII          DCI  ", "   I     I                     I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I           I         II    I   ", "  ICD         ICBB    BBBCCI  DCI  ", "   I           I         II    I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I     I                     I   ", "  ICD   ICB     IIII          DCI  ", "   I     I                     I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I           I         II    I   ", "  ICD         ICBB    BBBCCI  DCI  ", "   I           I         II    I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I     I                     I   ", "  ICD   ICB     IIII          DCI  ", "   I     I                     I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I           I         II    I   ", "  ICD         ICBB    BBBCCI  DCI  ", "   I           I         II    I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I     I                     I   ", "  ICD   ICB     IIII          DCI  ", "   I     I                     I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I           I         II    I   ", "  ICD         ICBB    BBBCCI  DCI  ", "   I           I         II    I   ", "                                   ", "             LL     LL             ", "            EHHIIIIIHHE            ", "             LL     LL             ")
                    .aisle("            L         L            ", "           EHII     IIHE           ", "            L         L            ", "                                   ", "   I     I      IIII           I   ", "  ICD   ICB    ICCCCII        DCI  ", "   I     I      IIII           I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I          I            I   I   ", "  ICD        ICB         BBCI DCI  ", "   I          I            I   I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I     I      IIII           I   ", "  ICD   ICB    ICCCCII        DCI  ", "   I     I      IIII           I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I          I            I   I   ", "  ICD        ICB         BBCI DCI  ", "   I          I            I   I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I     I      IIII           I   ", "  ICD   ICB    ICCCCII        DCI  ", "   I     I      IIII           I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I          I            I   I   ", "  ICD        ICB         BBCI DCI  ", "   I          I            I   I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I     I      IIII           I   ", "  ICD   ICB    ICCCCII        DCI  ", "   I     I      IIII           I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I          I            I   I   ", "  ICD        ICB         BBCI DCI  ", "   I          I            I   I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I     I      IIII           I   ", "  ICD   ICB    ICCCCII        DCI  ", "   I     I      IIII           I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I          I            I   I   ", "  ICD        ICB         BBCI DCI  ", "   I          I            I   I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I     I      IIII           I   ", "  ICD   ICB    ICCCCII        DCI  ", "   I     I      IIII           I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I          I            I   I   ", "  ICD        ICB         BBCI DCI  ", "   I          I            I   I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I     I      IIII           I   ", "  ICD   ICB    ICCCCII        DCI  ", "   I     I      IIII           I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I          I            I   I   ", "  ICD        ICB         BBCI DCI  ", "   I          I            I   I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I     I      IIII           I   ", "  ICD   ICB    ICCCCII        DCI  ", "   I     I      IIII           I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I          I            I   I   ", "  ICD        ICB         BBCI DCI  ", "   I          I            I   I   ", "                                   ", "            L         L            ", "           EHII     IIHE           ", "            L         L            ")
                    .aisle("           L           L           ", "          EHI         IHE          ", "           L           L           ", "                JJJ                ", "  I      I     JJJJJII          I  ", " ICD    ICB    JJJJJCCI        DCI ", "  I      I     JJJJJII          I  ", "                JJJ                ", "                                   ", "                                   ", "                                   ", "                                   ", "  I          I              I   I  ", " ICD        ICB            BCI DCI ", "  I          I              I   I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                JJJ                ", "  I      I     JJJJJII          I  ", " ICD    ICB    JJJJJCCI        DCI ", "  I      I     JJJJJII          I  ", "                JJJ                ", "                                   ", "                                   ", "                                   ", "                                   ", "  I          I              I   I  ", " ICD        ICB            BCI DCI ", "  I          I              I   I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                JJJ                ", "  I      I     JJJJJII          I  ", " ICD    ICB    JJJJJCCI        DCI ", "  I      I     JJJJJII          I  ", "                JJJ                ", "                                   ", "                                   ", "                                   ", "                                   ", "  I          I              I   I  ", " ICD        ICB            BCI DCI ", "  I          I              I   I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                JJJ                ", "  I      I     JJJJJII          I  ", " ICD    ICB    JJJJJCCI        DCI ", "  I      I     JJJJJII          I  ", "                JJJ                ", "                                   ", "                                   ", "                                   ", "                                   ", "  I          I              I   I  ", " ICD        ICB            BCI DCI ", "  I          I              I   I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                JJJ                ", "  I      I     JJJJJII          I  ", " ICD    ICB    JJJJJCCI        DCI ", "  I      I     JJJJJII          I  ", "                JJJ                ", "                                   ", "                                   ", "                                   ", "                                   ", "  I          I              I   I  ", " ICD        ICB            BCI DCI ", "  I          I              I   I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                JJJ                ", "  I      I     JJJJJII          I  ", " ICD    ICB    JJJJJCCI        DCI ", "  I      I     JJJJJII          I  ", "                JJJ                ", "                                   ", "                                   ", "                                   ", "                                   ", "  I          I              I   I  ", " ICD        ICB            BCI DCI ", "  I          I              I   I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                JJJ                ", "  I      I     JJJJJII          I  ", " ICD    ICB    JJJJJCCI        DCI ", "  I      I     JJJJJII          I  ", "                JJJ                ", "                                   ", "                                   ", "                                   ", "                                   ", "  I          I              I   I  ", " ICD        ICB            BCI DCI ", "  I          I              I   I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                JJJ                ", "  I      I     JJJJJII          I  ", " ICD    ICB    JJJJJCCI        DCI ", "  I      I     JJJJJII          I  ", "                JJJ                ", "                                   ", "                                   ", "                                   ", "                                   ", "  I          I              I   I  ", " ICD        ICB            BCI DCI ", "  I          I              I   I  ", "                                   ", "           L           L           ", "          EHI         IHE          ", "           L           L           ")
                    .aisle("          L             L          ", "         EHI           IHE         ", "          L     III     L          ", "                                   ", "  I     I        E    I         I  ", " ICD   ICB      EHE BBCI       DCI ", "  I     I        E    I         I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I         I                I  I  ", " ICD       ICB              BCIDCI ", "  I         I                I  I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I     I        E    I         I  ", " ICD   ICB      EHE BBCI       DCI ", "  I     I        E    I         I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I         I                I  I  ", " ICD       ICB              BCIDCI ", "  I         I                I  I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I     I        E    I         I  ", " ICD   ICB      EHE BBCI       DCI ", "  I     I        E    I         I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I         I                I  I  ", " ICD       ICB              BCIDCI ", "  I         I                I  I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I     I        E    I         I  ", " ICD   ICB      EHE BBCI       DCI ", "  I     I        E    I         I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I         I                I  I  ", " ICD       ICB              BCIDCI ", "  I         I                I  I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I     I        E    I         I  ", " ICD   ICB      EHE BBCI       DCI ", "  I     I        E    I         I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I         I                I  I  ", " ICD       ICB              BCIDCI ", "  I         I                I  I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I     I        E    I         I  ", " ICD   ICB      EHE BBCI       DCI ", "  I     I        E    I         I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I         I                I  I  ", " ICD       ICB              BCIDCI ", "  I         I                I  I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I     I        E    I         I  ", " ICD   ICB      EHE BBCI       DCI ", "  I     I        E    I         I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I         I                I  I  ", " ICD       ICB              BCIDCI ", "  I         I                I  I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I     I        E    I         I  ", " ICD   ICB      EHE BBCI       DCI ", "  I     I        E    I         I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I         I                I  I  ", " ICD       ICB              BCIDCI ", "  I         I                I  I  ", "                                   ", "          L     III     L          ", "         EHI           IHE         ", "          L             L          ")
                    .aisle("          L             L          ", "         EHI    JJJ    IHE         ", "          L    IFFFI    L          ", "                AAA                ", "  I     I       AAA    I        I  ", " ICD   ICB      AHA   BCI      DCI ", "  I     I       AAA    I        I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I         I   AAA           I I  ", " ICD       ICB  AAA          BCICI ", "  I         I   AAA           I I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I     I       AAA    I        I  ", " ICD   ICB      AHA   BCI      DCI ", "  I     I       AAA    I        I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I         I   AAA           I I  ", " ICD       ICB  AAA          BCICI ", "  I         I   AAA           I I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I     I       AAA    I        I  ", " ICD   ICB      AHA   BCI      DCI ", "  I     I       AAA    I        I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I         I   AAA           I I  ", " ICD       ICB  AAA          BCICI ", "  I         I   AAA           I I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I     I       AAA    I        I  ", " ICD   ICB      AHA   BCI      DCI ", "  I     I       AAA    I        I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I         I   AAA           I I  ", " ICD       ICB  AAA          BCICI ", "  I         I   AAA           I I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I     I       AAA    I        I  ", " ICD   ICB      AHA   BCI      DCI ", "  I     I       AAA    I        I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I         I   AAA           I I  ", " ICD       ICB  AAA          BCICI ", "  I         I   AAA           I I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I     I       AAA    I        I  ", " ICD   ICB      AHA   BCI      DCI ", "  I     I       AAA    I        I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I         I   AAA           I I  ", " ICD       ICB  AAA          BCICI ", "  I         I   AAA           I I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I     I       AAA    I        I  ", " ICD   ICB      AHA   BCI      DCI ", "  I     I       AAA    I        I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I         I   AAA           I I  ", " ICD       ICB  AAA          BCICI ", "  I         I   AAA           I I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I     I       AAA    I        I  ", " ICD   ICB      AHA   BCI      DCI ", "  I     I       AAA    I        I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I         I   AAA           I I  ", " ICD       ICB  AAA          BCICI ", "  I         I   AAA           I I  ", "                AAA                ", "          L    IFFFI    L          ", "         EHI    JJJ    IHE         ", "          L             L          ")
                    .aisle("         L      LLL      L         ", "        EHI    JIIIJ    IHE        ", "         L    IFIIIFI    L         ", "               A   A               ", " I      I      A   A    I        I ", "ICD    ICB     A H A   BCI      DCI", " I      I      A   A    I        I ", "               A   A               ", "               A   A               ", "               AM  A               ", "               AM  A               ", "               AM  A               ", " II        IJ  A M A  J       I  I ", "ICCD      ICJ  A M A  JI     BCIICI", " II        IJ  A M A  J       I  I ", "               A  MA               ", "               A  MA               ", "               A  MA               ", "               A   A               ", "               A   A               ", " I      I      A   A    I        I ", "ICD    ICB     A H A   BCI      DCI", " I      I      A   A    I        I ", "               A   A               ", "               A   A               ", "               AM  A               ", "               AM  A               ", "               AM  A               ", " II        IJ  A M A  J       I  I ", "ICCD      ICJ  A M A  JI     BCIICI", " II        IJ  A M A  J       I  I ", "               A  MA               ", "               A  MA               ", "               A  MA               ", "               A   A               ", "               A   A               ", " I      I      A   A    I        I ", "ICD    ICB     A H A   BCI      DCI", " I      I      A   A    I        I ", "               A   A               ", "               A   A               ", "               AM  A               ", "               AM  A               ", "               AM  A               ", " II        IJ  A M A  J       I  I ", "ICCD      ICJ  A M A  JI     BCIICI", " II        IJ  A M A  J       I  I ", "               A  MA               ", "               A  MA               ", "               A  MA               ", "               A   A               ", "               A   A               ", " I      I      A   A    I        I ", "ICD    ICB     A H A   BCI      DCI", " I      I      A   A    I        I ", "               A   A               ", "               A   A               ", "               AM  A               ", "               AM  A               ", "               AM  A               ", " II        IJ  A M A  J       I  I ", "ICCD      ICJ  A M A  JI     BCIICI", " II        IJ  A M A  J       I  I ", "               A  MA               ", "               A  MA               ", "               A  MA               ", "               A   A               ", "               A   A               ", " I      I      A   A    I        I ", "ICD    ICB     A H A   BCI      DCI", " I      I      A   A    I        I ", "               A   A               ", "               A   A               ", "               AM  A               ", "               AM  A               ", "               AM  A               ", " II        IJ  A M A  J       I  I ", "ICCD      ICJ  A M A  JI     BCIICI", " II        IJ  A M A  J       I  I ", "               A  MA               ", "               A  MA               ", "               A  MA               ", "               A   A               ", "               A   A               ", " I      I      A   A    I        I ", "ICD    ICB     A H A   BCI      DCI", " I      I      A   A    I        I ", "               A   A               ", "               A   A               ", "               AM  A               ", "               AM  A               ", "               AM  A               ", " II        IJ  A M A  J       I  I ", "ICCD      ICJ  A M A  JI     BCIICI", " II        IJ  A M A  J       I  I ", "               A  MA               ", "               A  MA               ", "               A  MA               ", "               A   A               ", "               A   A               ", " I      I      A   A    I        I ", "ICD    ICB     A H A   BCI      DCI", " I      I      A   A    I        I ", "               A   A               ", "               A   A               ", "               AM  A               ", "               AM  A               ", "               AM  A               ", " II        IJ  A M A  J       I  I ", "ICCD      ICJ  A M A  JI     BCIICI", " II        IJ  A M A  J       I  I ", "               A  MA               ", "               A  MA               ", "               A  MA               ", "               A   A               ", "               A   A               ", " I      I      A   A    I        I ", "ICD    ICB     A H A   BCI      DCI", " I      I      A   A    I        I ", "               A   A               ", "               A   A               ", "               AM  A               ", "               AM  A               ", "               AM  A               ", " II        IJ  A M A  J       I  I ", "ICCD      ICJ  A M A  JI     BCIICI", " II        IJ  A M A  J       I  I ", "               A  MA               ", "         L    IFIIIFI    L         ", "        EHI    JIIIJ    IHE        ", "         L      III      L         ")
                    .aisle("         L     LLLLL     L         ", "        EHI   JIHHHIJ   IHE        ", "         L   IFIHHHIFI   L         ", "              A    MA              ", " I      I     A     A    I       I ", "ICD    ICB    A     A   BCI     DCI", " I      I     A     A    I       I ", "              AM    A              ", "              AM    A              ", "              AM    A              ", "              A     A              ", "            J A     A J            ", " II        IJ A     A JI       I I ", "ICCD      ICJEA     AEJCI     BCICI", " II        IJ A     A JI       I I ", "            J A     A J            ", "              A     A              ", "              A    MA              ", "              A    MA              ", "              A    MA              ", " I      I     A     A    I       I ", "ICD    ICB    A     A   BCI     DCI", " I      I     A     A    I       I ", "              AM    A              ", "              AM    A              ", "              AM    A              ", "              A     A              ", "            J A     A J            ", " II        IJ A     A JI       I I ", "ICCD      ICJEA     AEJCI     BCICI", " II        IJ A     A JI       I I ", "            J A     A J            ", "              A     A              ", "              A    MA              ", "              A    MA              ", "              A    MA              ", " I      I     A     A    I       I ", "ICD    ICB    A     A   BCI     DCI", " I      I     A     A    I       I ", "              AM    A              ", "              AM    A              ", "              AM    A              ", "              A     A              ", "            J A     A J            ", " II        IJ A     A JI       I I ", "ICCD      ICJEA     AEJCI     BCICI", " II        IJ A     A JI       I I ", "            J A     A J            ", "              A     A              ", "              A    MA              ", "              A    MA              ", "              A    MA              ", " I      I     A     A    I       I ", "ICD    ICB    A     A   BCI     DCI", " I      I     A     A    I       I ", "              AM    A              ", "              AM    A              ", "              AM    A              ", "              A     A              ", "            J A     A J            ", " II        IJ A     A JI       I I ", "ICCD      ICJEA     AEJCI     BCICI", " II        IJ A     A JI       I I ", "            J A     A J            ", "              A     A              ", "              A    MA              ", "              A    MA              ", "              A    MA              ", " I      I     A     A    I       I ", "ICD    ICB    A     A   BCI     DCI", " I      I     A     A    I       I ", "              AM    A              ", "              AM    A              ", "              AM    A              ", "              A     A              ", "            J A     A J            ", " II        IJ A     A JI       I I ", "ICCD      ICJEA     AEJCI     BCICI", " II        IJ A     A JI       I I ", "            J A     A J            ", "              A     A              ", "              A    MA              ", "              A    MA              ", "              A    MA              ", " I      I     A     A    I       I ", "ICD    ICB    A     A   BCI     DCI", " I      I     A     A    I       I ", "              AM    A              ", "              AM    A              ", "              AM    A              ", "              A     A              ", "            J A     A J            ", " II        IJ A     A JI       I I ", "ICCD      ICJEA     AEJCI     BCICI", " II        IJ A     A JI       I I ", "            J A     A J            ", "              A     A              ", "              A    MA              ", "              A    MA              ", "              A    MA              ", " I      I     A     A    I       I ", "ICD    ICB    A     A   BCI     DCI", " I      I     A     A    I       I ", "              AM    A              ", "              AM    A              ", "              AM    A              ", "              A     A              ", "            J A     A J            ", " II        IJ A     A JI       I I ", "ICCD      ICJEA     AEJCI     BCICI", " II        IJ A     A JI       I I ", "            J A     A J            ", "              A     A              ", "              A    MA              ", "              A    MA              ", "              A    MA              ", " I      I     A     A    I       I ", "ICD    ICB    A     A   BCI     DCI", " I      I     A     A    I       I ", "              AM    A              ", "              AM    A              ", "              AM    A              ", "              A     A              ", "            J A     A J            ", " II        IJ A     A JI       I I ", "ICCD      ICJEA     AEJCI     BCICI", " II        IJ A     A JI       I I ", "            J A     A J            ", "         L   IFIHHHIFI   L         ", "        EHI   JIHHHIJ   IHE        ", "         L     IIIII     L         ")
                    .aisle("         L     LL~LL     L         ", "        EHI   JIHHHIJ   IHE        ", "         L   IFIHHHIFI   L         ", "              A  H  A              ", " I       I    AM   MA    I       I ", "ICD     ICB   AM G MA   BCI     DCI", " I       I    AM   MA    I       I ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", "            J A  H  A J            ", " I I       IJEA     AEJI       I I ", "ICICB     ICJHHH G HHHJCI     BCICI", " I I       IJEA     AEJI       I I ", "            J A  H  A J            ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", " I       I    AM   MA    I       I ", "ICD     ICB   AM G MA   BCI     DCI", " I       I    AM   MA    I       I ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", "            J A  H  A J            ", " I I       IJEA     AEJI       I I ", "ICICB     ICJHHH G HHHJCI     BCICI", " I I       IJEA     AEJI       I I ", "            J A  H  A J            ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", " I       I    AM   MA    I       I ", "ICD     ICB   AM G MA   BCI     DCI", " I       I    AM   MA    I       I ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", "            J A  H  A J            ", " I I       IJEA     AEJI       I I ", "ICICB     ICJHHH G HHHJCI     BCICI", " I I       IJEA     AEJI       I I ", "            J A  H  A J            ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", " I       I    AM   MA    I       I ", "ICD     ICB   AM G MA   BCI     DCI", " I       I    AM   MA    I       I ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", "            J A  H  A J            ", " I I       IJEA     AEJI       I I ", "ICICB     ICJHHH G HHHJCI     BCICI", " I I       IJEA     AEJI       I I ", "            J A  H  A J            ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", " I       I    AM   MA    I       I ", "ICD     ICB   AM G MA   BCI     DCI", " I       I    AM   MA    I       I ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", "            J A  H  A J            ", " I I       IJEA     AEJI       I I ", "ICICB     ICJHHH G HHHJCI     BCICI", " I I       IJEA     AEJI       I I ", "            J A  H  A J            ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", " I       I    AM   MA    I       I ", "ICD     ICB   AM G MA   BCI     DCI", " I       I    AM   MA    I       I ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", "            J A  H  A J            ", " I I       IJEA     AEJI       I I ", "ICICB     ICJHHH G HHHJCI     BCICI", " I I       IJEA     AEJI       I I ", "            J A  H  A J            ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", " I       I    AM   MA    I       I ", "ICD     ICB   AM G MA   BCI     DCI", " I       I    AM   MA    I       I ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", "            J A  H  A J            ", " I I       IJEA     AEJI       I I ", "ICICB     ICJHHH G HHHJCI     BCICI", " I I       IJEA     AEJI       I I ", "            J A  H  A J            ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", " I       I    AM   MA    I       I ", "ICD     ICB   AM G MA   BCI     DCI", " I       I    AM   MA    I       I ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", "              A  H  A              ", "            J A  H  A J            ", " I I       IJEA     AEJI       I I ", "ICICB     ICJHHH G HHHJCI     BCICI", " I I       IJEA     AEJI       I I ", "            J A  H  A J            ", "         L   IFIHHHIFI   L         ", "        EHI   JIHHHIJ   IHE        ", "         L     IIIII     L         ")
                    .aisle("         L     LLLLL     L         ", "        EHI   JIHHHIJ   IHE        ", "         L   IFIHHHIFI   L         ", "              AM    A              ", " I       I    A     A     I      I ", "ICD     ICB   A     A    BCI    DCI", " I       I    A     A     I      I ", "              A    MA              ", "              A    MA              ", "              A    MA              ", "              A     A              ", "            J A     A J            ", " I I       IJ A     A JI        II ", "ICICB     ICJEA     AEJCI      DCCI", " I I       IJ A     A JI        II ", "            J A     A J            ", "              A     A              ", "              AM    A              ", "              AM    A              ", "              AM    A              ", " I       I    A     A     I      I ", "ICD     ICB   A     A    BCI    DCI", " I       I    A     A     I      I ", "              A    MA              ", "              A    MA              ", "              A    MA              ", "              A     A              ", "            J A     A J            ", " I I       IJ A     A JI        II ", "ICICB     ICJEA     AEJCI      DCCI", " I I       IJ A     A JI        II ", "            J A     A J            ", "              A     A              ", "              AM    A              ", "              AM    A              ", "              AM    A              ", " I       I    A     A     I      I ", "ICD     ICB   A     A    BCI    DCI", " I       I    A     A     I      I ", "              A    MA              ", "              A    MA              ", "              A    MA              ", "              A     A              ", "            J A     A J            ", " I I       IJ A     A JI        II ", "ICICB     ICJEA     AEJCI      DCCI", " I I       IJ A     A JI        II ", "            J A     A J            ", "              A     A              ", "              AM    A              ", "              AM    A              ", "              AM    A              ", " I       I    A     A     I      I ", "ICD     ICB   A     A    BCI    DCI", " I       I    A     A     I      I ", "              A    MA              ", "              A    MA              ", "              A    MA              ", "              A     A              ", "            J A     A J            ", " I I       IJ A     A JI        II ", "ICICB     ICJEA     AEJCI      DCCI", " I I       IJ A     A JI        II ", "            J A     A J            ", "              A     A              ", "              AM    A              ", "              AM    A              ", "              AM    A              ", " I       I    A     A     I      I ", "ICD     ICB   A     A    BCI    DCI", " I       I    A     A     I      I ", "              A    MA              ", "              A    MA              ", "              A    MA              ", "              A     A              ", "            J A     A J            ", " I I       IJ A     A JI        II ", "ICICB     ICJEA     AEJCI      DCCI", " I I       IJ A     A JI        II ", "            J A     A J            ", "              A     A              ", "              AM    A              ", "              AM    A              ", "              AM    A              ", " I       I    A     A     I      I ", "ICD     ICB   A     A    BCI    DCI", " I       I    A     A     I      I ", "              A    MA              ", "              A    MA              ", "              A    MA              ", "              A     A              ", "            J A     A J            ", " I I       IJ A     A JI        II ", "ICICB     ICJEA     AEJCI      DCCI", " I I       IJ A     A JI        II ", "            J A     A J            ", "              A     A              ", "              AM    A              ", "              AM    A              ", "              AM    A              ", " I       I    A     A     I      I ", "ICD     ICB   A     A    BCI    DCI", " I       I    A     A     I      I ", "              A    MA              ", "              A    MA              ", "              A    MA              ", "              A     A              ", "            J A     A J            ", " I I       IJ A     A JI        II ", "ICICB     ICJEA     AEJCI      DCCI", " I I       IJ A     A JI        II ", "            J A     A J            ", "              A     A              ", "              AM    A              ", "              AM    A              ", "              AM    A              ", " I       I    A     A     I      I ", "ICD     ICB   A     A    BCI    DCI", " I       I    A     A     I      I ", "              A    MA              ", "              A    MA              ", "              A    MA              ", "              A     A              ", "            J A     A J            ", " I I       IJ A     A JI        II ", "ICICB     ICJEA     AEJCI      DCCI", " I I       IJ A     A JI        II ", "            J A     A J            ", "         L   IFIHHHIFI   L         ", "        EHI   JIHHHIJ   IHE        ", "         L     IIIII     L         ")
                    .aisle("         L      LLL      L         ", "        EHI    JIIIJ    IHE        ", "         L    IFIIIFI    L         ", "               A   A               ", " I        I    A   A      I      I ", "ICD      ICB   A H A     BCI    DCI", " I        I    A   A      I      I ", "               A   A               ", "               A   A               ", "               A  MA               ", "               A  MA               ", "               A  MA               ", " I  I       J  A M A  JI        II ", "ICIICB     IJ  A M A  JCI      DCCI", " I  I       J  A M A  JI        II ", "               AM  A               ", "               AM  A               ", "               AM  A               ", "               A   A               ", "               A   A               ", " I        I    A   A      I      I ", "ICD      ICB   A H A     BCI    DCI", " I        I    A   A      I      I ", "               A   A               ", "               A   A               ", "               A  MA               ", "               A  MA               ", "               A  MA               ", " I  I       J  A M A  JI        II ", "ICIICB     IJ  A M A  JCI      DCCI", " I  I       J  A M A  JI        II ", "               AM  A               ", "               AM  A               ", "               AM  A               ", "               A   A               ", "               A   A               ", " I        I    A   A      I      I ", "ICD      ICB   A H A     BCI    DCI", " I        I    A   A      I      I ", "               A   A               ", "               A   A               ", "               A  MA               ", "               A  MA               ", "               A  MA               ", " I  I       J  A M A  JI        II ", "ICIICB     IJ  A M A  JCI      DCCI", " I  I       J  A M A  JI        II ", "               AM  A               ", "               AM  A               ", "               AM  A               ", "               A   A               ", "               A   A               ", " I        I    A   A      I      I ", "ICD      ICB   A H A     BCI    DCI", " I        I    A   A      I      I ", "               A   A               ", "               A   A               ", "               A  MA               ", "               A  MA               ", "               A  MA               ", " I  I       J  A M A  JI        II ", "ICIICB     IJ  A M A  JCI      DCCI", " I  I       J  A M A  JI        II ", "               AM  A               ", "               AM  A               ", "               AM  A               ", "               A   A               ", "               A   A               ", " I        I    A   A      I      I ", "ICD      ICB   A H A     BCI    DCI", " I        I    A   A      I      I ", "               A   A               ", "               A   A               ", "               A  MA               ", "               A  MA               ", "               A  MA               ", " I  I       J  A M A  JI        II ", "ICIICB     IJ  A M A  JCI      DCCI", " I  I       J  A M A  JI        II ", "               AM  A               ", "               AM  A               ", "               AM  A               ", "               A   A               ", "               A   A               ", " I        I    A   A      I      I ", "ICD      ICB   A H A     BCI    DCI", " I        I    A   A      I      I ", "               A   A               ", "               A   A               ", "               A  MA               ", "               A  MA               ", "               A  MA               ", " I  I       J  A M A  JI        II ", "ICIICB     IJ  A M A  JCI      DCCI", " I  I       J  A M A  JI        II ", "               AM  A               ", "               AM  A               ", "               AM  A               ", "               A   A               ", "               A   A               ", " I        I    A   A      I      I ", "ICD      ICB   A H A     BCI    DCI", " I        I    A   A      I      I ", "               A   A               ", "               A   A               ", "               A  MA               ", "               A  MA               ", "               A  MA               ", " I  I       J  A M A  JI        II ", "ICIICB     IJ  A M A  JCI      DCCI", " I  I       J  A M A  JI        II ", "               AM  A               ", "               AM  A               ", "               AM  A               ", "               A   A               ", "               A   A               ", " I        I    A   A      I      I ", "ICD      ICB   A H A     BCI    DCI", " I        I    A   A      I      I ", "               A   A               ", "               A   A               ", "               A  MA               ", "               A  MA               ", "               A  MA               ", " I  I       J  A M A  JI        II ", "ICIICB     IJ  A M A  JCI      DCCI", " I  I       J  A M A  JI        II ", "               AM  A               ", "         L    IFIIIFI    L         ", "        EHI    JIIIJ    IHE        ", "         L      III      L         ")
                    .aisle("          L             L          ", "         EHI    JJJ    IHE         ", "          L    IFFFI    L          ", "                AAA                ", "  I        I    AAA       I     I  ", " ICD      ICB   AHA      BCI   DCI ", "  I        I    AAA       I     I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I I           AAA   I         I  ", " ICICB          AAA  BCI       DCI ", "  I I           AAA   I         I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I        I    AAA       I     I  ", " ICD      ICB   AHA      BCI   DCI ", "  I        I    AAA       I     I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I I           AAA   I         I  ", " ICICB          AAA  BCI       DCI ", "  I I           AAA   I         I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I        I    AAA       I     I  ", " ICD      ICB   AHA      BCI   DCI ", "  I        I    AAA       I     I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I I           AAA   I         I  ", " ICICB          AAA  BCI       DCI ", "  I I           AAA   I         I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I        I    AAA       I     I  ", " ICD      ICB   AHA      BCI   DCI ", "  I        I    AAA       I     I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I I           AAA   I         I  ", " ICICB          AAA  BCI       DCI ", "  I I           AAA   I         I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I        I    AAA       I     I  ", " ICD      ICB   AHA      BCI   DCI ", "  I        I    AAA       I     I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I I           AAA   I         I  ", " ICICB          AAA  BCI       DCI ", "  I I           AAA   I         I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I        I    AAA       I     I  ", " ICD      ICB   AHA      BCI   DCI ", "  I        I    AAA       I     I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I I           AAA   I         I  ", " ICICB          AAA  BCI       DCI ", "  I I           AAA   I         I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I        I    AAA       I     I  ", " ICD      ICB   AHA      BCI   DCI ", "  I        I    AAA       I     I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I I           AAA   I         I  ", " ICICB          AAA  BCI       DCI ", "  I I           AAA   I         I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I        I    AAA       I     I  ", " ICD      ICB   AHA      BCI   DCI ", "  I        I    AAA       I     I  ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "                AAA                ", "  I I           AAA   I         I  ", " ICICB          AAA  BCI       DCI ", "  I I           AAA   I         I  ", "                AAA                ", "          L    IFFFI    L          ", "         EHI    JJJ    IHE         ", "          L             L          ")
                    .aisle("          L             L          ", "         EHI           IHE         ", "          L     III     L          ", "                                   ", "  I         I    E        I     I  ", " ICD       ICBB EHE      BCI   DCI ", "  I         I    E        I     I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I  I                I         I  ", " ICDICB              BCI       DCI ", "  I  I                I         I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I         I    E        I     I  ", " ICD       ICBB EHE      BCI   DCI ", "  I         I    E        I     I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I  I                I         I  ", " ICDICB              BCI       DCI ", "  I  I                I         I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I         I    E        I     I  ", " ICD       ICBB EHE      BCI   DCI ", "  I         I    E        I     I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I  I                I         I  ", " ICDICB              BCI       DCI ", "  I  I                I         I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I         I    E        I     I  ", " ICD       ICBB EHE      BCI   DCI ", "  I         I    E        I     I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I  I                I         I  ", " ICDICB              BCI       DCI ", "  I  I                I         I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I         I    E        I     I  ", " ICD       ICBB EHE      BCI   DCI ", "  I         I    E        I     I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I  I                I         I  ", " ICDICB              BCI       DCI ", "  I  I                I         I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I         I    E        I     I  ", " ICD       ICBB EHE      BCI   DCI ", "  I         I    E        I     I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I  I                I         I  ", " ICDICB              BCI       DCI ", "  I  I                I         I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I         I    E        I     I  ", " ICD       ICBB EHE      BCI   DCI ", "  I         I    E        I     I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I  I                I         I  ", " ICDICB              BCI       DCI ", "  I  I                I         I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I         I    E        I     I  ", " ICD       ICBB EHE      BCI   DCI ", "  I         I    E        I     I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  I  I                I         I  ", " ICDICB              BCI       DCI ", "  I  I                I         I  ", "                                   ", "          L     III     L          ", "         EHI           IHE         ", "          L             L          ")
                    .aisle("           L           L           ", "          EHI         IHE          ", "           L           L           ", "                JJJ                ", "  I          IIJJJJJ     I      I  ", " ICD        ICCJJJJJ    BCI    DCI ", "  I          IIJJJJJ     I      I  ", "                JJJ                ", "                                   ", "                                   ", "                                   ", "                                   ", "  I   I              I          I  ", " ICD ICB            BCI        DCI ", "  I   I              I          I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                JJJ                ", "  I          IIJJJJJ     I      I  ", " ICD        ICCJJJJJ    BCI    DCI ", "  I          IIJJJJJ     I      I  ", "                JJJ                ", "                                   ", "                                   ", "                                   ", "                                   ", "  I   I              I          I  ", " ICD ICB            BCI        DCI ", "  I   I              I          I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                JJJ                ", "  I          IIJJJJJ     I      I  ", " ICD        ICCJJJJJ    BCI    DCI ", "  I          IIJJJJJ     I      I  ", "                JJJ                ", "                                   ", "                                   ", "                                   ", "                                   ", "  I   I              I          I  ", " ICD ICB            BCI        DCI ", "  I   I              I          I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                JJJ                ", "  I          IIJJJJJ     I      I  ", " ICD        ICCJJJJJ    BCI    DCI ", "  I          IIJJJJJ     I      I  ", "                JJJ                ", "                                   ", "                                   ", "                                   ", "                                   ", "  I   I              I          I  ", " ICD ICB            BCI        DCI ", "  I   I              I          I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                JJJ                ", "  I          IIJJJJJ     I      I  ", " ICD        ICCJJJJJ    BCI    DCI ", "  I          IIJJJJJ     I      I  ", "                JJJ                ", "                                   ", "                                   ", "                                   ", "                                   ", "  I   I              I          I  ", " ICD ICB            BCI        DCI ", "  I   I              I          I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                JJJ                ", "  I          IIJJJJJ     I      I  ", " ICD        ICCJJJJJ    BCI    DCI ", "  I          IIJJJJJ     I      I  ", "                JJJ                ", "                                   ", "                                   ", "                                   ", "                                   ", "  I   I              I          I  ", " ICD ICB            BCI        DCI ", "  I   I              I          I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                JJJ                ", "  I          IIJJJJJ     I      I  ", " ICD        ICCJJJJJ    BCI    DCI ", "  I          IIJJJJJ     I      I  ", "                JJJ                ", "                                   ", "                                   ", "                                   ", "                                   ", "  I   I              I          I  ", " ICD ICB            BCI        DCI ", "  I   I              I          I  ", "                                   ", "                                   ", "                                   ", "                                   ", "                JJJ                ", "  I          IIJJJJJ     I      I  ", " ICD        ICCJJJJJ    BCI    DCI ", "  I          IIJJJJJ     I      I  ", "                JJJ                ", "                                   ", "                                   ", "                                   ", "                                   ", "  I   I              I          I  ", " ICD ICB            BCI        DCI ", "  I   I              I          I  ", "                                   ", "           L           L           ", "          EHI         IHE          ", "           L           L           ")
                    .aisle("            L         L            ", "           EHII     IIHE           ", "            L         L            ", "                                   ", "   I           IIII      I     I   ", "  ICD        IICCCCI    BCI   DCI  ", "   I           IIII      I     I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I   I            I          I   ", "  ICD ICBB         BCI        DCI  ", "   I   I            I          I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I           IIII      I     I   ", "  ICD        IICCCCI    BCI   DCI  ", "   I           IIII      I     I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I   I            I          I   ", "  ICD ICBB         BCI        DCI  ", "   I   I            I          I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I           IIII      I     I   ", "  ICD        IICCCCI    BCI   DCI  ", "   I           IIII      I     I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I   I            I          I   ", "  ICD ICBB         BCI        DCI  ", "   I   I            I          I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I           IIII      I     I   ", "  ICD        IICCCCI    BCI   DCI  ", "   I           IIII      I     I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I   I            I          I   ", "  ICD ICBB         BCI        DCI  ", "   I   I            I          I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I           IIII      I     I   ", "  ICD        IICCCCI    BCI   DCI  ", "   I           IIII      I     I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I   I            I          I   ", "  ICD ICBB         BCI        DCI  ", "   I   I            I          I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I           IIII      I     I   ", "  ICD        IICCCCI    BCI   DCI  ", "   I           IIII      I     I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I   I            I          I   ", "  ICD ICBB         BCI        DCI  ", "   I   I            I          I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I           IIII      I     I   ", "  ICD        IICCCCI    BCI   DCI  ", "   I           IIII      I     I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I   I            I          I   ", "  ICD ICBB         BCI        DCI  ", "   I   I            I          I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I           IIII      I     I   ", "  ICD        IICCCCI    BCI   DCI  ", "   I           IIII      I     I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I   I            I          I   ", "  ICD ICBB         BCI        DCI  ", "   I   I            I          I   ", "                                   ", "            L         L            ", "           EHII     IIHE           ", "            L         L            ")
                    .aisle("             LL     LL             ", "            EHHIIIIIHHE            ", "             LL     LL             ", "                                   ", "   I                     I     I   ", "  ICD          IIII     BCI   DCI  ", "   I                     I     I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I    II         I           I   ", "  ICD  ICCBBB    BBCI         DCI  ", "   I    II         I           I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I                     I     I   ", "  ICD          IIII     BCI   DCI  ", "   I                     I     I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I    II         I           I   ", "  ICD  ICCBBB    BBCI         DCI  ", "   I    II         I           I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I                     I     I   ", "  ICD          IIII     BCI   DCI  ", "   I                     I     I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I    II         I           I   ", "  ICD  ICCBBB    BBCI         DCI  ", "   I    II         I           I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I                     I     I   ", "  ICD          IIII     BCI   DCI  ", "   I                     I     I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I    II         I           I   ", "  ICD  ICCBBB    BBCI         DCI  ", "   I    II         I           I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I                     I     I   ", "  ICD          IIII     BCI   DCI  ", "   I                     I     I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I    II         I           I   ", "  ICD  ICCBBB    BBCI         DCI  ", "   I    II         I           I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I                     I     I   ", "  ICD          IIII     BCI   DCI  ", "   I                     I     I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I    II         I           I   ", "  ICD  ICCBBB    BBCI         DCI  ", "   I    II         I           I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I                     I     I   ", "  ICD          IIII     BCI   DCI  ", "   I                     I     I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I    II         I           I   ", "  ICD  ICCBBB    BBCI         DCI  ", "   I    II         I           I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I                     I     I   ", "  ICD          IIII     BCI   DCI  ", "   I                     I     I   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   I    II         I           I   ", "  ICD  ICCBBB    BBCI         DCI  ", "   I    II         I           I   ", "                                   ", "             LL     LL             ", "            EHHIIIIIHHE            ", "             LL     LL             ")
                    .aisle("               LLLLL               ", "             EEHHHHHEE             ", "               LLLLL               ", "                                   ", "    I                   I     I    ", "   ICD                 BCI   DCI   ", "    I                   I     I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I     III    II           I    ", "   ICD  IICCCBBBBCCI         DCI   ", "    I     III    II           I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I                   I     I    ", "   ICD                 BCI   DCI   ", "    I                   I     I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I     III    II           I    ", "   ICD  IICCCBBBBCCI         DCI   ", "    I     III    II           I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I                   I     I    ", "   ICD                 BCI   DCI   ", "    I                   I     I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I     III    II           I    ", "   ICD  IICCCBBBBCCI         DCI   ", "    I     III    II           I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I                   I     I    ", "   ICD                 BCI   DCI   ", "    I                   I     I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I     III    II           I    ", "   ICD  IICCCBBBBCCI         DCI   ", "    I     III    II           I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I                   I     I    ", "   ICD                 BCI   DCI   ", "    I                   I     I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I     III    II           I    ", "   ICD  IICCCBBBBCCI         DCI   ", "    I     III    II           I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I                   I     I    ", "   ICD                 BCI   DCI   ", "    I                   I     I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I     III    II           I    ", "   ICD  IICCCBBBBCCI         DCI   ", "    I     III    II           I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I                   I     I    ", "   ICD                 BCI   DCI   ", "    I                   I     I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I     III    II           I    ", "   ICD  IICCCBBBBCCI         DCI   ", "    I     III    II           I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I                   I     I    ", "   ICD                 BCI   DCI   ", "    I                   I     I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I     III    II           I    ", "   ICD  IICCCBBBBCCI         DCI   ", "    I     III    II           I    ", "                                   ", "               LLLLL               ", "             EEHHHHHEE             ", "               LLLLL               ")
                    .aisle("                                   ", "               EEEEE               ", "                                   ", "                                   ", "    I                   I     I    ", "   ICD                 BCI   DCI   ", "    I                   I     I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I        IIII             I    ", "   ICD    IIICCCCII          DCI   ", "    I        IIII             I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I                   I     I    ", "   ICD                 BCI   DCI   ", "    I                   I     I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I        IIII             I    ", "   ICD    IIICCCCII          DCI   ", "    I        IIII             I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I                   I     I    ", "   ICD                 BCI   DCI   ", "    I                   I     I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I        IIII             I    ", "   ICD    IIICCCCII          DCI   ", "    I        IIII             I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I                   I     I    ", "   ICD                 BCI   DCI   ", "    I                   I     I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I        IIII             I    ", "   ICD    IIICCCCII          DCI   ", "    I        IIII             I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I                   I     I    ", "   ICD                 BCI   DCI   ", "    I                   I     I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I        IIII             I    ", "   ICD    IIICCCCII          DCI   ", "    I        IIII             I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I                   I     I    ", "   ICD                 BCI   DCI   ", "    I                   I     I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I        IIII             I    ", "   ICD    IIICCCCII          DCI   ", "    I        IIII             I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I                   I     I    ", "   ICD                 BCI   DCI   ", "    I                   I     I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I        IIII             I    ", "   ICD    IIICCCCII          DCI   ", "    I        IIII             I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I                   I     I    ", "   ICD                 BCI   DCI   ", "    I                   I     I    ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "    I        IIII             I    ", "   ICD    IIICCCCII          DCI   ", "    I        IIII             I    ", "                                   ", "                                   ", "               EEEEE               ", "                                   ")
                    .aisle("                                   ", "                                   ", "                                   ", "                                   ", "     I                 I     I     ", "    ICD               BCI   DCI    ", "     I                 I     I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I                       I     ", "    ICD      IIII           DCI    ", "     I                       I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I                 I     I     ", "    ICD               BCI   DCI    ", "     I                 I     I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I                       I     ", "    ICD      IIII           DCI    ", "     I                       I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I                 I     I     ", "    ICD               BCI   DCI    ", "     I                 I     I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I                       I     ", "    ICD      IIII           DCI    ", "     I                       I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I                 I     I     ", "    ICD               BCI   DCI    ", "     I                 I     I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I                       I     ", "    ICD      IIII           DCI    ", "     I                       I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I                 I     I     ", "    ICD               BCI   DCI    ", "     I                 I     I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I                       I     ", "    ICD      IIII           DCI    ", "     I                       I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I                 I     I     ", "    ICD               BCI   DCI    ", "     I                 I     I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I                       I     ", "    ICD      IIII           DCI    ", "     I                       I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I                 I     I     ", "    ICD               BCI   DCI    ", "     I                 I     I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I                       I     ", "    ICD      IIII           DCI    ", "     I                       I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I                 I     I     ", "    ICD               BCI   DCI    ", "     I                 I     I     ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "     I                       I     ", "    ICD      IIII           DCI    ", "     I                       I     ", "                                   ", "                                   ", "                                   ", "                                   ")
                    .aisle("                                   ", "                                   ", "                                   ", "                                   ", "      I               I     I      ", "     ICD             BCI   DCI     ", "      I               I     I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I                     I      ", "     ICD                   DCI     ", "      I                     I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I               I     I      ", "     ICD             BCI   DCI     ", "      I               I     I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I                     I      ", "     ICD                   DCI     ", "      I                     I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I               I     I      ", "     ICD             BCI   DCI     ", "      I               I     I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I                     I      ", "     ICD                   DCI     ", "      I                     I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I               I     I      ", "     ICD             BCI   DCI     ", "      I               I     I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I                     I      ", "     ICD                   DCI     ", "      I                     I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I               I     I      ", "     ICD             BCI   DCI     ", "      I               I     I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I                     I      ", "     ICD                   DCI     ", "      I                     I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I               I     I      ", "     ICD             BCI   DCI     ", "      I               I     I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I                     I      ", "     ICD                   DCI     ", "      I                     I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I               I     I      ", "     ICD             BCI   DCI     ", "      I               I     I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I                     I      ", "     ICD                   DCI     ", "      I                     I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I               I     I      ", "     ICD             BCI   DCI     ", "      I               I     I      ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "      I                     I      ", "     ICD                   DCI     ", "      I                     I      ", "                                   ", "                                   ", "                                   ", "                                   ")
                    .aisle("                                   ", "                                   ", "                                   ", "                                   ", "       I             I     I       ", "      ICDD         BBCI  DDCI      ", "       I             I     I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I                   I       ", "      ICDD               DDCI      ", "       I                   I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I             I     I       ", "      ICDD         BBCI  DDCI      ", "       I             I     I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I                   I       ", "      ICDD               DDCI      ", "       I                   I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I             I     I       ", "      ICDD         BBCI  DDCI      ", "       I             I     I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I                   I       ", "      ICDD               DDCI      ", "       I                   I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I             I     I       ", "      ICDD         BBCI  DDCI      ", "       I             I     I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I                   I       ", "      ICDD               DDCI      ", "       I                   I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I             I     I       ", "      ICDD         BBCI  DDCI      ", "       I             I     I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I                   I       ", "      ICDD               DDCI      ", "       I                   I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I             I     I       ", "      ICDD         BBCI  DDCI      ", "       I             I     I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I                   I       ", "      ICDD               DDCI      ", "       I                   I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I             I     I       ", "      ICDD         BBCI  DDCI      ", "       I             I     I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I                   I       ", "      ICDD               DDCI      ", "       I                   I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I             I     I       ", "      ICDD         BBCI  DDCI      ", "       I             I     I       ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "       I                   I       ", "      ICDD               DDCI      ", "       I                   I       ", "                                   ", "                                   ", "                                   ", "                                   ")
                    .aisle("                                   ", "                                   ", "                                   ", "                                   ", "        II         II    II        ", "       ICCDD     BBCCI DDCCI       ", "        II         II    II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II               II        ", "       ICCDD           DDCCI       ", "        II               II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II         II    II        ", "       ICCDD     BBCCI DDCCI       ", "        II         II    II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II               II        ", "       ICCDD           DDCCI       ", "        II               II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II         II    II        ", "       ICCDD     BBCCI DDCCI       ", "        II         II    II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II               II        ", "       ICCDD           DDCCI       ", "        II               II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II         II    II        ", "       ICCDD     BBCCI DDCCI       ", "        II         II    II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II               II        ", "       ICCDD           DDCCI       ", "        II               II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II         II    II        ", "       ICCDD     BBCCI DDCCI       ", "        II         II    II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II               II        ", "       ICCDD           DDCCI       ", "        II               II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II         II    II        ", "       ICCDD     BBCCI DDCCI       ", "        II         II    II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II               II        ", "       ICCDD           DDCCI       ", "        II               II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II         II    II        ", "       ICCDD     BBCCI DDCCI       ", "        II         II    II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II               II        ", "       ICCDD           DDCCI       ", "        II               II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II         II    II        ", "       ICCDD     BBCCI DDCCI       ", "        II         II    II        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        II               II        ", "       ICCDD           DDCCI       ", "        II               II        ", "                                   ", "                                   ", "                                   ", "                                   ")
                    .aisle("                                   ", "                                   ", "                                   ", "                                   ", "          II     II    II          ", "        IICCDDDDDCCIIDDCCII        ", "          II     II    II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II           II          ", "        IICCDDD     DDDCCII        ", "          II           II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II     II    II          ", "        IICCDDDDDCCIIDDCCII        ", "          II     II    II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II           II          ", "        IICCDDD     DDDCCII        ", "          II           II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II     II    II          ", "        IICCDDDDDCCIIDDCCII        ", "          II     II    II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II           II          ", "        IICCDDD     DDDCCII        ", "          II           II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II     II    II          ", "        IICCDDDDDCCIIDDCCII        ", "          II     II    II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II           II          ", "        IICCDDD     DDDCCII        ", "          II           II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II     II    II          ", "        IICCDDDDDCCIIDDCCII        ", "          II     II    II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II           II          ", "        IICCDDD     DDDCCII        ", "          II           II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II     II    II          ", "        IICCDDDDDCCIIDDCCII        ", "          II     II    II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II           II          ", "        IICCDDD     DDDCCII        ", "          II           II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II     II    II          ", "        IICCDDDDDCCIIDDCCII        ", "          II     II    II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II           II          ", "        IICCDDD     DDDCCII        ", "          II           II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II     II    II          ", "        IICCDDDDDCCIIDDCCII        ", "          II     II    II          ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "          II           II          ", "        IICCDDD     DDDCCII        ", "          II           II          ", "                                   ", "                                   ", "                                   ", "                                   ")
                    .aisle("                                   ", "                                   ", "                                   ", "                                   ", "            IIIII   III            ", "          IICCCCCIIICCCII          ", "            IIIII   III            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            III     III            ", "          IICCCDDDDDCCCII          ", "            III     III            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            IIIII   III            ", "          IICCCCCIIICCCII          ", "            IIIII   III            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            III     III            ", "          IICCCDDDDDCCCII          ", "            III     III            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            IIIII   III            ", "          IICCCCCIIICCCII          ", "            IIIII   III            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            III     III            ", "          IICCCDDDDDCCCII          ", "            III     III            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            IIIII   III            ", "          IICCCCCIIICCCII          ", "            IIIII   III            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            III     III            ", "          IICCCDDDDDCCCII          ", "            III     III            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            IIIII   III            ", "          IICCCCCIIICCCII          ", "            IIIII   III            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            III     III            ", "          IICCCDDDDDCCCII          ", "            III     III            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            IIIII   III            ", "          IICCCCCIIICCCII          ", "            IIIII   III            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            III     III            ", "          IICCCDDDDDCCCII          ", "            III     III            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            IIIII   III            ", "          IICCCCCIIICCCII          ", "            IIIII   III            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            III     III            ", "          IICCCDDDDDCCCII          ", "            III     III            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            IIIII   III            ", "          IICCCCCIIICCCII          ", "            IIIII   III            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "            III     III            ", "          IICCCDDDDDCCCII          ", "            III     III            ", "                                   ", "                                   ", "                                   ", "                                   ")
                    .aisle("                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "               IIIII               ", "            IIICCCCCIII            ", "               IIIII               ", "                                   ", "                                   ", "                                   ", "                                   ")
                    .aisle
                    .where("~", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("A", Predicates.blocks(GTBlocks.FUSION_GLASS.get()))
                    .where("B", Predicates.blocks(Registries.getBlock("kubejs:spacetime_assembly_line_unit")))
                    .where("C", Predicates.blocks(Registries.getBlock("kubejs:spacetime_assembly_line_casing")))
                    .where("D", Predicates.cleanroomFilters())
                    .where("E", Predicates.blocks(GTLBlocks.DIMENSION_INJECTION_CASING.get()))
                    .where("F", Predicates.blocks(Registries.getBlock("kubejs:molecular_coil")))
                    .where("G", Predicates.blocks(Registries.getBlock("kubejs:dimensional_bridge_casing")))
                    .where("H", Predicates.blocks(GTBlocks.HIGH_POWER_CASING.get()))
                    .where("I", Predicates.blocks(GTLBlocks.MOLECULAR_CASING.get()))
                    .where("J", Predicates.blocks(GTLBlocks.DIMENSIONALLY_TRANSCENDENT_CASING.get()))
                    .where("M", Predicates.blocks(Registries.getBlock("kubejs:hollow_casing")))
                    .where("K", Predicates.blocks(GTLBlocks.MOLECULAR_CASING.get()))
                    .where("L", Predicates.blocks(GTLBlocks.MOLECULAR_CASING.get())
                            .or(Predicates.abilities(PartAbility.IMPORT_ITEMS).setPreviewCount(1))
                            .or(Predicates.abilities(PartAbility.EXPORT_ITEMS).setPreviewCount(1))
                            .or(Predicates.abilities(PartAbility.IMPORT_FLUIDS).setPreviewCount(1))
                            .or(Predicates.abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(Predicates.abilities(PartAbility.OPTICAL_DATA_RECEPTION).setExactLimit(1))
                            .or(Predicates.abilities(PartAbility.INPUT_ENERGY).setMaxGlobalLimited(2))
                            .or(Predicates.abilities(PartAbility.INPUT_LASER).setMaxGlobalLimited(1)))
                    .where(" ", Predicates.any())
                    .build())
            .workableCasingRenderer(GTLCore.id("block/molecular_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    public final static MultiblockMachineDefinition SUPRACHRONAL_ASSEMBLY_LINE_MODULE = REGISTRATE.multiblock("suprachronal_assembly_line_module", (holder) -> new SuprachronalAssemblyLineMachine(holder, true))
            .rotationState(RotationState.ALL)
            .recipeType(GTRecipeTypes.ASSEMBLY_LINE_RECIPES)
            .recipeType(GTLRecipeTypes.CIRCUIT_ASSEMBLY_LINE_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.duration_multiplier.tooltip", 0.4))
            .tooltips(Component.translatable("gtceu.machine.suprachronal_assembly_line_module.tooltip.0"))
            .tooltips(Component.translatable("gtceu.multiblock.laser.tooltip"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_2.tooltip",
                    Component.translatable("gtceu.assembly_line"), Component.translatable("gtceu.circuit_assembly_line")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifiers((machine, recipe, params, result) -> GTLRecipeModifiers.reduction(machine, recipe, 1, 0.4), (machine, recipe, params, result) -> GTRecipeModifiers.accurateParallel(machine, recipe, ((SuprachronalAssemblyLineMachine) machine).getParallel(), false).getFirst(), GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK_SUBTICK))
            .appearanceBlock(GTLBlocks.MOLECULAR_CASING)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle(" D ", " E ", " D ")
                    .aisle(" D ", " D ", " D ")
                    .aisle(" D ", " D ", " D ")
                    .aisle(" C ", " C ", " C ")
                    .aisle(" B ", " B ", " B ")
                    .aisle("AAA", "A~A", "AAA")
                    .aisle("   ", " - ", "   ")
                    .where("~", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("B", Predicates.blocks(GTLBlocks.DIMENSIONALLY_TRANSCENDENT_CASING.get()))
                    .where("C", Predicates.blocks(Registries.getBlock("kubejs:molecular_coil")))
                    .where("D", Predicates.blocks(GTBlocks.FUSION_GLASS.get()))
                    .where("E", Predicates.blocks(GTBlocks.HIGH_POWER_CASING.get()))
                    .where("A", Predicates.blocks(GTLBlocks.MOLECULAR_CASING.get())
                            .or(Predicates.abilities(PartAbility.IMPORT_ITEMS).setPreviewCount(1))
                            .or(Predicates.abilities(PartAbility.EXPORT_ITEMS).setPreviewCount(1))
                            .or(Predicates.abilities(PartAbility.IMPORT_FLUIDS).setPreviewCount(1))
                            .or(Predicates.abilities(PartAbility.OPTICAL_DATA_RECEPTION).setExactLimit(1))
                            .or(Predicates.abilities(PartAbility.INPUT_ENERGY).setMaxGlobalLimited(2))
                            .or(Predicates.abilities(PartAbility.INPUT_LASER).setMaxGlobalLimited(1)))
                    .where(" ", Predicates.any())
                    .where("-", Predicates.air())
                    .build())
            .workableCasingRenderer(GTLCore.id("block/molecular_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    public final static MultiblockMachineDefinition PROCESSING_PLANT = REGISTRATE.multiblock("processing_plant", (holder) -> new StorageMachine(holder, 1))
            .rotationState(RotationState.ALL)
            .recipeType(GTRecipeTypes.BENDER_RECIPES)
            .recipeType(GTRecipeTypes.COMPRESSOR_RECIPES)
            .recipeType(GTRecipeTypes.FORGE_HAMMER_RECIPES)
            .recipeType(GTRecipeTypes.CUTTER_RECIPES)
            .recipeType(GTRecipeTypes.EXTRUDER_RECIPES)
            .recipeType(GTRecipeTypes.LATHE_RECIPES)
            .recipeType(GTRecipeTypes.WIREMILL_RECIPES)
            .recipeType(GTRecipeTypes.FORMING_PRESS_RECIPES)
            .recipeType(GTRecipeTypes.POLARIZER_RECIPES)
            .recipeType(GTRecipeTypes.LASER_ENGRAVER_RECIPES)
            .recipeType(GTRecipeTypes.FLUID_SOLIDFICATION_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.eut_multiplier.tooltip", 0.9))
            .tooltips(Component.translatable("gtceu.machine.duration_multiplier.tooltip", 0.6))
            .tooltips(Component.translatable("gtceu.machine.processing_plant.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.processing_plant.tooltip.1"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_11.tooltip",
                    Component.translatable("gtceu.bender"),
                    Component.translatable("gtceu.compressor"),
                    Component.translatable("gtceu.forge_hammer"),
                    Component.translatable("gtceu.cutter"),
                    Component.translatable("gtceu.extruder"),
                    Component.translatable("gtceu.lathe"),
                    Component.translatable("gtceu.wiremill"),
                    Component.translatable("gtceu.forming_press"),
                    Component.translatable("gtceu.polarizer"),
                    Component.translatable("gtceu.laser_engraver"),
                    Component.translatable("gtceu.fluid_solidifier")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifiers(GTLRecipeModifiers::processingPlantOverclock)
            .appearanceBlock(GTLBlocks.MULTI_FUNCTIONAL_CASING)
            .pattern((definition) -> FactoryBlockPattern.start()
                    .aisle("bbb", "bbb", "bbb")
                    .aisle("bbb", "bcb", "bbb")
                    .aisle("bbb", "bab", "bbb")
                    .where("a", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("b", Predicates.blocks(GTLBlocks.MULTI_FUNCTIONAL_CASING.get())
                            .setMinGlobalLimited(14)
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where("c", Predicates.blocks(GTBlocks.CASING_BRONZE_GEARBOX.get()))
                    .build())
            .beforeWorking((machine, recipe) -> {
                boolean isrecipe = false;
                if (machine instanceof StorageMachine storageMachine) {
                    int tier = storageMachine.getTier();
                    GTRecipeType recipeType = storageMachine.getRecipeType();
                    if (recipeType.equals(GTRecipeTypes.BENDER_RECIPES)) {
                        isrecipe = Objects.equals(storageMachine.getMachineStorageItem().kjs$getId(), "gtceu:" + GTValues.VN[tier].toLowerCase() + "_bender");
                    } else if (recipeType.equals(GTRecipeTypes.COMPRESSOR_RECIPES)) {
                        isrecipe = Objects.equals(storageMachine.getMachineStorageItem().kjs$getId(), "gtceu:" + GTValues.VN[tier].toLowerCase() + "_compressor");
                    } else if (recipeType.equals(GTRecipeTypes.FORGE_HAMMER_RECIPES)) {
                        isrecipe = Objects.equals(storageMachine.getMachineStorageItem().kjs$getId(), "gtceu:" + GTValues.VN[tier].toLowerCase() + "_forge_hammer");
                    } else if (recipeType.equals(GTRecipeTypes.CUTTER_RECIPES)) {
                        isrecipe = Objects.equals(storageMachine.getMachineStorageItem().kjs$getId(), "gtceu:" + GTValues.VN[tier].toLowerCase() + "_cutter");
                    } else if (recipeType.equals(GTRecipeTypes.EXTRUDER_RECIPES)) {
                        isrecipe = Objects.equals(storageMachine.getMachineStorageItem().kjs$getId(), "gtceu:" + GTValues.VN[tier].toLowerCase() + "_extruder");
                    } else if (recipeType.equals(GTRecipeTypes.LATHE_RECIPES)) {
                        isrecipe = Objects.equals(storageMachine.getMachineStorageItem().kjs$getId(), "gtceu:" + GTValues.VN[tier].toLowerCase() + "_lathe");
                    } else if (recipeType.equals(GTRecipeTypes.WIREMILL_RECIPES)) {
                        isrecipe = Objects.equals(storageMachine.getMachineStorageItem().kjs$getId(), "gtceu:" + GTValues.VN[tier].toLowerCase() + "_wiremill");
                    } else if (recipeType.equals(GTRecipeTypes.FORMING_PRESS_RECIPES)) {
                        isrecipe = Objects.equals(storageMachine.getMachineStorageItem().kjs$getId(), "gtceu:" + GTValues.VN[tier].toLowerCase() + "_forming_press");
                    } else if (recipeType.equals(GTRecipeTypes.POLARIZER_RECIPES)) {
                        isrecipe = Objects.equals(storageMachine.getMachineStorageItem().kjs$getId(), "gtceu:" + GTValues.VN[tier].toLowerCase() + "_polarizer");
                    } else if (recipeType.equals(GTRecipeTypes.FLUID_SOLIDFICATION_RECIPES)) {
                        isrecipe = Objects.equals(storageMachine.getMachineStorageItem().kjs$getId(), "gtceu:" + GTValues.VN[tier].toLowerCase() + "_fluid_solidifier");
                    } else if (recipeType.equals(GTRecipeTypes.LASER_ENGRAVER_RECIPES)) {
                        isrecipe = Objects.equals(storageMachine.getMachineStorageItem().kjs$getId(), "gtceu:" + GTValues.VN[tier].toLowerCase() + "_laser_engraver");
                    }
                    if (!isrecipe) {
                        machine.getRecipeLogic().interruptRecipe();
                    }
                }
                return isrecipe;
            })
            .additionalDisplay(GTLMachines.PROCESSING_PLANT_PARALLEL)
            .workableCasingRenderer(GTLCore.id("block/multi_functional_casing"), GTCEu.id("block/multiblock/gcym/large_assembler"))
            .register();

    public final static MultiblockMachineDefinition ASSEMBLE_PLANT = REGISTRATE.multiblock("assemble_plant", (holder) -> new StorageMachine(holder, 1))
            .rotationState(RotationState.ALL)
            .recipeType(GTRecipeTypes.ASSEMBLER_RECIPES)
            .recipeType(GTRecipeTypes.CIRCUIT_ASSEMBLER_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.eut_multiplier.tooltip", 0.9))
            .tooltips(Component.translatable("gtceu.machine.duration_multiplier.tooltip", 0.6))
            .tooltips(Component.translatable("gtceu.machine.processing_plant.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.processing_plant.tooltip.1"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_2.tooltip",
                    Component.translatable("gtceu.assembler"), Component.translatable("gtceu.circuit_assembler")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifiers(GTLRecipeModifiers::processingPlantOverclock)
            .appearanceBlock(GTLBlocks.MULTI_FUNCTIONAL_CASING)
            .pattern((definition) -> FactoryBlockPattern.start()
                    .aisle("bbb", "bbb", "bbb")
                    .aisle("bbb", "bcb", "bbb")
                    .aisle("bbb", "bab", "bbb")
                    .where("a", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("b", Predicates.blocks(GTLBlocks.MULTI_FUNCTIONAL_CASING.get())
                            .setMinGlobalLimited(14)
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where("c", Predicates.blocks(Registries.getBlock("gtceu:stainless_steel_frame")))
                    .build())
            .beforeWorking((machine, recipe) -> {
                boolean isrecipe = false;
                if (machine instanceof StorageMachine storageMachine) {
                    int tier = storageMachine.getTier();
                    GTRecipeType recipeType = storageMachine.getRecipeType();
                    if (recipeType.equals(GTRecipeTypes.ASSEMBLER_RECIPES)) {
                        isrecipe = Objects.equals(storageMachine.getMachineStorageItem().kjs$getId(), "gtceu:" + GTValues.VN[tier].toLowerCase() + "_assembler");
                    } else if (recipeType.equals(GTRecipeTypes.CIRCUIT_ASSEMBLER_RECIPES)) {
                        isrecipe = Objects.equals(storageMachine.getMachineStorageItem().kjs$getId(), "gtceu:" + GTValues.VN[tier].toLowerCase() + "_circuit_assembler");
                    }
                    if (!isrecipe) {
                        machine.getRecipeLogic().interruptRecipe();
                    }
                }
                return isrecipe;
            })
            .additionalDisplay(GTLMachines.PROCESSING_PLANT_PARALLEL)
            .workableCasingRenderer(GTLCore.id("block/multi_functional_casing"), GTCEu.id("block/multiblock/gcym/large_assembler"))
            .register();

    public final static MultiblockMachineDefinition SEPARATED_PLANT = REGISTRATE.multiblock("separated_plant", (holder) -> new StorageMachine(holder, 1))
            .rotationState(RotationState.ALL)
            .recipeType(GTRecipeTypes.CENTRIFUGE_RECIPES)
            .recipeType(GTRecipeTypes.THERMAL_CENTRIFUGE_RECIPES)
            .recipeType(GTRecipeTypes.ELECTROLYZER_RECIPES)
            .recipeType(GTRecipeTypes.SIFTER_RECIPES)
            .recipeType(GTRecipeTypes.MACERATOR_RECIPES)
            .recipeType(GTRecipeTypes.EXTRACTOR_RECIPES)
            .recipeType(GTLRecipeTypes.DEHYDRATOR_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.eut_multiplier.tooltip", 0.9))
            .tooltips(Component.translatable("gtceu.machine.duration_multiplier.tooltip", 0.6))
            .tooltips(Component.translatable("gtceu.machine.processing_plant.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.processing_plant.tooltip.1"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_7.tooltip",
                    Component.translatable("gtceu.centrifuge"),
                    Component.translatable("gtceu.thermal_centrifuge"),
                    Component.translatable("gtceu.electrolyzer"),
                    Component.translatable("gtceu.sifter"),
                    Component.translatable("gtceu.macerator"),
                    Component.translatable("gtceu.extractor"),
                    Component.translatable("gtceu.dehydrator")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifiers(GTLRecipeModifiers::processingPlantOverclock)
            .appearanceBlock(GTLBlocks.MULTI_FUNCTIONAL_CASING)
            .pattern((definition) -> FactoryBlockPattern.start()
                    .aisle("bbb", "bbb", "bbb")
                    .aisle("bbb", "bcb", "bbb")
                    .aisle("bbb", "bab", "bbb")
                    .where("a", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("b", Predicates.blocks(GTLBlocks.MULTI_FUNCTIONAL_CASING.get())
                            .setMinGlobalLimited(14)
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where("c", Predicates.blocks(GTBlocks.CASING_BRONZE_PIPE.get()))
                    .build())
            .beforeWorking((machine, recipe) -> {
                boolean isrecipe = false;
                if (machine instanceof StorageMachine storageMachine) {
                    int tier = storageMachine.getTier();
                    GTRecipeType recipeType = storageMachine.getRecipeType();
                    if (recipeType.equals(GTRecipeTypes.CENTRIFUGE_RECIPES)) {
                        isrecipe = Objects.equals(storageMachine.getMachineStorageItem().kjs$getId(), "gtceu:" + GTValues.VN[tier].toLowerCase() + "_centrifuge");
                    } else if (recipeType.equals(GTRecipeTypes.THERMAL_CENTRIFUGE_RECIPES)) {
                        isrecipe = Objects.equals(storageMachine.getMachineStorageItem().kjs$getId(), "gtceu:" + GTValues.VN[tier].toLowerCase() + "_thermal_centrifuge");
                    } else if (recipeType.equals(GTRecipeTypes.ELECTROLYZER_RECIPES)) {
                        isrecipe = Objects.equals(storageMachine.getMachineStorageItem().kjs$getId(), "gtceu:" + GTValues.VN[tier].toLowerCase() + "_electrolyzer");
                    } else if (recipeType.equals(GTRecipeTypes.SIFTER_RECIPES)) {
                        isrecipe = Objects.equals(storageMachine.getMachineStorageItem().kjs$getId(), "gtceu:" + GTValues.VN[tier].toLowerCase() + "_sifter");
                    } else if (recipeType.equals(GTRecipeTypes.MACERATOR_RECIPES)) {
                        isrecipe = Objects.equals(storageMachine.getMachineStorageItem().kjs$getId(), "gtceu:" + GTValues.VN[tier].toLowerCase() + "_macerator");
                    } else if (recipeType.equals(GTRecipeTypes.EXTRACTOR_RECIPES)) {
                        isrecipe = Objects.equals(storageMachine.getMachineStorageItem().kjs$getId(), "gtceu:" + GTValues.VN[tier].toLowerCase() + "_extractor");
                    } else if (recipeType.equals(GTLRecipeTypes.DEHYDRATOR_RECIPES)) {
                        isrecipe = Objects.equals(storageMachine.getMachineStorageItem().kjs$getId(), "gtceu:" + GTValues.VN[tier].toLowerCase() + "_dehydrator");
                    }
                    if (!isrecipe) {
                        machine.getRecipeLogic().interruptRecipe();
                    }
                }
                return isrecipe;
            })
            .additionalDisplay(GTLMachines.PROCESSING_PLANT_PARALLEL)
            .workableCasingRenderer(GTLCore.id("block/multi_functional_casing"), GTCEu.id("block/multiblock/gcym/large_assembler"))
            .register();

    public final static MultiblockMachineDefinition MIXED_PLANT = REGISTRATE.multiblock("mixed_plant", (holder) -> new StorageMachine(holder, 1))
            .rotationState(RotationState.ALL)
            .recipeType(GTRecipeTypes.CHEMICAL_RECIPES)
            .recipeType(GTRecipeTypes.MIXER_RECIPES)
            .recipeType(GTRecipeTypes.CHEMICAL_BATH_RECIPES)
            .recipeType(GTRecipeTypes.ORE_WASHER_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.eut_multiplier.tooltip", 0.9))
            .tooltips(Component.translatable("gtceu.machine.duration_multiplier.tooltip", 0.6))
            .tooltips(Component.translatable("gtceu.machine.processing_plant.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.processing_plant.tooltip.1"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_4.tooltip",
                    Component.translatable("gtceu.chemical_reactor"),
                    Component.translatable("gtceu.mixer"),
                    Component.translatable("gtceu.chemical_bath"),
                    Component.translatable("gtceu.ore_washer")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifiers(GTLRecipeModifiers::processingPlantOverclock)
            .appearanceBlock(GTLBlocks.MULTI_FUNCTIONAL_CASING)
            .pattern((definition) -> FactoryBlockPattern.start()
                    .aisle("bbb", "bbb", "bbb")
                    .aisle("bbb", "bcb", "bbb")
                    .aisle("bbb", "bab", "bbb")
                    .where("a", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("b", Predicates.blocks(GTLBlocks.MULTI_FUNCTIONAL_CASING.get())
                            .setMinGlobalLimited(14)
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where("c", Predicates.blocks(GTBlocks.CASING_STEEL_PIPE.get()))
                    .build())
            .beforeWorking((machine, recipe) -> {
                boolean isrecipe = false;
                if (machine instanceof StorageMachine storageMachine) {
                    int tier = storageMachine.getTier();
                    GTRecipeType recipeType = storageMachine.getRecipeType();
                    if (recipeType.equals(GTRecipeTypes.CHEMICAL_RECIPES)) {
                        isrecipe = Objects.equals(storageMachine.getMachineStorageItem().kjs$getId(), "gtceu:" + GTValues.VN[tier].toLowerCase() + "_chemical_reactor");
                    } else if (recipeType.equals(GTRecipeTypes.MIXER_RECIPES)) {
                        isrecipe = Objects.equals(storageMachine.getMachineStorageItem().kjs$getId(), "gtceu:" + GTValues.VN[tier].toLowerCase() + "_mixer");
                    } else if (recipeType.equals(GTRecipeTypes.CHEMICAL_BATH_RECIPES)) {
                        isrecipe = Objects.equals(storageMachine.getMachineStorageItem().kjs$getId(), "gtceu:" + GTValues.VN[tier].toLowerCase() + "_chemical_bath");
                    } else if (recipeType.equals(GTRecipeTypes.ORE_WASHER_RECIPES)) {
                        isrecipe = Objects.equals(storageMachine.getMachineStorageItem().kjs$getId(), "gtceu:" + GTValues.VN[tier].toLowerCase() + "_ore_washer");
                    }
                    if (!isrecipe) {
                        machine.getRecipeLogic().interruptRecipe();
                    }
                }
                return isrecipe;
            })
            .additionalDisplay(GTLMachines.PROCESSING_PLANT_PARALLEL)
            .workableCasingRenderer(GTLCore.id("block/multi_functional_casing"), GTCEu.id("block/multiblock/gcym/large_assembler"))
            .register();

    public final static MultiblockMachineDefinition WEATHER_CONTROL = REGISTRATE.multiblock("weather_control", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .allowExtendedFacing(false)
            .recipeType(GTLRecipeTypes.WEATHER_CONTROL_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.weather_control.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.weather_control.tooltip.1"))
            .tooltips(Component.translatable("gtceu.machine.weather_control.tooltip.2"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.weather_control")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifier(GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(new OverclockingLogic(1, 1, false)))
            .appearanceBlock(GTBlocks.STEEL_HULL)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAA", " A ", " A ", "   ", "   ", "   ", "   ")
                    .aisle("AAA", "ABA", "ABA", " B ", " B ", " B ", " C ")
                    .aisle("A~A", " A ", " A ", "   ", "   ", "   ", "   ")
                    .where("A", Predicates.blocks(GTBlocks.STEEL_HULL.get())
                            .or(Predicates.abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(Predicates.abilities(PartAbility.INPUT_ENERGY).setMaxGlobalLimited(1)))
                    .where("B", Predicates.blocks(Blocks.IRON_BLOCK))
                    .where("C", Predicates.blocks(Blocks.LIGHTNING_ROD))
                    .where("~", Predicates.controller(Predicates.blocks(definition.get())))
                    .where(" ", Predicates.any())
                    .build())
            .shapeInfo(controller -> MultiblockShapeInfo.builder()
                    .aisle("AAA", " A ", " A ", "   ", "   ", "   ", "   ")
                    .aisle("AAA", "ABA", "ABA", " B ", " B ", " B ", " C ")
                    .aisle("A~A", " A ", " A ", "   ", "   ", "   ", "   ")
                    .where('~', controller, Direction.SOUTH)
                    .where('A', GTBlocks.STEEL_HULL.get())
                    .where('B', Blocks.IRON_BLOCK)
                    .where('C', Blocks.LIGHTNING_ROD.defaultBlockState().setValue(DirectionalBlock.FACING, Direction.UP))
                    .where(' ', Blocks.AIR)
                    .build())
            .afterWorking(machine -> {
                Level level = machine.self().getLevel();
                String dim = level.kjs$getDimension().toString();
                MinecraftServer server = level.getServer();
                if (MachineIO.notConsumableCircuit((WorkableMultiblockMachine) machine, 1)) {
                    server.kjs$runCommandSilent("execute in " + dim + " run weather clear");
                }
                if (MachineIO.notConsumableCircuit((WorkableMultiblockMachine) machine, 2)) {
                    server.kjs$runCommandSilent("execute in " + dim + " run weather rain");
                }
                if (MachineIO.notConsumableCircuit((WorkableMultiblockMachine) machine, 3)) {
                    server.kjs$runCommandSilent("execute in " + dim + " run weather thunder");
                }
            })
            .workableCasingRenderer(GTCEu.id("block/casings/steam/steel/side"), GTCEu.id("block/multiblock/gcym/large_maceration_tower"))
            .register();

    public final static MultiblockMachineDefinition NANO_FORGE_1 = REGISTRATE.multiblock("nano_forge_1", (holder) -> new StorageMachine(holder, 64))
            .rotationState(RotationState.NON_Y_AXIS)
            .allowExtendedFacing(false)
            .recipeType(GTLRecipeTypes.NANO_FORGE_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.nano_forge.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.nano_forge_1.tooltip.0"))
            .tooltips(Component.translatable("gtceu.multiblock.laser.tooltip"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.nano_forge")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifiers((machine, recipe, params, result) -> GTLRecipeModifiers.nanoForgeOverclock(machine, recipe, params, result, 1))
            .appearanceBlock(GTLBlocks.NAQUADAH_ALLOY_CASING)
            .pattern((definition) -> FactoryBlockPattern.start()
                    .aisle("         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "    B    ", "    B    ", "    B    ", "    B    ", "    B    ", "    B    ", "    B    ", "    B    ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ")
                    .aisle("  AAAAA  ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ")
                    .aisle(" ABBBBBA ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "  CB BC  ", "  CB BC  ", "  CB BC  ", "  CB BC  ", "  BB BB  ", "  BB BB  ", "  BB BB  ", "  BB BB  ", "  BB BB  ", "  BB BB  ", "  BB BB  ", "  BB BB  ", "  CB BC  ", "  CB BC  ", "  CB BC  ", "  CB BC  ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "    C    ", "    C    ", "    C    ", "    C    ", "    C    ")
                    .aisle("ABBBBBBBA", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", " BB   BB ", " BB   BB ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "    B    ", "    B    ", "    B    ", "    B    ", "    B    ")
                    .aisle("ABBBBBBBA", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", " BB   BB ", " BB   BB ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "    B    ", "    B    ", "    B    ", "    B    ", "    B    ")
                    .aisle("ABBBBBBBA", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", " BB   BB ", " BB   BB ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "    B    ", "    B    ", "    B    ", "    B    ", "    B    ")
                    .aisle("ABBBBBBBA", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", " BB   BB ", " BB   BB ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", "  B   B  ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "   B B   ", "    B    ", "    B    ", "    B    ", "    B    ", "    B    ")
                    .aisle(" ABBBBBA ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "  CB BC  ", "  CB BC  ", "  CB BC  ", "  CB BC  ", "  BB BB  ", "  BB BB  ", "  BB BB  ", "  BB BB  ", "  BB BB  ", "  BB BB  ", "  BB BB  ", "  BB BB  ", "  CB BC  ", "  CB BC  ", "  CB BC  ", "  CB BC  ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "    C    ", "    C    ", "    C    ", "    C    ", "    C    ")
                    .aisle("  AA~AA  ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "   CBC   ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ")
                    .where("~", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("B", Predicates.blocks(GTLBlocks.NAQUADAH_ALLOY_CASING.get()))
                    .where("A", Predicates.blocks(GTLBlocks.NAQUADAH_ALLOY_CASING.get())
                            .or(Predicates.abilities(PartAbility.IMPORT_ITEMS))
                            .or(Predicates.abilities(PartAbility.EXPORT_ITEMS))
                            .or(Predicates.abilities(PartAbility.IMPORT_FLUIDS))
                            .or(Predicates.abilities(PartAbility.INPUT_LASER)))
                    .where("C", Predicates.blocks(Registries.getBlock("gtceu:ruridit_frame")))
                    .where(" ", Predicates.any())
                    .build())
            .additionalDisplay((controller, components) -> {
                if (controller.isFormed() && controller instanceof StorageMachine machine) {
                    if (Objects.equals(machine.getMachineStorageItem().kjs$getId(), "gtceu:carbon_nanoswarm")) {
                        components.add(Component.translatable("gtceu.multiblock.parallel", Component.literal(String.valueOf(machine.getMachineStorageItem().getCount())).withStyle(ChatFormatting.DARK_PURPLE)).withStyle(ChatFormatting.GRAY));
                    } else {
                        components.add(Component.literal("需要放入碳纳米蜂群").withStyle(ChatFormatting.RED));
                    }
                }
            })
            .workableCasingRenderer(GTLCore.id("block/casings/hyper_mechanical_casing"), GTCEu.id("block/multiblock/gcym/large_assembler"))
            .register();

    public final static MultiblockMachineDefinition NANO_FORGE_2 = REGISTRATE.multiblock("nano_forge_2", (holder) -> new StorageMachine(holder, 64))
            .rotationState(RotationState.NON_Y_AXIS)
            .allowExtendedFacing(false)
            .recipeType(GTLRecipeTypes.NANO_FORGE_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.nano_forge.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.nano_forge_2.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.nano_forge_2.tooltip.1"))
            .tooltips(Component.translatable("gtceu.multiblock.laser.tooltip"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.nano_forge")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifiers((machine, recipe, params, result) -> GTLRecipeModifiers.nanoForgeOverclock(machine, recipe, params, result, 2))
            .appearanceBlock(GTLBlocks.NAQUADAH_ALLOY_CASING)
            .pattern((definition) -> FactoryBlockPattern.start()
                    .aisle
                    .aisle("  CCCCC            ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ")
                    .aisle(" CAAAAAC           ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "  DA AD            ", "  DA AD            ", "  DA AD            ", "  DA AD            ", "  AA AA            ", "  AA AA            ", "  AA AA            ", "  AA AA            ", "  AA AA            ", "  AA AA            ", "  AA AA            ", "  AA AA            ", "  DA AD            ", "  DA AD            ", "  DA AD            ", "  DA AD            ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "    D              ", "    D              ", "    D              ", "    D              ", "    D              ")
                    .aisle("CAAAAAAAC          ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", " AA   AA           ", " AA   AA           ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "    A              ", "    A              ", "    A              ", "    A              ", "    A              ")
                    .aisle("CAAAAAAAC          ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", " AA   AA           ", " AA   AA           ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "    A              ", "    A              ", "    A              ", "    A              ", "    A              ")
                    .aisle("CAAAAAAAC   AAAAAA ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", " AA   AA           ", " AA   AA           ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "    A              ", "    A              ", "    A              ", "    A              ", "    A              ")
                    .aisle("CAAAAAAAC  AAAAAAAA", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", " AA   AA           ", " AA   AA           ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", "  A   A            ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "   A A             ", "    A              ", "    A              ", "    A              ", "    A              ", "    A              ")
                    .aisle(" CAAAAAC   AAAAAAAA", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD        AA   ", "   DAD        BB   ", "   DAD        AA   ", "  DA AD            ", "  DA AD            ", "  DA AD            ", "  DA AD            ", "  AA AA       AA   ", "  AA AA       BB   ", "  AA AA       AA   ", "  AA AA            ", "  AA AA            ", "  AA AA            ", "  AA AA            ", "  AA AA            ", "  DA AD            ", "  DA AD            ", "  DA AD            ", "  DA AD            ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "    D              ", "    D              ", "    D              ", "    D              ", "    D              ")
                    .aisle("  CC~CC    AAAAAAAA", "              AA   ", "              AA   ", "              AA   ", "              AA   ", "             AAAA  ", "             BAAB  ", "             AAAA  ", "   DAD        AA   ", "   DAD        AA   ", "   DAD        AA   ", "   DAD        AA   ", "   DAD       AAAA  ", "   DAD       BAAB  ", "   DAD       AAAA  ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "   DAD             ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ")
                    .aisle("           AAAAAAAA", "              AA   ", "              AA   ", "              AA   ", "              AA   ", "             AAAA  ", "             BAAB  ", "             AAAA  ", "              AA   ", "              AA   ", "              AA   ", "              AA   ", "    A        AAAA  ", "    A        BAAB  ", "    A        AAAA  ", "    A              ", "    A              ", "    A              ", "    A              ", "    A              ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ")
                    .aisle("           AAAAAAAA", "                   ", "                   ", "                   ", "                   ", "              AA   ", "              BB   ", "              AA   ", "                   ", "                   ", "                   ", "                   ", "              AA   ", "              BB   ", "              AA   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ")
                    .aisle
                    .aislewhere("~", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("A", Predicates.blocks(GTLBlocks.NAQUADAH_ALLOY_CASING.get()))
                    .where("C", Predicates.blocks(GTLBlocks.NAQUADAH_ALLOY_CASING.get())
                            .or(Predicates.abilities(PartAbility.IMPORT_ITEMS))
                            .or(Predicates.abilities(PartAbility.EXPORT_ITEMS))
                            .or(Predicates.abilities(PartAbility.IMPORT_FLUIDS))
                            .or(Predicates.abilities(PartAbility.INPUT_LASER)))
                    .where("B", Predicates.blocks(GTBlocks.CASING_ASSEMBLY_LINE.get()))
                    .where("D", Predicates.blocks(Registries.getBlock("gtceu:ruridit_frame")))
                    .where(" ", Predicates.any())
                    .build())
            .additionalDisplay((controller, components) -> {
                if (controller.isFormed() && controller instanceof StorageMachine machine) {
                    if (Objects.equals(machine.getMachineStorageItem().kjs$getId(), "gtceu:neutronium_nanoswarm")) {
                        components.add(Component.translatable("gtceu.multiblock.parallel", Component.literal(String.valueOf(machine.getMachineStorageItem().getCount())).withStyle(ChatFormatting.DARK_PURPLE)).withStyle(ChatFormatting.GRAY));
                    } else {
                        components.add(Component.literal("需要放入中子素纳米蜂群").withStyle(ChatFormatting.RED));
                    }
                }
            })
            .workableCasingRenderer(GTLCore.id("block/casings/hyper_mechanical_casing"), GTCEu.id("block/multiblock/gcym/large_assembler"))
            .register();

    public final static MultiblockMachineDefinition NANO_FORGE_3 = REGISTRATE.multiblock("nano_forge_3", (holder) -> new StorageMachine(holder, 64))
            .rotationState(RotationState.NON_Y_AXIS)
            .allowExtendedFacing(false)
            .recipeType(GTLRecipeTypes.NANO_FORGE_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.nano_forge.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.nano_forge_3.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.nano_forge_3.tooltip.1"))
            .tooltips(Component.translatable("gtceu.machine.nano_forge_3.tooltip.2"))
            .tooltips(Component.translatable("gtceu.multiblock.laser.tooltip"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.nano_forge")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifiers((machine, recipe, params, result) -> GTLRecipeModifiers.nanoForgeOverclock(machine, recipe, params, result, 3))
            .appearanceBlock(GTLBlocks.NAQUADAH_ALLOY_CASING)
            .pattern((definition) -> FactoryBlockPattern.start()
                    .aisle
                    .aisle("            DDDDD            ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("           DAAAAAD           ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "            CA AC            ", "            CA AC            ", "            CA AC            ", "            CA AC            ", "            AA AA            ", "            AA AA            ", "            AA AA            ", "            AA AA            ", "            AA AA            ", "            AA AA            ", "            AA AA            ", "            AA AA            ", "            CA AC            ", "            CA AC            ", "            CA AC            ", "            CA AC            ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "              C              ", "              C              ", "              C              ", "              C              ", "              C              ")
                    .aisle("          DAAAAAAAD          ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "            A   A            ", "            A   A            ", "            A   A            ", "            A   A            ", "            A   A            ", "           AA   AA           ", "           AA   AA           ", "            A   A            ", "            A   A            ", "            A   A            ", "            A   A            ", "            A   A            ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "              A              ", "              A              ", "              A              ", "              A              ", "              A              ")
                    .aisle("          DAAAAAAAD          ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "            A   A            ", "            A   A            ", "            A   A            ", "            A   A            ", "            A   A            ", "           AA   AA           ", "           AA   AA           ", "            A   A            ", "            A   A            ", "            A   A            ", "            A   A            ", "            A   A            ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "              A              ", "              A              ", "              A              ", "              A              ", "              A              ")
                    .aisle(" AAAAAA   DAAAAAAAD   AAAAAA ", "             A A             ", "    CC       A A             ", "  CC         A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "    CC       A A             ", "  CC         A A             ", "            A   A            ", "            A   A            ", "            A   A            ", "            A   A            ", "    CC      A   A            ", "  CC       AA   AA           ", "           AA   AA           ", "            A   A            ", "            A   A            ", "            A   A            ", "    CC      A   A            ", "  CC        A   A            ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "              A              ", "              A              ", "              A              ", "              A              ", "              A              ")
                    .aisle("AAAAAAAA  DAAAAAAAD  AAAAAAAA", "      C      A A             ", "             A A             ", "             A A             ", " C           A A             ", "             A A             ", "             A A             ", "      C      A A             ", "             A A             ", "             A A             ", " C          A   A            ", "            A   A            ", "            A   A            ", "      C     A   A            ", "            A   A            ", "           AA   AA           ", " C         AA   AA           ", "            A   A            ", "            A   A            ", "      C     A   A            ", "            A   A            ", "            A   A            ", " C           A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "             A A             ", "              A              ", "              A              ", "              A              ", "              A              ", "              A              ")
                    .aisle("AAAAAAAA   DAAAAAD   AAAAAAAA", "             CAC             ", "             CAC             ", "             CAC             ", "   AA        CAC             ", "C  BB        CAC        AA   ", "   AA  C     CAC        BB   ", "             CAC        AA   ", "            CA AC            ", "            CA AC            ", "            CA AC            ", "C           CA AC            ", "       C    AA AA       AA   ", "            AA AA       BB   ", "   AA       AA AA       AA   ", "   AA       AA AA            ", "   AA       AA AA            ", "C  AA       AA AA            ", "       C    AA AA            ", "            AA AA            ", "            CA AC            ", "            CA AC            ", "            CA AC            ", "C           CA AC            ", "   AA  C     CAC             ", "   BBCC      CAC             ", "   AA        CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "             CAC             ", "              C              ", "              C              ", "              C              ", "              C              ", "              C              ")
                    .aisle("AAAAAAAA    DD~DD    AAAAAAAA", "   AA                   AA   ", "   AA                   AA   ", "   AA                   AA   ", "  AAAA                  AA   ", "C BAAB                 AAAA  ", "  AAAA C               BAAB  ", "   AA                  AAAA  ", "   AA        CAC        AA   ", "   AA        CAC        AA   ", "   AA        CAC        AA   ", "C  AA        CAC        AA   ", "   AA  C     CAC       AAAA  ", "   AA        CAC       BAAB  ", "  AAAA       CAC       AAAA  ", "  AAAA       CAC             ", "  AAAA       CAC             ", "C AAAA       CAC             ", "   AA  C     CAC             ", "   AA        CAC             ", "   AA        CAC             ", "   AA        CAC             ", "   AA        CAC             ", "C  AA        CAC             ", "  AAAA C                     ", "  BAAB                       ", "  AAAA                       ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("AAAAAAAA             AAAAAAAA", "   AA                   AA   ", "   AA                   AA   ", "   AA                   AA   ", "  AAAA                  AA   ", "  BAAB C               AAAA  ", "C AAAA                 BAAB  ", "   AA                  AAAA  ", "   AA                   AA   ", "   AA                   AA   ", "   AA                   AA   ", "   AA  C                AA   ", "C  AA         A        AAAA  ", "   AA         A        BAAB  ", "  AAAA        A        AAAA  ", "  AAAA        A              ", "  AAAA        A              ", "  AAAA C      A              ", "C  AA         A              ", "   AA         A              ", "   AA                        ", "   AA                        ", "   AA                        ", "   AA  C                     ", "C AAAA                       ", "  BAAB                       ", "  AAAA                       ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("AAAAAAAA             AAAAAAAA", "                             ", "                             ", "                             ", "   AA                        ", "   BB  C                AA   ", "C  AA                   BB   ", "                        AA   ", "                             ", "                             ", "                             ", "       C                     ", "C                       AA   ", "                        BB   ", "   AA                   AA   ", "   AA                        ", "   AA                        ", "   AA  C                     ", "C                            ", "                             ", "                             ", "                             ", "                             ", "       C                     ", "C  AA                        ", " CCBB                        ", "   AA                        ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle("AAAAAAAA             AAAAAAAA", " C                           ", "                             ", "                             ", "      C                      ", "                             ", "                             ", " C                           ", "                             ", "                             ", "      C                      ", "                             ", "                             ", " C                           ", "                             ", "                             ", "      C                      ", "                             ", "                             ", " C                           ", "                             ", "                             ", "      C                      ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .aisle(" AAAAAA               AAAAAA ", "                             ", "  CC                         ", "    CC                       ", "                             ", "                             ", "                             ", "                             ", "  CC                         ", "    CC                       ", "                             ", "                             ", "                             ", "                             ", "  CC                         ", "    CC                       ", "                             ", "                             ", "                             ", "                             ", "  CC                         ", "    CC                       ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ", "                             ")
                    .where("~", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("A", Predicates.blocks(GTLBlocks.NAQUADAH_ALLOY_CASING.get()))
                    .where("D", Predicates.blocks(GTLBlocks.NAQUADAH_ALLOY_CASING.get())
                            .or(Predicates.abilities(PartAbility.IMPORT_ITEMS))
                            .or(Predicates.abilities(PartAbility.EXPORT_ITEMS))
                            .or(Predicates.abilities(PartAbility.IMPORT_FLUIDS))
                            .or(Predicates.abilities(PartAbility.INPUT_LASER)))
                    .where("B", Predicates.blocks(GTLBlocks.ADVANCED_ASSEMBLY_LINE_UNIT.get()))
                    .where("C", Predicates.blocks(Registries.getBlock("gtceu:ruridit_frame")))
                    .where(" ", Predicates.any())
                    .build())
            .additionalDisplay((controller, components) -> {
                if (controller.isFormed() && controller instanceof StorageMachine machine) {
                    if (Objects.equals(machine.getMachineStorageItem().kjs$getId(), "gtceu:draconium_nanoswarm")) {
                        components.add(Component.translatable("gtceu.multiblock.parallel", Component.literal(String.valueOf(machine.getMachineStorageItem().getCount())).withStyle(ChatFormatting.DARK_PURPLE)).withStyle(ChatFormatting.GRAY));
                    } else {
                        components.add(Component.literal("需要放入龙纳米蜂群").withStyle(ChatFormatting.RED));
                    }
                }
            })
            .workableCasingRenderer(GTLCore.id("block/casings/hyper_mechanical_casing"), GTCEu.id("block/multiblock/gcym/large_assembler"))
            .register();

    public final static MultiblockMachineDefinition ISA_MILL = REGISTRATE.multiblock("isa_mill", (holder) -> new StorageMachine(holder, 1))
            .rotationState(RotationState.ALL)
            .recipeType(GTLRecipeTypes.ISA_MILL_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.isa_mill.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.perfect_oc"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.isa_mill")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifier((machine, recipe, params, result) -> {
                if (machine instanceof StorageMachine storageMachine) {
                    ItemStack item = storageMachine.getMachineStorageItem();
                    int tier = switch (item.kjs$getId()) {
                        case "kubejs:grindball_aluminium" -> 2;
                        case "kubejs:grindball_soapstone" -> 1;
                        default -> 0;
                    };
                    if (tier == recipe.data.getInt("grindball")) {
                        int damage = item.getDamageValue();
                        if (damage < item.getMaxDamage()) {
                            item.setDamageValue(damage + 1);
                            storageMachine.setMachineStorageItem(item);
                        } else {
                            storageMachine.setMachineStorageItem(new ItemStack(Items.AIR));
                        }
                        return RecipeHelper.applyOverclock(OverclockingLogic.PERFECT_OVERCLOCK_SUBTICK, recipe, storageMachine.getOverclockVoltage(), params, result);
                    }
                }
                return null;
            })
            .appearanceBlock(() -> Registries.getBlock("kubejs:inconel_625_casing"))
            .pattern((definition) -> FactoryBlockPattern.start()
                    .aisle("BBB", "BBB", "BBB")
                    .aisle("BBB", "BCB", "BBB")
                    .aisle("BBB", "BCB", "BBB")
                    .aisle("BBB", "BCB", "BBB")
                    .aisle("BBB", "BCB", "BBB")
                    .aisle("BBB", "BCB", "BBB")
                    .aisle("AAA", "A~A", "AAA")
                    .where("~", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("B", Predicates.blocks(Registries.getBlock("kubejs:inconel_625_casing"))
                            .or(Predicates.abilities(PartAbility.INPUT_ENERGY).setMaxGlobalLimited(2))
                            .or(Predicates.abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(4))
                            .or(Predicates.abilities(PartAbility.IMPORT_FLUIDS).setMaxGlobalLimited(1))
                            .or(Predicates.abilities(PartAbility.EXPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1))
                            .or(Predicates.abilities(PartAbility.MUFFLER).setExactLimit(1)))
                    .where("C", Predicates.blocks(Registries.getBlock("kubejs:inconel_625_gearbox")))
                    .where("A", Predicates.blocks(Registries.getBlock("kubejs:inconel_625_pipe")))
                    .build())
            .workableCasingRenderer(new ResourceLocation("kubejs:block/inconel_625_casing"), GTCEu.id("block/multiblock/gcym/large_maceration_tower"))
            .register();

    public static final MultiblockMachineDefinition NEUTRON_ACTIVATOR = REGISTRATE
            .multiblock("neutron_activator", NeutronActivatorMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .tooltips(Component.translatable("gtceu.machine.neutron_activator.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.neutron_activator.tooltip.1"))
            .tooltips(Component.translatable("gtceu.machine.neutron_activator.tooltip.2"))
            .tooltips(Component.translatable("gtceu.machine.neutron_activator.tooltip.3"))
            .tooltips(Component.translatable("gtceu.machine.neutron_activator.tooltip.4"))
            .tooltips(Component.translatable("gtceu.multiblock.parallelizable.tooltip"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.neutron_activator")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeTypes(GTLRecipeTypes.NEUTRON_ACTIVATOR_RECIPES)
            .recipeModifiers(((machine, recipe, params, result) -> NeutronActivatorMachine.recipeModifier(machine, recipe)))
            .appearanceBlock(GTBlocks.CASING_STAINLESS_CLEAN)
            .pattern(definition -> FactoryBlockPattern.start(RIGHT, BACK, UP)
                    .aisle("AAGAA", "ADDDA", "ADDDA", "ADDDA", "AAAAA")
                    .aisle("B   B", " EEE ", " EFE ", " EEE ", "B   B").setRepeatable(4, 200)
                    .aisle("CCCCC", "CDDDC", "CDDDC", "CDDDC", "CCCCC")
                    .where('G', controller(blocks(definition.getBlock())))
                    .where('A', blocks(GTBlocks.CASING_STAINLESS_CLEAN.get())
                            .or(blocks(GTLMachines.NEUTRON_SENSOR.get()).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.EXPORT_FLUIDS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.EXPORT_ITEMS).setMaxGlobalLimited(2))
                            .or(abilities(GTLPartAbility.NEUTRON_ACCELERATOR).setMaxGlobalLimited(2))
                            .or(abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where('B', frames(GTMaterials.Tungsten))
                    .where('C', blocks(GTBlocks.CASING_STAINLESS_CLEAN.get())
                            .or(abilities(PartAbility.IMPORT_FLUIDS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(2)))
                    .where('D', blocks(GTLBlocks.PROCESS_MACHINE_CASING.get()))
                    .where('E', blocks(GTBlocks.CASING_LAMINATED_GLASS.get()))
                    .where('F', GTLPredicates.countBlock("SpeedPipe",
                            Registries.getBlock("kubejs:speeding_pipe")))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(
                    GTCEu.id("block/casings/solid/machine_casing_clean_stainless_steel"),
                    GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    public final static MultiblockMachineDefinition HEAT_EXCHANGER = REGISTRATE
            .multiblock("heat_exchanger", HeatExchangerMachine::new)
            .langValue("Heat Exchanger")
            .tooltips(Component.translatable("gtceu.machine.heat_exchanger.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.heat_exchanger.tooltip.1"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.heat_exchanger")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .rotationState(RotationState.ALL)
            .recipeType(GTLRecipeTypes.HEAT_EXCHANGER_RECIPES)
            .recipeModifiers((machine, recipe, params, result) -> HeatExchangerMachine.recipeModifier(machine, recipe))
            .appearanceBlock(GTBlocks.CASING_TUNGSTENSTEEL_ROBUST)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle(" AAA ", " AAA ", " AAA ", " AAA ", " AAA ", " AAA ")
                    .aisle("AAAAA", "BCCCB", "BCCCB", "BCCCB", "BCCCB", "AAAAA")
                    .aisle("AAAAA", "BDDDB", "BDCDB", "BDCDB", "BDDDB", "AAAAA")
                    .aisle("AAAAA", "BCCCB", "BCCCB", "BCCCB", "BCCCB", "AAAAA")
                    .aisle("AAAAA", "BDDDB", "BDCDB", "BDCDB", "BDDDB", "AAAAA")
                    .aisle("AAAAA", "BCCCB", "BCCCB", "BCCCB", "BCCCB", "AAAAA")
                    .aisle("AAAAA", "BDDDB", "BDCDB", "BDCDB", "BDDDB", "AAAAA")
                    .aisle("AAAAA", "BCCCB", "BCCCB", "BCCCB", "BCCCB", "AAAAA")
                    .aisle(" ASA ", " AAA ", " AAA ", " AAA ", " AAA ", " AAA ")
                    .where('S', controller(blocks(definition.get())))
                    .where('A',
                            blocks(GTBlocks.CASING_TUNGSTENSTEEL_ROBUST.get()).setMinGlobalLimited(98)
                                    .or(autoAbilities(definition.getRecipeTypes()))
                                    .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where('C', blocks(GTBlocks.CASING_TUNGSTENSTEEL_PIPE.get()))
                    .where('B', blocks(GTBlocks.CASING_LAMINATED_GLASS.get()))
                    .where('D', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.HSSG)))
                    .where(' ', any())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_robust_tungstensteel"),
                    GTCEu.id("block/multiblock/implosion_compressor"))
            .register();

    public static final MultiblockMachineDefinition[] FLUID_DRILLING_RIG = GTMachines.registerTieredMultis(
            "fluid_drilling_rig", INFFluidDrillMachine::new, (tier, builder) -> builder
                    .rotationState(RotationState.ALL)
                    .langValue("%s Fluid Drilling Rig %s".formatted(GTValues.VLVH[tier], GTValues.VLVT[tier]))
                    .recipeType(GTRecipeTypes.DUMMY_RECIPES)
                    .tooltips(
                            Component.translatable("gtceu.machine.fluid_drilling_rig.description"),
                            Component.translatable("gtceu.machine.fluid_drilling_rig.depletion", 0),
                            Component.translatable("gtceu.universal.tooltip.energy_tier_range", GTValues.VNF[tier],
                                    GTValues.VNF[tier + 1]),
                            Component.translatable("gtceu.machine.fluid_drilling_rig.production",
                                    INFFluidDrillMachine.getRigMultiplier(tier),
                                    FormattingUtil.formatNumbers(INFFluidDrillMachine.getRigMultiplier(tier) * 1.5)))
                    .tooltipBuilder(GTLMachines.GTL_ADD)
                    .appearanceBlock(() -> INFFluidDrillMachine.getCasingState(tier))
                    .pattern((definition) -> FactoryBlockPattern.start()
                            .aisle("XXX", "#F#", "#F#", "#F#", "###", "###", "###")
                            .aisle("XXX", "FCF", "FCF", "FCF", "#F#", "#F#", "#F#")
                            .aisle("XSX", "#F#", "#F#", "#F#", "###", "###", "###")
                            .where('S', controller(blocks(definition.get())))
                            .where('X', blocks(INFFluidDrillMachine.getCasingState(tier)).setMinGlobalLimited(3)
                                    .or(abilities(PartAbility.INPUT_ENERGY).setMinGlobalLimited(1)
                                            .setMaxGlobalLimited(2))
                                    .or(abilities(PartAbility.EXPORT_FLUIDS).setMaxGlobalLimited(1)))
                            .where('C', blocks(INFFluidDrillMachine.getCasingState(tier)))
                            .where('F', blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Ruridit)))
                            .where('#', any())
                            .build())
                    .workableCasingRenderer(GTLCore.id("block/casings/iridium_casing"),
                            GTCEu.id("block/multiblock/fluid_drilling_rig"))
                    .register(),
            GTValues.ZPM);

    public final static MultiblockMachineDefinition ADVANCED_ASSEMBLY_LINE = REGISTRATE
            .multiblock("advanced_assembly_line", AdvancedAssemblyLineMachine::new)
            .rotationState(RotationState.ALL)
            .recipeType(GTRecipeTypes.ASSEMBLY_LINE_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.advanced_assembly_line.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.advanced_assembly_line.tooltip.1"))
            .tooltips(Component.translatable("gtceu.machine.assembly_line.tooltip.0"))
            .tooltips(Component.translatable("gtceu.multiblock.parallelizable.tooltip"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.assembly_line")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifier(AdvancedAssemblyLineMachine::recipeModifier)
            .appearanceBlock(GTBlocks.CASING_STEEL_SOLID)
            .pattern(definition -> FactoryBlockPattern.start(BACK, UP, RIGHT)
                    .aisle("FIF", "RTR", "SAG", "#Y#")
                    .aisle("FIF", "RTR", "DAG", "#Y#").setRepeatable(7, 63)
                    .aisle("FOF", "RTR", "DAG", "#Y#")
                    .where("S", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("F", Predicates.blocks(GTBlocks.CASING_STEEL_SOLID.get())
                            .or(Predicates.abilities(PartAbility.IMPORT_FLUIDS).setMaxGlobalLimited(4))
                            .or(Predicates.abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1)))
                    .where("O", Predicates.abilities(PartAbility.EXPORT_ITEMS).addTooltips(Component.translatable("gtceu.multiblock.pattern.location_end")))
                    .where("Y", Predicates.blocks(GTBlocks.CASING_STEEL_SOLID.get())
                            .or(Predicates.abilities(PartAbility.INPUT_ENERGY).setMaxGlobalLimited(2)))
                    .where("I", Predicates.blocks(GTMachines.ITEM_IMPORT_BUS[0].get()).or(Predicates.blocks(CustomMachines.HUGE_ITEM_IMPORT_BUS[0].get())))
                    .where("G", Predicates.blocks(GTBlocks.CASING_GRATE.get()))
                    .where("D", Predicates.blocks(GTBlocks.CASING_GRATE.get())
                            .or(Predicates.abilities(PartAbility.OPTICAL_DATA_RECEPTION).setExactLimit(1)))
                    .where("A", Predicates.blocks(GTBlocks.CASING_ASSEMBLY_CONTROL.get()))
                    .where("R", Predicates.blocks(GTBlocks.CASING_LAMINATED_GLASS.get()))
                    .where("T", GTLPredicates.countBlock("Unit", GTLBlocks.ADVANCED_ASSEMBLY_LINE_UNIT.get()))
                    .where("#", Predicates.any())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_solid_steel"), GTCEu.id("block/multiblock/assembly_line"))
            .register();

    public final static MultiblockMachineDefinition FISSION_REACTOR = REGISTRATE.multiblock("fission_reactor", FissionReactorMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .allowExtendedFacing(false)
            .recipeType(GTLRecipeTypes.FISSION_REACTOR_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.fission_reactor.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.fission_reactor.tooltip.1"))
            .tooltips(Component.translatable("gtceu.machine.fission_reactor.tooltip.2"))
            .tooltips(Component.translatable("gtceu.machine.fission_reactor.tooltip.3"))
            .tooltips(Component.translatable("gtceu.machine.fission_reactor.tooltip.4"))
            .tooltips(Component.translatable("gtceu.machine.fission_reactor.tooltip.5"))
            .tooltips(Component.translatable("gtceu.machine.fission_reactor.tooltip.6"))
            .tooltips(Component.translatable("gtceu.machine.fission_reactor.tooltip.7"))
            .tooltips(Component.translatable("gtceu.machine.fission_reactor.tooltip.8"))
            .tooltips(Component.translatable("gtceu.machine.fission_reactor.tooltip.9"))
            .tooltips(Component.translatable("gtceu.machine.fission_reactor.tooltip.10"))
            .tooltips(Component.translatable("gtceu.machine.fission_reactor.tooltip.11"))
            .tooltips(Component.translatable("gtceu.machine.fission_reactor.tooltip.12"))
            .tooltips(Component.translatable("gtceu.machine.fission_reactor.tooltip.13"))
            .tooltips(Component.translatable("gtceu.machine.fission_reactor.tooltip.14"))
            .tooltips(Component.translatable("gtceu.machine.fission_reactor.tooltip.15"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.fission_reactor")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifier((machine, recipe, params, result) -> FissionReactorMachine.recipeModifier(machine, recipe))
            .appearanceBlock(GTLBlocks.FISSION_REACTOR_CASING)
            .pattern((definition) -> FactoryBlockPattern.start()
                    .aisle("AAAAAAAAA", "ABBBBBBBA", "ABBBBBBBA", "ABBBBBBBA", "ABBBBBBBA", "ABBBBBBBA", "ABBBBBBBA", "ABBBBBBBA", "AAAAAAAAA")
                    .aisle("AAAAAAAAA", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "AAAAAAAAA")
                    .aisle("AAAAAAAAA", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "AAAAAAAAA")
                    .aisle("AAAAAAAAA", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "AAAAAAAAA")
                    .aisle("AAAAAAAAA", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "AAAAAAAAA")
                    .aisle("AAAAAAAAA", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "AAAAAAAAA")
                    .aisle("AAAAAAAAA", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "AAAAAAAAA")
                    .aisle("AAAAAAAAA", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "BCCCCCCCB", "AAAAAAAAA")
                    .aisle("AAAA~AAAA", "ABBBBBBBA", "ABBBBBBBA", "ABBBBBBBA", "ABBBBBBBA", "ABBBBBBBA", "ABBBBBBBA", "ABBBBBBBA", "AAAAAAAAA")
                    .where("~", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("A", Predicates.blocks(GTLBlocks.FISSION_REACTOR_CASING.get())
                            .or(Predicates.abilities(PartAbility.INPUT_ENERGY).setMaxGlobalLimited(2))
                            .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1))
                            .or(Predicates.abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(Predicates.abilities(PartAbility.EXPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(Predicates.abilities(PartAbility.EXPORT_FLUIDS).setMaxGlobalLimited(1))
                            .or(Predicates.abilities(PartAbility.IMPORT_FLUIDS).setMaxGlobalLimited(1)))
                    .where("B", Predicates.blocks(GTBlocks.CASING_LAMINATED_GLASS.get()).or(Predicates.blocks(GTLBlocks.FISSION_REACTOR_CASING.get())))
                    .where("C", Predicates.air().or(GTLPredicates.countBlock("FuelAssembly", GTLBlocks.FISSION_FUEL_ASSEMBLY.get()))
                            .or(GTLPredicates.countBlock("Cooler", GTLBlocks.COOLER.get())))
                    .build())
            .workableCasingRenderer(GTLCore.id("block/casings/fission_reactor_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    public final static MultiblockMachineDefinition SPACE_ELEVATOR = REGISTRATE.multiblock("space_elevator", SpaceElevatorMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .allowExtendedFacing(false)
            .recipeType(GTLRecipeTypes.SPACE_ELEVATOR_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.space_elevator.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.space_elevator.tooltip.1"))
            .tooltips(Component.translatable("gtceu.machine.space_elevator.tooltip.2"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.space_elevator")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .recipeModifier(GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(new OverclockingLogic(1, 4, false)))
            .appearanceBlock(GTLBlocks.SPACE_ELEVATOR_MECHANICAL_CASING)
            .pattern(definition -> FactoryBlockPattern.start(RIGHT, DOWN, FRONT)
                    .aisle
                    .aisle
                    .aisle
                    .aisle("                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                E E                ", "          DD   DE ED   DD          ", "         FFFFFFD   DFFFFFF         ", "        AAAAAAAAAAAAAAAAAAA        ")
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle("                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                E E                ", "               DE ED               ", "               DE ED               ", "               DE ED               ", "               DE ED               ", "                                   ", "         E               E         ", "         EHH           HHE         ", "         E               E         ", "         E               E         ", "         E               E         ", "         E               E         ", "         E               E         ", "         E               E         ", "         E               E         ", "   FF    E               E    FF   ", "   AAAAAAAAAAGGGAAAGGGAAAAAAAAAA   ")
                    .aisle
                    .aisle
                    .aisle("                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                E E                ", "               DE ED               ", "               DE ED               ", "               DE ED               ", "               DE ED               ", "               DE ED               ", "               DE ED               ", "               DE ED               ", "               DE ED               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "             HH     HH             ", "            E         E            ", "            E         E            ", "            E         E            ", "            E         E            ", "            E         E            ", "            E         E            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        H                 H        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  D                             D  ", " FFF          FFFFFFF          FFF ", " AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA ")
                    .aisle
                    .aisle("                FFF                ", "                 E                 ", "                 E                 ", "                 E                 ", "                 E                 ", "                 E                 ", "               F   F               ", "              E     E              ", "              E     E              ", "              E     E              ", "              E     E              ", "              E     E              ", "              E     E              ", "              E     E              ", "              E     E              ", "              E     E              ", "                                   ", "                                   ", "                FFF                ", "                                   ", "                                   ", "            H         H            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                FFF                ", "                                   ", "                                   ", "                                   ", "                                   ", "       H                   H       ", "                                   ", "                                   ", "                                   ", "                                   ", "                XXX                ", "                XXX                ", "  D             XXX             D  ", " FFF       VFFFFFFFFFFFV       FFF ", " AAAAAAAAGGGAAAAAAAAAAAGGGAAAAAAAA ")
                    .aisle("               F D F               ", "                 C                 ", "                 C                 ", "                 C                 ", "                 C                 ", "                 C                 ", "              F  C  F              ", "                 C                 ", "            D    C    D            ", "            D    C    D            ", "            D    C    D            ", "            D    C    D            ", "            D    C    D            ", "            D    C    D            ", "            D    C    D            ", "           DD    C    DD           ", "           D     C     D           ", "           D     C     D           ", "           D   F C F   D           ", "           D     C     D           ", "           D     C     D           ", "           D     C     D           ", "           D     C     D           ", "          DD     C     DD          ", "          D      C      D          ", "          D      C      D          ", "          D      C      D          ", "         DD      C      DD         ", "         D     FDCDF     D         ", "         D      DCD      D         ", "        DD      DCD      DD        ", "        D       DCD       D        ", "        D       DCD       D        ", "       DD      DDCDD      DD       ", "       D       D C D       D       ", "       D       D C D       D       ", "      DD       D C D       DD      ", "      D        D C D        D      ", "     DD        XDCDX        DD     ", "    DD         XDCDX         DD    ", " DDDD          XDCDX          DDDD ", "FFFD        FFFDDDDDFFF        DFFF", "AAAAAAAAAGGGAAAXXXXXAAAGGGAAAAAAAAA")
                    .aisle
                    .aisle("              FD - DF              ", "              EC - CE              ", "              EC - CE              ", "              EC - CE              ", "              EC - CE              ", "              EC - CE              ", "             F C - C F             ", "               C - C               ", "               C - C               ", "               C - C               ", "               C - C               ", "               C - C               ", "               C - C               ", "               C - C               ", "               C - C               ", "               C - C               ", "               C - C               ", "               C - C               ", "              FC - CF              ", "               C - C               ", "               C - C               ", "               C - C               ", "               C - C               ", "               C - C               ", "               C - C               ", "               C - C               ", "               C - C               ", "               C - C               ", "              FC - CF              ", "               C - C               ", "               C - C               ", "               C - C               ", "               C - C               ", "               C - C               ", "               C - C               ", "               C - C               ", "               C - C               ", "               C - C               ", "              XC - CX              ", "              XC - CX              ", "              XC - CX              ", "           FFFFDDMDDFFFF           ", "AAAAAAAAAAAAAAAXXXXXAAAAAAAAAAAAAAA")
                    .aisle
                    .aisle("               F D F               ", "                 C                 ", "                 C                 ", "                 C                 ", "                 C                 ", "                 C                 ", "              F  C  F              ", "                 C                 ", "            D    C    D            ", "            D    C    D            ", "            D    C    D            ", "            D    C    D            ", "            D    C    D            ", "            D    C    D            ", "            D    C    D            ", "           DD    C    DD           ", "           D     C     D           ", "           D     C     D           ", "           D   F C F   D           ", "           D     C     D           ", "           D     C     D           ", "           D     C     D           ", "           D     C     D           ", "          DD     C     DD          ", "          D      C      D          ", "          D      C      D          ", "          D      C      D          ", "         DD      C      DD         ", "         D     FDCDF     D         ", "         D      DCD      D         ", "        DD      DCD      DD        ", "        D       DCD       D        ", "        D       DCD       D        ", "       DD      DDCDD      DD       ", "       D       D C D       D       ", "       D       D C D       D       ", "      DD       D C D       DD      ", "      D        D C D        D      ", "     DD        XDCDX        DD     ", "    DD         XDCDX         DD    ", " DDDD          XDCDX          DDDD ", "FFFD        FFFDDDDDFFF        DFFF", "AAAAAAAAAGGGAAAXXXXXAAAGGGAAAAAAAAA")
                    .aisle("                FFF                ", "                 E                 ", "                 E                 ", "                 E                 ", "                 E                 ", "                 E                 ", "               F   F               ", "              E     E              ", "              E     E              ", "              E     E              ", "              E     E              ", "              E     E              ", "              E     E              ", "              E     E              ", "              E     E              ", "              E     E              ", "                                   ", "                                   ", "                FFF                ", "                                   ", "                                   ", "            H         H            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                FFF                ", "                                   ", "                                   ", "                                   ", "                                   ", "       H                   H       ", "                                   ", "                                   ", "                                   ", "                                   ", "                XXX                ", "                X~X                ", "  D             XXX             D  ", " FFF       VFFFFFFFFFFFV       FFF ", " AAAAAAAAGGGAAAAAAAAAAAGGGAAAAAAAA ")
                    .aisle
                    .aisle("                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                E E                ", "               DE ED               ", "               DE ED               ", "               DE ED               ", "               DE ED               ", "               DE ED               ", "               DE ED               ", "               DE ED               ", "               DE ED               ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "             HH     HH             ", "            E         E            ", "            E         E            ", "            E         E            ", "            E         E            ", "            E         E            ", "            E         E            ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "        H                 H        ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "  D                             D  ", " FFF          FFFFFFF          FFF ", " AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA ")
                    .aisle
                    .aisle("                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                E E                ", "               DE ED               ", "               DE ED               ", "               DE ED               ", "               DE ED               ", "               DE ED               ", "          E             E          ", "          E             E          ", "          E             E          ", "          E             E          ", "          E             E          ", "         HE             EH         ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "                                   ", "   D                           D   ", "  FFF                         FFF  ", "  AAAAAAAAAAAGGGAAAGGGAAAAAAAAAAA  ")
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .where("~", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("X", Predicates.blocks(GTLBlocks.SPACE_ELEVATOR_MECHANICAL_CASING.get())
                            .or(Predicates.abilities(PartAbility.INPUT_ENERGY).setExactLimit(1))
                            .or(Predicates.abilities(PartAbility.IMPORT_ITEMS).setExactLimit(1))
                            .or(Predicates.abilities(PartAbility.COMPUTATION_DATA_RECEPTION).setExactLimit(1))
                            .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where("E", Predicates.blocks(GTLBlocks.SPACE_ELEVATOR_SUPPORT.get()))
                    .where("H", Predicates.blocks(ChemicalHelper.getBlock(TagPrefix.frameGt, GTMaterials.Neutronium)))
                    .where("F", Predicates.blocks(Registries.getBlock("kubejs:space_elevator_internal_support")))
                    .where("C", GTLPredicates.tierActiveCasings(GTLBlocks.sepmmap, "SEPMTier"))
                    .where("A", Predicates.blocks(Registries.getBlock("kubejs:high_strength_concrete")))
                    .where("D", Predicates.blocks(GTLBlocks.SPACE_ELEVATOR_MECHANICAL_CASING.get()))
                    .where("M", Predicates.blocks(GTLBlocks.POWER_CORE.get()))
                    .where("G", Predicates.blocks(Registries.getBlock("kubejs:module_base")))
                    .where("V", Predicates.any().or(Predicates.blocks(Registries.getBlock("kubejs:module_connector")).setPreviewCount(1)))
                    .where("-", Predicates.air())
                    .where(" ", Predicates.any())
                    .build())
            .renderer(SpaceElevatorRenderer::new)
            .hasTESR(true)
            .register();

    public final static MultiblockMachineDefinition SLAUGHTERHOUSE = REGISTRATE.multiblock("slaughterhouse", SlaughterhouseMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .allowExtendedFacing(false)
            .recipeModifier(GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(new OverclockingLogic(1, 4, false)))
            .appearanceBlock(GTBlocks.CASING_STEEL_SOLID)
            .recipeType(GTLRecipeTypes.SLAUGHTERHOUSE_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.slaughterhouse.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.slaughterhouse.tooltip.1"))
            .tooltips(Component.translatable("gtceu.machine.slaughterhouse.tooltip.2"))
            .tooltips(Component.translatable("gtceu.machine.slaughterhouse.tooltip.3"))
            .tooltips(Component.translatable("gtceu.machine.slaughterhouse.tooltip.4"))
            .tooltips(Component.translatable("gtceu.machine.slaughterhouse.tooltip.5"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.slaughterhouse")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAAAA", "AAAAAAA", "ABBBBBA", "ABBBBBA", "ABBBBBA", "ABBBBBA", "ABBBBBA", "ABBBBBA", "ABBBBBA", "AAAAAAA")
                    .aisle("AAAAAAA", "ACCCCCA", "BDDDDDB", "BDDDDDB", "BDDDDDB", "BDDDDDB", "BDDDDDB", "BDDDDDB", "BEEEEEB", "AAAAAAA")
                    .aisle("AAAAAAA", "ACCCCCA", "BD   DB", "BD   DB", "BD   DB", "BD   DB", "BD   DB", "BD   DB", "BEEEEEB", "AAAAAAA")
                    .aisle("AAAAAAA", "ACCCCCA", "BD   DB", "BD   DB", "BD   DB", "BD   DB", "BD   DB", "BD   DB", "BEEEEEB", "AAAAAAA")
                    .aisle("AAAAAAA", "ACCCCCA", "BD   DB", "BD   DB", "BD   DB", "BD   DB", "BD   DB", "BD   DB", "BEEEEEB", "AAAAAAA")
                    .aisle("AAAAAAA", "ACCCCCA", "BDDDDDB", "BDDDDDB", "BDDDDDB", "BDDDDDB", "BDDDDDB", "BDDDDDB", "BEEEEEB", "AAAAAAA")
                    .aisle("AAAAAAA", "AAA~AAA", "ABBBBBA", "ABBBBBA", "ABBBBBA", "ABBBBBA", "ABBBBBA", "ABBBBBA", "ABBBBBA", "AAAAAAA")
                    .where("~", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("A", Predicates.blocks(GTBlocks.CASING_STEEL_SOLID.get())
                            .or(Predicates.abilities(PartAbility.INPUT_ENERGY).setMaxGlobalLimited(2))
                            .or(Predicates.abilities(PartAbility.EXPORT_ITEMS).setMaxGlobalLimited(4))
                            .or(Predicates.abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where("B", Predicates.blocks(GTBlocks.CASING_TEMPERED_GLASS.get()))
                    .where("C", Predicates.blocks(GTBlocks.CASING_STEEL_GEARBOX.get()))
                    .where("D", Predicates.blocks(Blocks.IRON_BARS))
                    .where("E", Predicates.blocks(GTBlocks.FIREBOX_STEEL.get()))
                    .where(" ", Predicates.air())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_solid_steel"), GTCEu.id("block/multiblock/gcym/large_cutter"))
            .register();

    public static final MultiblockMachineDefinition[] FUSION_REACTOR = GTMachines.registerTieredMultis("fusion_reactor",
            FusionReactorMachine::new, (tier, builder) -> builder
                    .rotationState(RotationState.ALL)
                    .langValue("Fusion Reactor Computer MK %s".formatted(FormattingUtil.toRomanNumeral(tier - 5)))
                    .recipeType(GTRecipeTypes.FUSION_RECIPES)
                    .recipeModifiers(GTRecipeModifiers.DEFAULT_ENVIRONMENT_REQUIREMENT,
                            FusionReactorMachine::recipeModifier)
                    .tooltips(
                            Component.translatable("gtceu.machine.fusion_reactor.capacity",
                                    FusionReactorMachine.calculateEnergyStorageFactor(tier, 16) / 1000000L),
                            Component.translatable("gtceu.machine.fusion_reactor.overclocking"),
                            Component.translatable("gtceu.multiblock.%s_fusion_reactor.description"
                                    .formatted(GTValues.VN[tier].toLowerCase(Locale.ROOT))))
                    .tooltipBuilder(GTLMachines.GTL_ADD)
                    .appearanceBlock(() -> GTLFusionCasingBlock.getCasingState(tier))
                    .pattern((definition) -> {
                        var casing = blocks(GTLFusionCasingBlock.getCasingState(tier));
                        return FactoryBlockPattern.start()
                                .aisle("###############", "######OGO######", "###############")
                                .aisle("######ICI######", "####GGAAAGG####", "######ICI######")
                                .aisle("####CC###CC####", "###EAAOGOAAE###", "####CC###CC####")
                                .aisle("###C#######C###", "##EKEG###GEKE##", "###C#######C###")
                                .aisle("##C#########C##", "#GAE#######EAG#", "##C#########C##")
                                .aisle("##C#########C##", "#GAG#######GAG#", "##C#########C##")
                                .aisle("#I###########I#", "OAO#########OAO", "#I###########I#")
                                .aisle("#C###########C#", "GAG#########GAG", "#C###########C#")
                                .aisle("#I###########I#", "OAO#########OAO", "#I###########I#")
                                .aisle("##C#########C##", "#GAG#######GAG#", "##C#########C##")
                                .aisle("##C#########C##", "#GAE#######EAG#", "##C#########C##")
                                .aisle("###C#######C###", "##EKEG###GEKE##", "###C#######C###")
                                .aisle("####CC###CC####", "###EAAOGOAAE###", "####CC###CC####")
                                .aisle("######ICI######", "####GGAAAGG####", "######ICI######")
                                .aisle("###############", "######OSO######", "###############")
                                .where('S', controller(blocks(definition.get())))
                                .where('G', blocks(GTBlocks.FUSION_GLASS.get()).or(casing))
                                .where('E', casing.or(
                                        blocks(PartAbility.INPUT_ENERGY.getBlockRange(tier, GTValues.UEV).toArray(Block[]::new))
                                                .setMinGlobalLimited(1).setPreviewCount(16)))
                                .where('C', casing)
                                .where('K', blocks(GTLFusionCasingBlock.getCoilState(tier)))
                                .where('O', casing.or(abilities(PartAbility.EXPORT_FLUIDS)))
                                .where('A', air())
                                .where('I', casing.or(abilities(PartAbility.IMPORT_FLUIDS).setMinGlobalLimited(2)))
                                .where('#', any())
                                .build();
                    })
                    .shapeInfos((controller) -> {
                        List<MultiblockShapeInfo> shapeInfos = new ArrayList<>();

                        MultiblockShapeInfo.ShapeInfoBuilder baseBuilder = MultiblockShapeInfo.builder()
                                .aisle("###############", "######NMN######", "###############")
                                .aisle("######DCD######", "####GG###GG####", "######UCU######")
                                .aisle("####CC###CC####", "###w##SGS##e###", "####CC###CC####")
                                .aisle("###C#######C###", "##nKsG###GsKn##", "###C#######C###")
                                .aisle("##C#########C##", "#G#e#######w#G#", "##C#########C##")
                                .aisle("##C#########C##", "#G#G#######G#G#", "##C#########C##")
                                .aisle("#D###########D#", "W#E#########W#E", "#U###########U#")
                                .aisle("#C###########C#", "G#G#########G#G", "#C###########C#")
                                .aisle("#D###########D#", "W#E#########W#E", "#U###########U#")
                                .aisle("##C#########C##", "#G#G#######G#G#", "##C#########C##")
                                .aisle("##C#########C##", "#G#e#######w#G#", "##C#########C##")
                                .aisle("###C#######C###", "##sKnG###GnKs##", "###C#######C###")
                                .aisle("####CC###CC####", "###w##NGN##e###", "####CC###CC####")
                                .aisle("######DCD######", "####GG###GG####", "######UCU######")
                                .aisle("###############", "######SGS######", "###############")
                                .where('M', controller, Direction.NORTH)
                                .where('C', GTLFusionCasingBlock.getCasingState(tier))
                                .where('G', GTBlocks.FUSION_GLASS.get())
                                .where('K', GTLFusionCasingBlock.getCoilState(tier))
                                .where('W', GTMachines.FLUID_EXPORT_HATCH[tier], Direction.WEST)
                                .where('E', GTMachines.FLUID_EXPORT_HATCH[tier], Direction.EAST)
                                .where('S', GTMachines.FLUID_EXPORT_HATCH[tier], Direction.SOUTH)
                                .where('N', GTMachines.FLUID_EXPORT_HATCH[tier], Direction.NORTH)
                                .where('w', GTMachines.ENERGY_INPUT_HATCH[tier], Direction.WEST)
                                .where('e', GTMachines.ENERGY_INPUT_HATCH[tier], Direction.EAST)
                                .where('s', GTMachines.ENERGY_INPUT_HATCH[tier], Direction.SOUTH)
                                .where('n', GTMachines.ENERGY_INPUT_HATCH[tier], Direction.NORTH)
                                .where('U', GTMachines.FLUID_IMPORT_HATCH[tier], Direction.UP)
                                .where('D', GTMachines.FLUID_IMPORT_HATCH[tier], Direction.DOWN)
                                .where('#', Blocks.AIR.defaultBlockState());

                        shapeInfos.add(baseBuilder.shallowCopy()
                                .where('G', GTLFusionCasingBlock.getCasingState(tier))
                                .build());
                        shapeInfos.add(baseBuilder.build());
                        return shapeInfos;
                    })
                    .renderer(() -> new FusionReactorRenderer(GTLFusionCasingBlock.getCasingType(tier).getTexture(),
                            GTCEu.id("block/multiblock/fusion_reactor")))
                    .hasTESR(true)
                    .register(),
            GTValues.UHV, GTValues.UEV);

    public static final MultiblockMachineDefinition[] COMPRESSED_FUSION_REACTOR = GTMachines.registerTieredMultis("compressed_fusion_reactor",
            (holder, tier) -> new FusionReactorMachine(holder, tier) {

                @Override
                public long getMaxVoltage() {
                    return super.getOverclockVoltage();
                }
            }, (tier, builder) -> builder
                    .rotationState(RotationState.ALL)
                    .langValue("Fusion Reactor Computer MK %s".formatted(FormattingUtil.toRomanNumeral(tier - 5)))
                    .recipeType(GTRecipeTypes.FUSION_RECIPES)
                    .recipeModifiers(GTRecipeModifiers.PARALLEL_HATCH, FusionReactorMachine::recipeModifier)
                    .tooltips(
                            Component.translatable("gtceu.machine.fusion_reactor.capacity",
                                    FusionReactorMachine.calculateEnergyStorageFactor(tier, 16) / 1000000L),
                            Component.translatable("gtceu.machine.fusion_reactor.overclocking"))
                    .tooltips(Component.translatable("gtceu.multiblock.laser.tooltip"))
                    .tooltips(Component.translatable("gtceu.multiblock.parallelizable.tooltip"))
                    .tooltipBuilder(GTLMachines.GTL_ADD)
                    .appearanceBlock(() -> GTLFusionCasingBlock.getCasingState(tier))
                    .pattern((definition) -> {
                        var casing = blocks(GTLFusionCasingBlock.getCasingState(tier));
                        return FactoryBlockPattern.start()
                                .aisle("                                               ", "                                               ", "                    FCCCCCF                    ", "                    FCIBICF                    ", "                    FCCCCCF                    ", "                                               ", "                                               ")
                                .aisle("                                               ", "                    FCBBBCF                    ", "                   CC#####CC                   ", "                   CC#####CC                   ", "                   CC#####CC                   ", "                    FCBBBCF                    ", "                                               ")
                                .aisle("                    FCBBBCF                    ", "                   CC#####CC                   ", "                CCCCC#####CCCCC                ", "                CCCHHHHHHHHHCCC                ", "                CCCCC#####CCCCC                ", "                   CC#####CC                   ", "                    FCBBBCF                    ")
                                .aisle("                    FCIBICF                    ", "                CCCCC#####CCCCC                ", "              CCCCCHHHHHHHHHCCCCC              ", "              CCHHHHHHHHHHHHHHHCC              ", "              CCCCCHHHHHHHHHCCCCC              ", "                CCCCC#####CCCCC                ", "                    FCIBICF                    ")
                                .aisle("                    FCBBBCF                    ", "              CCCCCCC#####CCCCCCC              ", "            CCCCHHHCC#####CCHHHCCCC            ", "            CCHHHHHHHHHHHHHHHHHHHCC            ", "            CCCCHHHCC#####CCHHHCCCC            ", "              CCCCCCC#####CCCCCCC              ", "                    FCBBBCF                    ")
                                .aisle("                                               ", "            CCCCCCC FCBBBCF CCCCCCC            ", "           CCCHHCCCCC#####CCCCCHHCCC           ", "           CHHHHHHHCC#####CCHHHHHHHC           ", "           CCCHHCCCCC#####CCCCCHHCCC           ", "            CCCCCCC FCBBBCF CCCCCCC            ", "                                               ")
                                .aisle("                                               ", "           CCCCC               CCCCC           ", "          CCHHCCCCC FCCCCCF CCCCCHHCC          ", "          CHHHHHCCC FCIBICF CCCHHHHHC          ", "          CCHHCCCCC FCCCCCF CCCCCHHCC          ", "           CCCCC               CCCCC           ", "                                               ")
                                .aisle("                                               ", "          CCCC                   CCCC          ", "         CCHCCCC               CCCCHCC         ", "         CHHHHCC               CCHHHHC         ", "         CCHCCCC               CCCCHCC         ", "          CCCC                   CCCC          ", "                                               ")
                                .aisle("                                               ", "         CCC                       CCC         ", "        CCHCCC                   CCCHCC        ", "        CHHHCC                   CCHHHC        ", "        CCHCCC                   CCCHCC        ", "         CCC                       CCC         ", "                                               ")
                                .aisle("                                               ", "        CCC                         CCC        ", "       CCHCE                       ECHCC       ", "       CHHHC                       CHHHC       ", "       CCHCE                       ECHCC       ", "        CCC                         CCC        ", "                                               ")
                                .aisle("                                               ", "       CCC                           CCC       ", "      CCHCC                         CCHCC      ", "      CHHHC                         CHHHC      ", "      CCHCC                         CCHCC      ", "       CCC                           CCC       ", "                                               ")
                                .aisle("                                               ", "      CCC                             CCC      ", "     CCHCE                           ECHCC     ", "     CHHHC                           CHHHC     ", "     CCHCE                           ECHCC     ", "      CCC                             CCC      ", "                                               ")
                                .aisle("                                               ", "     CCC                               CCC     ", "    CCHCC                             CCHCC    ", "    CHHHC                             CHHHC    ", "    CCHCC                             CCHCC    ", "     CCC                               CCC     ", "                                               ")
                                .aisle("                                               ", "     CCC                               CCC     ", "    CCHCC                             CCHCC    ", "    CHHHC                             CHHHC    ", "    CCHCC                             CCHCC    ", "     CCC                               CCC     ", "                                               ")
                                .aisle("                                               ", "    CCC                                 CCC    ", "   CCHCC                               CCHCC   ", "   CHHHC                               CHHHC   ", "   CCHCC                               CCHCC   ", "    CCC                                 CCC    ", "                                               ")
                                .aisle("                                               ", "    CCC                                 CCC    ", "   CCHCC                               CCHCC   ", "   CHHHC                               CHHHC   ", "   CCHCC                               CCHCC   ", "    CCC                                 CCC    ", "                                               ")
                                .aisle("                                               ", "   CCC                                   CCC   ", "  CCHCC                                 CCHCC  ", "  CHHHC                                 CHHHC  ", "  CCHCC                                 CCHCC  ", "   CCC                                   CCC   ", "                                               ")
                                .aisle("                                               ", "   CCC                                   CCC   ", "  CCHCC                                 CCHCC  ", "  CHHHC                                 CHHHC  ", "  CCHCC                                 CCHCC  ", "   CCC                                   CCC   ", "                                               ")
                                .aisle("                                               ", "   CCC                                   CCC   ", "  CCHCC                                 CCHCC  ", "  CHHHC                                 CHHHC  ", "  CCHCC                                 CCHCC  ", "   CCC                                   CCC   ", "                                               ")
                                .aisle("                                               ", "  CCC                                     CCC  ", " CCHCC                                   CCHCC ", " CHHHC                                   CHHHC ", " CCHCC                                   CCHCC ", "  CCC                                     CCC  ", "                                               ")
                                .aisle("  FFF                                     FFF  ", " FCCCF                                   FCCCF ", "FCCHCCF                                 FCCHCCF", "FCHHHCF                                 FCHHHCF", "FCCHCCF                                 FCCHCCF", " FCCCF                                   FCCCF ", "  FFF                                     FFF  ")
                                .aisle("  CCC                                     CCC  ", " C###C                                   C###C ", "C##H##C                                 C##H##C", "C#HHH#C                                 C#HHH#C", "C##H##C                                 C##H##C", " C###C                                   C###C ", "  CCC                                     CCC  ")
                                .aisle("  CIC                                     CIC  ", " B###B                                   B###B ", "C##H##C                                 C##H##C", "I#HHH#I                                 I#HHH#I", "C##H##C                                 C##H##C", " B###B                                   B###B ", "  CIC                                     CIC  ")
                                .aisle("  CBC                                     CBC  ", " B###B                                   B###B ", "C##H##C                                 C##H##C", "B#HHH#B                                 B#HHH#B", "C##H##C                                 C##H##C", " B###B                                   B###B ", "  CBC                                     CBC  ")
                                .aisle("  CIC                                     CIC  ", " B###B                                   B###B ", "C##H##C                                 C##H##C", "I#HHH#I                                 I#HHH#I", "C##H##C                                 C##H##C", " B###B                                   B###B ", "  CIC                                     CIC  ")
                                .aisle("  CCC                                     CCC  ", " C###C                                   C###C ", "C##H##C                                 C##H##C", "C#HHH#C                                 C#HHH#C", "C##H##C                                 C##H##C", " C###C                                   C###C ", "  CCC                                     CCC  ")
                                .aisle("  FFF                                     FFF  ", " FCCCF                                   FCCCF ", "FCCHCCF                                 FCCHCCF", "FCHHHCF                                 FCHHHCF", "FCCHCCF                                 FCCHCCF", " FCCCF                                   FCCCF ", "  FFF                                     FFF  ")
                                .aisle("                                               ", "  CCC                                     CCC  ", " CCHCC                                   CCHCC ", " CHHHC                                   CHHHC ", " CCHCC                                   CCHCC ", "  CCC                                     CCC  ", "                                               ")
                                .aisle("                                               ", "   CCC                                   CCC   ", "  CCHCC                                 CCHCC  ", "  CHHHC                                 CHHHC  ", "  CCHCC                                 CCHCC  ", "   CCC                                   CCC   ", "                                               ")
                                .aisle("                                               ", "   CCC                                   CCC   ", "  CCHCC                                 CCHCC  ", "  CHHHC                                 CHHHC  ", "  CCHCC                                 CCHCC  ", "   CCC                                   CCC   ", "                                               ")
                                .aisle("                                               ", "   CCC                                   CCC   ", "  CCHCC                                 CCHCC  ", "  CHHHC                                 CHHHC  ", "  CCHCC                                 CCHCC  ", "   CCC                                   CCC   ", "                                               ")
                                .aisle("                                               ", "    CCC                                 CCC    ", "   CCHCC                               CCHCC   ", "   CHHHC                               CHHHC   ", "   CCHCC                               CCHCC   ", "    CCC                                 CCC    ", "                                               ")
                                .aisle("                                               ", "    CCC                                 CCC    ", "   CCHCC                               CCHCC   ", "   CHHHC                               CHHHC   ", "   CCHCC                               CCHCC   ", "    CCC                                 CCC    ", "                                               ")
                                .aisle("                                               ", "     CCC                               CCC     ", "    CCHCC                             CCHCC    ", "    CHHHC                             CHHHC    ", "    CCHCC                             CCHCC    ", "     CCC                               CCC     ", "                                               ")
                                .aisle("                                               ", "     CCC                               CCC     ", "    CCHCC                             CCHCC    ", "    CHHHC                             CHHHC    ", "    CCHCC                             CCHCC    ", "     CCC                               CCC     ", "                                               ")
                                .aisle("                                               ", "      CCC                             CCC      ", "     CCHCE                           ECHCC     ", "     CHHHC                           CHHHC     ", "     CCHCE                           ECHCC     ", "      CCC                             CCC      ", "                                               ")
                                .aisle("                                               ", "       CCC                           CCC       ", "      CCHCC                         CCHCC      ", "      CHHHC                         CHHHC      ", "      CCHCC                         CCHCC      ", "       CCC                           CCC       ", "                                               ")
                                .aisle("                                               ", "        CCC                         CCC        ", "       CCHCE                       ECHCC       ", "       CHHHC                       CHHHC       ", "       CCHCE                       ECHCC       ", "        CCC                         CCC        ", "                                               ")
                                .aisle("                                               ", "         CCC                       CCC         ", "        CCHCCC                   CCCHCC        ", "        CHHHCC                   CCHHHC        ", "        CCHCCC                   CCCHCC        ", "         CCC                       CCC         ", "                                               ")
                                .aisle("                                               ", "          CCCC                   CCCC          ", "         CCHCCCC               CCCCHCC         ", "         CHHHHCC               CCHHHHC         ", "         CCHCCCC               CCCCHCC         ", "          CCCC                   CCCC          ", "                                               ")
                                .aisle("                                               ", "           CCCCC               CCCCC           ", "          CCHHCCCCC FCCCCCF CCCCCHHCC          ", "          CHHHHHCCC FCIBICF CCCHHHHHC          ", "          CCHHCCCCC FCCCCCF CCCCCHHCC          ", "           CCCCC               CCCCC           ", "                                               ")
                                .aisle("                                               ", "            CCCCCCC FCBBBCF CCCCCCC            ", "           CCCHHCCCCC#####CCCCCHHCCC           ", "           CHHHHHHHCC#####CCHHHHHHHC           ", "           CCCHHCCCCC#####CCCCCHHCCC           ", "            CCCCCCC FCBBBCF CCCCCCC            ", "                                               ")
                                .aisle("                    FCBBBCF                    ", "              CCCCCCC#####CCCCCCC              ", "            CCCCHHHCC#####CCHHHCCCC            ", "            CCHHHHHHHHHHHHHHHHHHHCC            ", "            CCCCHHHCC#####CCHHHCCCC            ", "              CCCCCCC#####CCCCCCC              ", "                    FCBBBCF                    ")
                                .aisle("                    FCIBICF                    ", "                CCCCC#####CCCCC                ", "              CCCCCHHHHHHHHHCCCCC              ", "              CCHHHHHHHHHHHHHHHCC              ", "              CCCCCHHHHHHHHHCCCCC              ", "                CCCCC#####CCCCC                ", "                    FCIBICF                    ")
                                .aisle("                    FCBBBCF                    ", "                   CC#####CC                   ", "                CCCCC#####CCCCC                ", "                CCCHHHHHHHHHCCC                ", "                CCCCC#####CCCCC                ", "                   CC#####CC                   ", "                    FCBBBCF                    ")
                                .aisle("                                               ", "                    FCBBBCF                    ", "                   CC#####CC                   ", "                   CC#####CC                   ", "                   CC#####CC                   ", "                    FCBBBCF                    ", "                                               ")
                                .aisle("                                               ", "                                               ", "                    FCPPPCF                    ", "                    FCISICF                    ", "                    FCPPPCF                    ", "                                               ", "                                               ")
                                .where('S', controller(blocks(definition.get())))
                                .where('B', blocks(GTBlocks.FUSION_GLASS.get()))
                                .where('C', casing)
                                .where('P', casing.or(abilities(PartAbility.PARALLEL_HATCH)))
                                .where('I', casing.or(abilities(PartAbility.IMPORT_FLUIDS).setPreviewCount(16))
                                        .or(abilities(PartAbility.EXPORT_FLUIDS).setPreviewCount(16)))
                                .where('F', blocks(GTLFusionCasingBlock.getFrameState(tier)))
                                .where('H', blocks(GTLFusionCasingBlock.getCompressedCoilState(tier)))
                                .where('E', casing.or(abilities(PartAbility.INPUT_ENERGY)).or(abilities(PartAbility.INPUT_LASER).setPreviewCount(16)))
                                .where('#', air())
                                .where(' ', any())
                                .build();
                    })
                    .workableCasingRenderer(GTLFusionCasingBlock.getCasingType(tier).getTexture(), GTCEu.id("block/multiblock/fusion_reactor"))
                    .register(),
            GTValues.LuV, GTValues.ZPM, GTValues.UV, GTValues.UHV, GTValues.UEV);

    public final static MultiblockMachineDefinition SUPER_COMPUTATION = REGISTRATE.multiblock("super_computation", (holder) -> new ComputationProviderMachine(holder, false))
            .rotationState(RotationState.NONE)
            .allowExtendedFacing(false)
            .allowFlip(false)
            .recipeType(GTRecipeTypes.DUMMY_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.super_computation.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.super_computation.tooltip.1"))
            .tooltips(Component.translatable("gtceu.machine.super_computation.tooltip.2"))
            .tooltips(Component.translatable("gtceu.machine.super_computation.tooltip.3"))
            .tooltips(Component.translatable("gtceu.machine.super_computation.tooltip.4"))
            .tooltips(Component.translatable("gtceu.machine.super_computation.tooltip.5"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.super_computation")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .appearanceBlock(GTBlocks.COMPUTER_CASING)
            .recipeModifier(GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK_SUBTICK))
            .pattern((definition) -> FactoryBlockPattern.start()
                    .aisle("    aaaaaaa    ", "    abbbbba    ", "    abbbbba    ", "    abbbbba    ", "    aaaaaaa    ", "    abbbbba    ", "    abbbbba    ", "    abbbbba    ", "    aaaaaaa    ")
                    .aisle("   aaaaaaaaa   ", "   adedededa   ", "   adedededa   ", "   adedededa   ", "   afffffffa   ", "   adedededa   ", "   adedededa   ", "   adedededa   ", "   aaaaaaaaa   ")
                    .aisle("  aaaaaaaaaaa  ", "  addedededda  ", "  addedededda  ", "  addedededda  ", "  afffffffffa  ", "  addedededda  ", "  addedededda  ", "  addedededda  ", "  aaaaaaaaaaa  ")
                    .aisle(" aaaaaaaaaaaaa ", " adddedededdda ", " adddedededdda ", " adddedededdda ", " afffffffffffa ", " adddedededdda ", " adddedededdda ", " adddedededdda ", " aaaaaaaaaaaaa ")
                    .aisle("aaaaaaaaaaaaaaa", "addd       ddda", "addd       ddda", "addd       ddda", "afff       fffa", "addd       ddda", "addd       ddda", "adddcccccccddda", "aaaagggagggaaaa")
                    .aisle("aaaaaaaaaaaaaaa", "beee       eeeb", "beee       eeeb", "beee       eeeb", "afff       fffa", "beee       eeeb", "beee       eeeb", "beeeccccccceeeb", "aaaagggagggaaaa")
                    .aisle("aaaaaaaaaaaaaaa", "bddd       dddb", "bddd       dddb", "bddd       dddb", "afff       fffa", "bddd       dddb", "bddd       dddb", "bdddcccccccdddb", "aaaagggagggaaaa")
                    .aisle("aaaaaaaaaaaaaaa", "beee       eeeb", "beee       eeeb", "beee       eeeb", "afff       fffa", "beee       eeeb", "beee       eeeb", "beeeccccccceeeb", "aaaaaaa~aaaaaaa")
                    .aisle("aaaaaaaaaaaaaaa", "bddd       dddb", "bddd       dddb", "bddd       dddb", "afff       fffa", "bddd       dddb", "bddd       dddb", "bdddcccccccdddb", "aaaagggagggaaaa")
                    .aisle("aaaaaaaaaaaaaaa", "beee       eeeb", "beee       eeeb", "beee       eeeb", "afff       fffa", "beee       eeeb", "beee       eeeb", "beeeccccccceeeb", "aaaagggagggaaaa")
                    .aisle("aaaaaaaaaaaaaaa", "addd       ddda", "addd       ddda", "addd       ddda", "afff       fffa", "addd       ddda", "addd       ddda", "adddcccccccddda", "aaaagggagggaaaa")
                    .aisle(" aaaaaaaaaaaaa ", " adddedededdda ", " adddedededdda ", " adddedededdda ", " afffffffffffa ", " adddedededdda ", " adddedededdda ", " adddedededdda ", " aaaaaaaaaaaaa ")
                    .aisle("  aaaaaaaaaaa  ", "  addedededda  ", "  addedededda  ", "  addedededda  ", "  afffffffffa  ", "  addedededda  ", "  addedededda  ", "  addedededda  ", "  aaaaaaaaaaa  ")
                    .aisle("   aaaaaaaaa   ", "   adedededa   ", "   adedededa   ", "   adedededa   ", "   afffffffa   ", "   adedededa   ", "   adedededa   ", "   adedededa   ", "   aaaaaaaaa   ")
                    .aisle("    aaaaaaa    ", "    abbbbba    ", "    abbbbba    ", "    abbbbba    ", "    aaaaaaa    ", "    abbbbba    ", "    abbbbba    ", "    abbbbba    ", "    aaaaaaa    ")
                    .where("~", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("a", Predicates.blocks(GTBlocks.COMPUTER_CASING.get())
                            .or(Predicates.abilities(PartAbility.COMPUTATION_DATA_TRANSMISSION).setExactLimit(1))
                            .or(Predicates.abilities(PartAbility.INPUT_ENERGY).setMaxGlobalLimited(2))
                            .or(Predicates.abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where("b", Predicates.blocks(GTBlocks.COMPUTER_HEAT_VENT.get()))
                    .where("c", Predicates.fluids(Registries.getFluid("kubejs:gelid_cryotheum")))
                    .where("d", Predicates.blocks(GTLBlocks.SUPER_COOLER_COMPONENT.get()))
                    .where("e", Predicates.blocks(GTLBlocks.SUPER_COMPUTATION_COMPONENT.get()))
                    .where("f", Predicates.blocks(GTBlocks.ADVANCED_COMPUTER_CASING.get()))
                    .where("g", Predicates.blocks(GTBlocks.CASING_LAMINATED_GLASS.get()))
                    .where(" ", Predicates.any())
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/hpca/computer_casing/back"), GTCEu.id("block/multiblock/super_computation"))
            .register();

    public final static MultiblockMachineDefinition CREATE_COMPUTATION = REGISTRATE.multiblock("create_computation", (holder) -> new ComputationProviderMachine(holder, true))
            .rotationState(RotationState.ALL)
            .recipeType(GTRecipeTypes.DUMMY_RECIPES)
            .tooltips(Component.translatable("gtceu.machine.create_computation.tooltip.0"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.super_computation")))
            .tooltipBuilder(GTLMachines.GTL_ADD)
            .appearanceBlock(GTBlocks.ADVANCED_COMPUTER_CASING)
            .recipeModifier(GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK_SUBTICK))
            .pattern((definition) -> FactoryBlockPattern.start()
                    .aisle("aa", "bb", "bb", "bb", "aa")
                    .aisle("aa", "cc", "cc", "cc", "aa")
                    .aisle("aa", "cc", "cc", "cc", "aa")
                    .aisle("aa", "cc", "cc", "cc", "aa")
                    .aisle("~a", "bb", "bb", "bb", "aa")
                    .where("~", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("b", Predicates.blocks(GTBlocks.ADVANCED_COMPUTER_CASING.get())
                            .or(Predicates.abilities(PartAbility.COMPUTATION_DATA_TRANSMISSION).setExactLimit(1))
                            .or(Predicates.abilities(PartAbility.INPUT_ENERGY).setMaxGlobalLimited(1)))
                    .where("a", Predicates.blocks(GTBlocks.ADVANCED_COMPUTER_CASING.get()))
                    .where("c", Predicates.blocks(Registries.getBlock("kubejs:create_hpca_component")))
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/hpca/advanced_computer_casing/back"), GTCEu.id("block/multiblock/hpca"))
            .register();
}
